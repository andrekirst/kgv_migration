apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
  namespace: kgv-system
  labels:
    app.kubernetes.io/name: app-secrets
    app.kubernetes.io/part-of: kgv-migration
    app.kubernetes.io/managed-by: kustomize
type: Opaque
stringData:
  # JWT Secret - Replace with actual secret in production
  JWT_SECRET: "your-super-secret-jwt-key-that-should-be-at-least-32-characters-long"
  
  # NextAuth Secret - Replace with actual secret in production
  NEXTAUTH_SECRET: "your-nextauth-secret-key-that-should-be-secure-and-random"
  
  # Encryption keys for sensitive data
  ENCRYPTION_KEY: "your-32-character-encryption-key123"
  
  # API Keys (if needed)
  EXTERNAL_API_KEY: "your-external-api-key-if-needed"
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: kgv-system
  labels:
    app.kubernetes.io/name: postgres-secret
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: kgv-migration
    app.kubernetes.io/managed-by: kustomize
type: Opaque
stringData:
  # PostgreSQL credentials - Replace with actual credentials in production
  POSTGRES_PASSWORD: "your-secure-postgres-password"
  POSTGRES_USER: "kgv_admin"
  POSTGRES_DB: "kgv_production"
  
  # Connection string for applications
  connection-string: "Host=postgres.kgv-system.svc.cluster.local;Database=kgv_production;Username=kgv_admin;Password=your-secure-postgres-password;Port=5432;Pooling=true;MinPoolSize=5;MaxPoolSize=100;CommandTimeout=300;SSL Mode=Prefer;Trust Server Certificate=true;"
  
  # Backup user credentials
  BACKUP_USER: "backup_user"
  BACKUP_PASSWORD: "your-secure-backup-password"
---
apiVersion: v1
kind: Secret
metadata:
  name: redis-secret
  namespace: kgv-system
  labels:
    app.kubernetes.io/name: redis-secret
    app.kubernetes.io/component: cache
    app.kubernetes.io/part-of: kgv-migration
    app.kubernetes.io/managed-by: kustomize
type: Opaque
stringData:
  # Redis credentials - Replace with actual credentials in production
  REDIS_PASSWORD: "your-secure-redis-password"
  
  # Connection string for applications
  connection-string: "redis.kgv-system.svc.cluster.local:6379,password=your-secure-redis-password,ConnectTimeout=5000,SyncTimeout=5000,AsyncTimeout=5000,ConnectRetry=3,ReconnectRetryPolicy=ExponentialBackoff"
---
apiVersion: v1
kind: Secret
metadata:
  name: tls-secret
  namespace: kgv-system
  labels:
    app.kubernetes.io/name: tls-secret
    app.kubernetes.io/part-of: kgv-migration
    app.kubernetes.io/managed-by: kustomize
type: kubernetes.io/tls
stringData:
  # TLS Certificate - Replace with actual certificate in production
  tls.crt: |
    -----BEGIN CERTIFICATE-----
    # Your TLS certificate here
    # This is a placeholder - replace with actual certificate
    -----END CERTIFICATE-----
  tls.key: |
    -----BEGIN PRIVATE KEY-----
    # Your TLS private key here
    # This is a placeholder - replace with actual private key
    -----END PRIVATE KEY-----
---
apiVersion: v1
kind: Secret
metadata:
  name: registry-secret
  namespace: kgv-system
  labels:
    app.kubernetes.io/name: registry-secret
    app.kubernetes.io/part-of: kgv-migration
    app.kubernetes.io/managed-by: kustomize
type: kubernetes.io/dockerconfigjson
stringData:
  .dockerconfigjson: |
    {
      "auths": {
        "acrkgvprod.azurecr.io": {
          "username": "your-registry-username",
          "password": "your-registry-password",
          "auth": "base64-encoded-username:password"
        }
      }
    }