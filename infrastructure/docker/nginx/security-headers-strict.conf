# Strict Security Headers Configuration for KGV Migration
# Production-grade security headers with maximum protection

# Prevent clickjacking attacks
add_header X-Frame-Options "DENY" always;

# Prevent MIME type sniffing
add_header X-Content-Type-Options "nosniff" always;

# XSS protection (disabled as per modern best practice)
add_header X-XSS-Protection "0" always;

# Referrer policy for privacy
add_header Referrer-Policy "strict-origin-when-cross-origin" always;

# Permissions Policy (restrict all features by default)
add_header Permissions-Policy "accelerometer=(), ambient-light-sensor=(), autoplay=(), battery=(), camera=(), cross-origin-isolated=(), display-capture=(), document-domain=(), encrypted-media=(), execution-while-not-rendered=(), execution-while-out-of-viewport=(), fullscreen=(self), geolocation=(), gyroscope=(), keyboard-map=(), magnetometer=(), microphone=(), midi=(), navigation-override=(), payment=(), picture-in-picture=(), publickey-credentials-get=(), screen-wake-lock=(), sync-xhr=(), usb=(), web-share=(), xr-spatial-tracking=(), interest-cohort=()" always;

# Cross-Origin policies
add_header Cross-Origin-Embedder-Policy "require-corp" always;
add_header Cross-Origin-Opener-Policy "same-origin" always;
add_header Cross-Origin-Resource-Policy "same-origin" always;

# Strict Transport Security (HSTS) - Only for HTTPS
# Preload ready - register at hstspreload.org
add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

# Content Security Policy - Strict with nonce support
set $csp_default "default-src 'none'";
set $csp_script "script-src 'self' 'nonce-$request_id' 'strict-dynamic'";
set $csp_style "style-src 'self' 'nonce-$request_id'";
set $csp_img "img-src 'self' data: https:";
set $csp_font "font-src 'self' data:";
set $csp_connect "connect-src 'self' https://api.kgv.example.com wss://api.kgv.example.com";
set $csp_media "media-src 'none'";
set $csp_object "object-src 'none'";
set $csp_child "child-src 'none'";
set $csp_frame "frame-src 'none'";
set $csp_worker "worker-src 'self' blob:";
set $csp_frame_ancestors "frame-ancestors 'none'";
set $csp_base "base-uri 'self'";
set $csp_form "form-action 'self'";
set $csp_manifest "manifest-src 'self'";
set $csp_upgrade "upgrade-insecure-requests";
set $csp_block_mixed "block-all-mixed-content";
set $csp_sandbox "sandbox allow-forms allow-same-origin allow-scripts";
set $csp_report "report-uri https://kgv.example.com/api/csp-report; report-to csp-endpoint";

# Combine CSP directives
set $csp "${csp_default}; ${csp_script}; ${csp_style}; ${csp_img}; ${csp_font}; ${csp_connect}; ${csp_media}; ${csp_object}; ${csp_child}; ${csp_frame}; ${csp_worker}; ${csp_frame_ancestors}; ${csp_base}; ${csp_form}; ${csp_manifest}; ${csp_upgrade}; ${csp_block_mixed}; ${csp_report}";

# Apply CSP header
add_header Content-Security-Policy $csp always;

# Report-Only CSP for testing (uncomment to test before enforcing)
# add_header Content-Security-Policy-Report-Only $csp always;

# Reporting API configuration
add_header Report-To '{"group":"csp-endpoint","max_age":31536000,"endpoints":[{"url":"https://kgv.example.com/api/csp-report"}]}' always;

# Network Error Logging
add_header NEL '{"report_to":"default","max_age":31536000,"include_subdomains":true}' always;

# Additional security headers for production
add_header X-Permitted-Cross-Domain-Policies "none" always;
add_header X-Download-Options "noopen" always;
add_header X-DNS-Prefetch-Control "off" always;

# Cache control for security-sensitive content
# Override these for static assets
add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0" always;
add_header Pragma "no-cache" always;
add_header Expires "0" always;

# Expect-CT for Certificate Transparency
add_header Expect-CT "max-age=86400, enforce, report-uri=\"https://kgv.example.com/api/ct-report\"" always;

# Clear Site Data (for logout endpoints)
# add_header Clear-Site-Data "\"cache\", \"cookies\", \"storage\", \"executionContexts\"" always;

# Origin-Agent-Cluster
add_header Origin-Agent-Cluster "?1" always;

# Critical-CH (Client Hints)
add_header Critical-CH "Sec-CH-UA-Full-Version-List, Sec-CH-UA-Platform-Version" always;
add_header Accept-CH "Sec-CH-UA-Full-Version-List, Sec-CH-UA-Platform-Version, Sec-CH-UA-Arch, Sec-CH-UA-Model" always;

# Remove unnecessary headers (requires headers-more-nginx-module)
more_clear_headers 'Server';
more_clear_headers 'X-Powered-By';
more_clear_headers 'X-AspNet-Version';
more_clear_headers 'X-AspNetMvc-Version';
more_clear_headers 'X-Drupal-Cache';
more_clear_headers 'X-Drupal-Dynamic-Cache';
more_clear_headers 'X-Generator';
more_clear_headers 'X-Runtime';
more_clear_headers 'X-Rack-Cache';

# Security headers for API responses
map $uri $api_security_headers {
    ~^/api/ 1;
    default 0;
}

# Additional API-specific headers
map $api_security_headers $api_cache_control {
    1 "no-store, no-cache, must-revalidate, private";
    default "";
}

# Apply API-specific headers
add_header Cache-Control $api_cache_control always;

# Timing-Allow-Origin for performance monitoring
# add_header Timing-Allow-Origin "https://monitoring.kgv.example.com" always;

# Note: Some headers may need adjustment based on specific application requirements
# Always test thoroughly in staging before deploying to production