# HTTP to HTTPS redirect
server {
    listen 80;
    server_name _;
    return 301 https://$host$request_uri;
}

# Health check endpoint (HTTP only)
server {
    listen 80;
    server_name localhost;
    
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}

# Main HTTPS server
server {
    listen 443 ssl http2;
    server_name _;
    
    # SSL configuration
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    
    # SSL session configuration
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    
    # Modern SSL configuration (TLS 1.3 only)
    ssl_protocols TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256';
    ssl_prefer_server_ciphers off;
    
    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/nginx/ssl/chain.pem;
    resolver 1.1.1.1 1.0.0.1 valid=300s;
    resolver_timeout 5s;
    
    # Connection and request limits
    limit_conn perip 10;
    limit_conn perserver 100;
    
    # Include comprehensive security headers
    include /etc/nginx/security-headers.conf;
    
    # HSTS for production (HTTPS only)
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    
    # Custom CSP for this application (override defaults)
    set $csp_script "script-src 'self' 'nonce-$request_id'";
    set $csp_style "style-src 'self' 'nonce-$request_id'";
    add_header Content-Security-Policy "${csp_default}; ${csp_script}; ${csp_style}; ${csp_img}; ${csp_font}; ${csp_connect}; ${csp_media}; ${csp_object}; ${csp_frame_anc}; ${csp_base}; ${csp_form}; ${csp_upgrade}" always;

    # API routes
    location /api/ {
        limit_req zone=api burst=10 nodelay;
        
        # Strict rate limiting for authentication endpoints
        location ~ ^/api/(auth|login|register|password-reset|2fa) {
            limit_req zone=login burst=2 nodelay;
            limit_conn perip 2;
            
            proxy_pass http://kgv-api;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }
        
        # Remove /api prefix and proxy to backend
        rewrite ^/api/(.*) /$1 break;
        
        proxy_pass http://kgv-api;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Caching for API responses
        proxy_cache_valid 200 1m;
        proxy_cache_valid 404 10s;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # Health check for API
    location /api/health {
        access_log off;
        
        proxy_pass http://kgv-api/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }

    # Static assets caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://kgv-web;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache static assets for 1 year
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # Gzip is handled at the http level
        gzip_static on;
    }

    # Next.js routes
    location / {
        limit_req zone=web burst=5 nodelay;
        
        proxy_pass http://kgv-web;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache HTML pages for 5 minutes
        proxy_cache_valid 200 5m;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # Error handling
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }
    
    # Security: Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}