/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/layout"],{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22display%5C%22%3A%5C%22swap%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-inter%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fsrc%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fsrc%2Fapp%2Fproviders.tsx%22%2C%22ids%22%3A%5B%22Providers%22%5D%7D&server=false!":
/*!***********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22display%5C%22%3A%5C%22swap%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-inter%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fsrc%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fsrc%2Fapp%2Fproviders.tsx%22%2C%22ids%22%3A%5B%22Providers%22%5D%7D&server=false! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/font/google/target.css?{\"path\":\"src/app/layout.tsx\",\"import\":\"Inter\",\"arguments\":[{\"subsets\":[\"latin\"],\"display\":\"swap\",\"variable\":\"--font-inter\"}],\"variableName\":\"inter\"} */ \"(app-pages-browser)/./node_modules/next/font/google/target.css?{\\\"path\\\":\\\"src/app/layout.tsx\\\",\\\"import\\\":\\\"Inter\\\",\\\"arguments\\\":[{\\\"subsets\\\":[\\\"latin\\\"],\\\"display\\\":\\\"swap\\\",\\\"variable\\\":\\\"--font-inter\\\"}],\\\"variableName\\\":\\\"inter\\\"}\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/globals.css */ \"(app-pages-browser)/./src/app/globals.css\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/providers.tsx */ \"(app-pages-browser)/./src/app/providers.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGaG9tZSUyRmFuZHJla2lyc3QlMkZnaXQlMkZnaXRodWIlMkZhbmRyZWtpcnN0JTJGa2d2X21pZ3JhdGlvbiUyRmZyb250ZW5kJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmZvbnQlMkZnb29nbGUlMkZ0YXJnZXQuY3NzJTNGJTdCJTVDJTIycGF0aCU1QyUyMiUzQSU1QyUyMnNyYyUyRmFwcCUyRmxheW91dC50c3glNUMlMjIlMkMlNUMlMjJpbXBvcnQlNUMlMjIlM0ElNUMlMjJJbnRlciU1QyUyMiUyQyU1QyUyMmFyZ3VtZW50cyU1QyUyMiUzQSU1QiU3QiU1QyUyMnN1YnNldHMlNUMlMjIlM0ElNUIlNUMlMjJsYXRpbiU1QyUyMiU1RCUyQyU1QyUyMmRpc3BsYXklNUMlMjIlM0ElNUMlMjJzd2FwJTVDJTIyJTJDJTVDJTIydmFyaWFibGUlNUMlMjIlM0ElNUMlMjItLWZvbnQtaW50ZXIlNUMlMjIlN0QlNUQlMkMlNUMlMjJ2YXJpYWJsZU5hbWUlNUMlMjIlM0ElNUMlMjJpbnRlciU1QyUyMiU3RCUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZob21lJTJGYW5kcmVraXJzdCUyRmdpdCUyRmdpdGh1YiUyRmFuZHJla2lyc3QlMkZrZ3ZfbWlncmF0aW9uJTJGZnJvbnRlbmQlMkZzcmMlMkZhcHAlMkZnbG9iYWxzLmNzcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZob21lJTJGYW5kcmVraXJzdCUyRmdpdCUyRmdpdGh1YiUyRmFuZHJla2lyc3QlMkZrZ3ZfbWlncmF0aW9uJTJGZnJvbnRlbmQlMkZzcmMlMkZhcHAlMkZwcm92aWRlcnMudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTIyUHJvdmlkZXJzJTIyJTVEJTdEJnNlcnZlcj1mYWxzZSEiLCJtYXBwaW5ncyI6IkFBQUEsd2hCQUEwVDtBQUMxVDtBQUNBLG9LQUFzSDtBQUN0SDtBQUNBLHdLQUF1SiIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL2hvbWUvYW5kcmVraXJzdC9naXQvZ2l0aHViL2FuZHJla2lyc3Qva2d2X21pZ3JhdGlvbi9mcm9udGVuZC9ub2RlX21vZHVsZXMvbmV4dC9mb250L2dvb2dsZS90YXJnZXQuY3NzP3tcXFwicGF0aFxcXCI6XFxcInNyYy9hcHAvbGF5b3V0LnRzeFxcXCIsXFxcImltcG9ydFxcXCI6XFxcIkludGVyXFxcIixcXFwiYXJndW1lbnRzXFxcIjpbe1xcXCJzdWJzZXRzXFxcIjpbXFxcImxhdGluXFxcIl0sXFxcImRpc3BsYXlcXFwiOlxcXCJzd2FwXFxcIixcXFwidmFyaWFibGVcXFwiOlxcXCItLWZvbnQtaW50ZXJcXFwifV0sXFxcInZhcmlhYmxlTmFtZVxcXCI6XFxcImludGVyXFxcIn1cIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9ob21lL2FuZHJla2lyc3QvZ2l0L2dpdGh1Yi9hbmRyZWtpcnN0L2tndl9taWdyYXRpb24vZnJvbnRlbmQvc3JjL2FwcC9nbG9iYWxzLmNzc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiLCB3ZWJwYWNrRXhwb3J0czogW1wiUHJvdmlkZXJzXCJdICovIFwiL2hvbWUvYW5kcmVraXJzdC9naXQvZ2l0aHViL2FuZHJla2lyc3Qva2d2X21pZ3JhdGlvbi9mcm9udGVuZC9zcmMvYXBwL3Byb3ZpZGVycy50c3hcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22display%5C%22%3A%5C%22swap%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-inter%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fsrc%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fsrc%2Fapp%2Fproviders.tsx%22%2C%22ids%22%3A%5B%22Providers%22%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/globals.css":
/*!*****************************!*\
  !*** ./src/app/globals.css ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"29168c8c53f2\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvZ2xvYmFscy5jc3MiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlLGNBQWM7QUFDN0IsSUFBSSxJQUFVLElBQUksaUJBQWlCIiwic291cmNlcyI6WyIvaG9tZS9hbmRyZWtpcnN0L2dpdC9naXRodWIvYW5kcmVraXJzdC9rZ3ZfbWlncmF0aW9uL2Zyb250ZW5kL3NyYy9hcHAvZ2xvYmFscy5jc3MiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCIyOTE2OGM4YzUzZjJcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/providers.tsx":
/*!*******************************!*\
  !*** ./src/app/providers.tsx ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Providers: () => (/* binding */ Providers)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @tanstack/react-query */ \"(app-pages-browser)/./node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js\");\n/* harmony import */ var _tanstack_react_query_devtools__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @tanstack/react-query-devtools */ \"(app-pages-browser)/./node_modules/@tanstack/react-query-devtools/build/modern/index.js\");\n/* harmony import */ var next_themes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next-themes */ \"(app-pages-browser)/./node_modules/next-themes/dist/index.mjs\");\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-hot-toast */ \"(app-pages-browser)/./node_modules/react-hot-toast/dist/index.mjs\");\n/* harmony import */ var _lib_react_query_config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/react-query-config */ \"(app-pages-browser)/./src/lib/react-query-config.ts\");\n/* __next_internal_client_entry_do_not_use__ Providers auto */ \nvar _s = $RefreshSig$();\n// Providers component for global app state and configuration\n\n\n\n\n\n\nfunction Providers({ children }) {\n    _s();\n    // Create QueryClient with comprehensive error handling and German localization\n    const [queryClient] = react__WEBPACK_IMPORTED_MODULE_1__.useState({\n        \"Providers.useState\": ()=>(0,_lib_react_query_config__WEBPACK_IMPORTED_MODULE_4__.createAppQueryClient)()\n    }[\"Providers.useState\"]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_tanstack_react_query__WEBPACK_IMPORTED_MODULE_5__.QueryClientProvider, {\n        client: queryClient,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_themes__WEBPACK_IMPORTED_MODULE_2__.ThemeProvider, {\n            attribute: \"class\",\n            defaultTheme: \"system\",\n            enableSystem: true,\n            storageKey: \"kgv-theme\",\n            disableTransitionOnChange: true,\n            children: [\n                children,\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_hot_toast__WEBPACK_IMPORTED_MODULE_3__.Toaster, {\n                    position: \"top-right\",\n                    reverseOrder: false,\n                    gutter: 8,\n                    containerClassName: \"\",\n                    containerStyle: {},\n                    toastOptions: {\n                        // Styling\n                        className: '',\n                        duration: 5000,\n                        style: {\n                            background: '#ffffff',\n                            color: '#1f2937',\n                            border: '1px solid #e5e7eb',\n                            borderRadius: '0.5rem',\n                            fontSize: '14px',\n                            maxWidth: '400px'\n                        },\n                        // Success toast styling\n                        success: {\n                            duration: 4000,\n                            style: {\n                                background: '#f0fdf4',\n                                border: '1px solid #bbf7d0',\n                                color: '#166534'\n                            },\n                            iconTheme: {\n                                primary: '#22c55e',\n                                secondary: '#f0fdf4'\n                            }\n                        },\n                        // Error toast styling\n                        error: {\n                            duration: 6000,\n                            style: {\n                                background: '#fef2f2',\n                                border: '1px solid #fecaca',\n                                color: '#dc2626'\n                            },\n                            iconTheme: {\n                                primary: '#ef4444',\n                                secondary: '#fef2f2'\n                            }\n                        },\n                        // Loading toast styling\n                        loading: {\n                            duration: Infinity,\n                            style: {\n                                background: '#fffbeb',\n                                border: '1px solid #fde68a',\n                                color: '#d97706'\n                            }\n                        }\n                    }\n                }, void 0, false, {\n                    fileName: \"/home/andrekirst/git/github/andrekirst/kgv_migration/frontend/src/app/providers.tsx\",\n                    lineNumber: 31,\n                    columnNumber: 9\n                }, this),\n                 true && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_tanstack_react_query_devtools__WEBPACK_IMPORTED_MODULE_6__.ReactQueryDevtools, {\n                    initialIsOpen: false,\n                    position: \"bottom-right\",\n                    toggleButtonProps: {\n                        style: {\n                            marginLeft: 'auto',\n                            transform: 'scale(0.8)',\n                            transformOrigin: 'bottom right',\n                            zIndex: 99999\n                        }\n                    },\n                    panelProps: {\n                        style: {\n                            zIndex: 99998\n                        }\n                    }\n                }, void 0, false, {\n                    fileName: \"/home/andrekirst/git/github/andrekirst/kgv_migration/frontend/src/app/providers.tsx\",\n                    lineNumber: 89,\n                    columnNumber: 11\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/home/andrekirst/git/github/andrekirst/kgv_migration/frontend/src/app/providers.tsx\",\n            lineNumber: 21,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/home/andrekirst/git/github/andrekirst/kgv_migration/frontend/src/app/providers.tsx\",\n        lineNumber: 20,\n        columnNumber: 5\n    }, this);\n}\n_s(Providers, \"XqNJeq0Tt4G/FNInytplZ2frQyM=\");\n_c = Providers;\nvar _c;\n$RefreshReg$(_c, \"Providers\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvcHJvdmlkZXJzLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUVBLDZEQUE2RDtBQUMvQjtBQUM2QjtBQUNRO0FBQ3hCO0FBQ0Y7QUFDc0I7QUFNeEQsU0FBU00sVUFBVSxFQUFFQyxRQUFRLEVBQWtCOztJQUNwRCwrRUFBK0U7SUFDL0UsTUFBTSxDQUFDQyxZQUFZLEdBQUdSLDJDQUFjOzhCQUFDLElBQU1LLDZFQUFvQkE7O0lBRS9ELHFCQUNFLDhEQUFDSixzRUFBbUJBO1FBQUNTLFFBQVFGO2tCQUMzQiw0RUFBQ0wsc0RBQWFBO1lBQ1pRLFdBQVU7WUFDVkMsY0FBYTtZQUNiQyxZQUFZO1lBQ1pDLFlBQVc7WUFDWEMseUJBQXlCOztnQkFFeEJSOzhCQUdELDhEQUFDSCxvREFBT0E7b0JBQ05ZLFVBQVM7b0JBQ1RDLGNBQWM7b0JBQ2RDLFFBQVE7b0JBQ1JDLG9CQUFtQjtvQkFDbkJDLGdCQUFnQixDQUFDO29CQUNqQkMsY0FBYzt3QkFDWixVQUFVO3dCQUNWQyxXQUFXO3dCQUNYQyxVQUFVO3dCQUNWQyxPQUFPOzRCQUNMQyxZQUFZOzRCQUNaQyxPQUFPOzRCQUNQQyxRQUFROzRCQUNSQyxjQUFjOzRCQUNkQyxVQUFVOzRCQUNWQyxVQUFVO3dCQUNaO3dCQUNBLHdCQUF3Qjt3QkFDeEJDLFNBQVM7NEJBQ1BSLFVBQVU7NEJBQ1ZDLE9BQU87Z0NBQ0xDLFlBQVk7Z0NBQ1pFLFFBQVE7Z0NBQ1JELE9BQU87NEJBQ1Q7NEJBQ0FNLFdBQVc7Z0NBQ1RDLFNBQVM7Z0NBQ1RDLFdBQVc7NEJBQ2I7d0JBQ0Y7d0JBQ0Esc0JBQXNCO3dCQUN0QkMsT0FBTzs0QkFDTFosVUFBVTs0QkFDVkMsT0FBTztnQ0FDTEMsWUFBWTtnQ0FDWkUsUUFBUTtnQ0FDUkQsT0FBTzs0QkFDVDs0QkFDQU0sV0FBVztnQ0FDVEMsU0FBUztnQ0FDVEMsV0FBVzs0QkFDYjt3QkFDRjt3QkFDQSx3QkFBd0I7d0JBQ3hCRSxTQUFTOzRCQUNQYixVQUFVYzs0QkFDVmIsT0FBTztnQ0FDTEMsWUFBWTtnQ0FDWkUsUUFBUTtnQ0FDUkQsT0FBTzs0QkFDVDt3QkFDRjtvQkFDRjs7Ozs7O2dCQXpCRyxLQTZCa0Msa0JBQ3JDLDhEQUFDeEIsOEVBQWtCQTtvQkFDakJvQyxlQUFlO29CQUNmdEIsVUFBUztvQkFDVHVCLG1CQUFtQjt3QkFDakJmLE9BQU87NEJBQ0xnQixZQUFZOzRCQUNaQyxXQUFXOzRCQUNYQyxpQkFBaUI7NEJBQ2pCQyxRQUFRO3dCQUNWO29CQUNGO29CQUNBQyxZQUFZO3dCQUNWcEIsT0FBTzs0QkFDTG1CLFFBQVE7d0JBQ1Y7b0JBQ0Y7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBTVo7R0EvRmdCckM7S0FBQUEiLCJzb3VyY2VzIjpbIi9ob21lL2FuZHJla2lyc3QvZ2l0L2dpdGh1Yi9hbmRyZWtpcnN0L2tndl9taWdyYXRpb24vZnJvbnRlbmQvc3JjL2FwcC9wcm92aWRlcnMudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50J1xuXG4vLyBQcm92aWRlcnMgY29tcG9uZW50IGZvciBnbG9iYWwgYXBwIHN0YXRlIGFuZCBjb25maWd1cmF0aW9uXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IFF1ZXJ5Q2xpZW50UHJvdmlkZXIgfSBmcm9tICdAdGFuc3RhY2svcmVhY3QtcXVlcnknXG5pbXBvcnQgeyBSZWFjdFF1ZXJ5RGV2dG9vbHMgfSBmcm9tICdAdGFuc3RhY2svcmVhY3QtcXVlcnktZGV2dG9vbHMnXG5pbXBvcnQgeyBUaGVtZVByb3ZpZGVyIH0gZnJvbSAnbmV4dC10aGVtZXMnXG5pbXBvcnQgeyBUb2FzdGVyIH0gZnJvbSAncmVhY3QtaG90LXRvYXN0J1xuaW1wb3J0IHsgY3JlYXRlQXBwUXVlcnlDbGllbnQgfSBmcm9tICdAL2xpYi9yZWFjdC1xdWVyeS1jb25maWcnXG5cbmludGVyZmFjZSBQcm92aWRlcnNQcm9wcyB7XG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGVcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIFByb3ZpZGVycyh7IGNoaWxkcmVuIH06IFByb3ZpZGVyc1Byb3BzKSB7XG4gIC8vIENyZWF0ZSBRdWVyeUNsaWVudCB3aXRoIGNvbXByZWhlbnNpdmUgZXJyb3IgaGFuZGxpbmcgYW5kIEdlcm1hbiBsb2NhbGl6YXRpb25cbiAgY29uc3QgW3F1ZXJ5Q2xpZW50XSA9IFJlYWN0LnVzZVN0YXRlKCgpID0+IGNyZWF0ZUFwcFF1ZXJ5Q2xpZW50KCkpXG5cbiAgcmV0dXJuIChcbiAgICA8UXVlcnlDbGllbnRQcm92aWRlciBjbGllbnQ9e3F1ZXJ5Q2xpZW50fT5cbiAgICAgIDxUaGVtZVByb3ZpZGVyXG4gICAgICAgIGF0dHJpYnV0ZT1cImNsYXNzXCJcbiAgICAgICAgZGVmYXVsdFRoZW1lPVwic3lzdGVtXCJcbiAgICAgICAgZW5hYmxlU3lzdGVtXG4gICAgICAgIHN0b3JhZ2VLZXk9XCJrZ3YtdGhlbWVcIlxuICAgICAgICBkaXNhYmxlVHJhbnNpdGlvbk9uQ2hhbmdlXG4gICAgICA+XG4gICAgICAgIHtjaGlsZHJlbn1cbiAgICAgICAgXG4gICAgICAgIHsvKiBUb2FzdCBub3RpZmljYXRpb25zIHdpdGggR2VybWFuIG1lc3NhZ2VzICovfVxuICAgICAgICA8VG9hc3RlclxuICAgICAgICAgIHBvc2l0aW9uPVwidG9wLXJpZ2h0XCJcbiAgICAgICAgICByZXZlcnNlT3JkZXI9e2ZhbHNlfVxuICAgICAgICAgIGd1dHRlcj17OH1cbiAgICAgICAgICBjb250YWluZXJDbGFzc05hbWU9XCJcIlxuICAgICAgICAgIGNvbnRhaW5lclN0eWxlPXt7fX1cbiAgICAgICAgICB0b2FzdE9wdGlvbnM9e3tcbiAgICAgICAgICAgIC8vIFN0eWxpbmdcbiAgICAgICAgICAgIGNsYXNzTmFtZTogJycsXG4gICAgICAgICAgICBkdXJhdGlvbjogNTAwMCxcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgIGJhY2tncm91bmQ6ICcjZmZmZmZmJyxcbiAgICAgICAgICAgICAgY29sb3I6ICcjMWYyOTM3JyxcbiAgICAgICAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkICNlNWU3ZWInLFxuICAgICAgICAgICAgICBib3JkZXJSYWRpdXM6ICcwLjVyZW0nLFxuICAgICAgICAgICAgICBmb250U2l6ZTogJzE0cHgnLFxuICAgICAgICAgICAgICBtYXhXaWR0aDogJzQwMHB4JyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAvLyBTdWNjZXNzIHRvYXN0IHN0eWxpbmdcbiAgICAgICAgICAgIHN1Y2Nlc3M6IHtcbiAgICAgICAgICAgICAgZHVyYXRpb246IDQwMDAsXG4gICAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogJyNmMGZkZjQnLFxuICAgICAgICAgICAgICAgIGJvcmRlcjogJzFweCBzb2xpZCAjYmJmN2QwJyxcbiAgICAgICAgICAgICAgICBjb2xvcjogJyMxNjY1MzQnLFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBpY29uVGhlbWU6IHtcbiAgICAgICAgICAgICAgICBwcmltYXJ5OiAnIzIyYzU1ZScsXG4gICAgICAgICAgICAgICAgc2Vjb25kYXJ5OiAnI2YwZmRmNCcsXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgLy8gRXJyb3IgdG9hc3Qgc3R5bGluZ1xuICAgICAgICAgICAgZXJyb3I6IHtcbiAgICAgICAgICAgICAgZHVyYXRpb246IDYwMDAsXG4gICAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogJyNmZWYyZjInLFxuICAgICAgICAgICAgICAgIGJvcmRlcjogJzFweCBzb2xpZCAjZmVjYWNhJyxcbiAgICAgICAgICAgICAgICBjb2xvcjogJyNkYzI2MjYnLFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBpY29uVGhlbWU6IHtcbiAgICAgICAgICAgICAgICBwcmltYXJ5OiAnI2VmNDQ0NCcsXG4gICAgICAgICAgICAgICAgc2Vjb25kYXJ5OiAnI2ZlZjJmMicsXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgLy8gTG9hZGluZyB0b2FzdCBzdHlsaW5nXG4gICAgICAgICAgICBsb2FkaW5nOiB7XG4gICAgICAgICAgICAgIGR1cmF0aW9uOiBJbmZpbml0eSxcbiAgICAgICAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAnI2ZmZmJlYicsXG4gICAgICAgICAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkICNmZGU2OGEnLFxuICAgICAgICAgICAgICAgIGNvbG9yOiAnI2Q5NzcwNicsXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH19XG4gICAgICAgIC8+XG4gICAgICAgIFxuICAgICAgICB7LyogUmVhY3QgUXVlcnkgRGV2dG9vbHMgLSBvbmx5IGluIGRldmVsb3BtZW50ICovfVxuICAgICAgICB7cHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcgJiYgKFxuICAgICAgICAgIDxSZWFjdFF1ZXJ5RGV2dG9vbHNcbiAgICAgICAgICAgIGluaXRpYWxJc09wZW49e2ZhbHNlfVxuICAgICAgICAgICAgcG9zaXRpb249XCJib3R0b20tcmlnaHRcIlxuICAgICAgICAgICAgdG9nZ2xlQnV0dG9uUHJvcHM9e3tcbiAgICAgICAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAgICAgICBtYXJnaW5MZWZ0OiAnYXV0bycsXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiAnc2NhbGUoMC44KScsXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtT3JpZ2luOiAnYm90dG9tIHJpZ2h0JyxcbiAgICAgICAgICAgICAgICB6SW5kZXg6IDk5OTk5XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9fVxuICAgICAgICAgICAgcGFuZWxQcm9wcz17e1xuICAgICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICAgIHpJbmRleDogOTk5OThcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfX1cbiAgICAgICAgICAvPlxuICAgICAgICApfVxuICAgICAgPC9UaGVtZVByb3ZpZGVyPlxuICAgIDwvUXVlcnlDbGllbnRQcm92aWRlcj5cbiAgKVxufSJdLCJuYW1lcyI6WyJSZWFjdCIsIlF1ZXJ5Q2xpZW50UHJvdmlkZXIiLCJSZWFjdFF1ZXJ5RGV2dG9vbHMiLCJUaGVtZVByb3ZpZGVyIiwiVG9hc3RlciIsImNyZWF0ZUFwcFF1ZXJ5Q2xpZW50IiwiUHJvdmlkZXJzIiwiY2hpbGRyZW4iLCJxdWVyeUNsaWVudCIsInVzZVN0YXRlIiwiY2xpZW50IiwiYXR0cmlidXRlIiwiZGVmYXVsdFRoZW1lIiwiZW5hYmxlU3lzdGVtIiwic3RvcmFnZUtleSIsImRpc2FibGVUcmFuc2l0aW9uT25DaGFuZ2UiLCJwb3NpdGlvbiIsInJldmVyc2VPcmRlciIsImd1dHRlciIsImNvbnRhaW5lckNsYXNzTmFtZSIsImNvbnRhaW5lclN0eWxlIiwidG9hc3RPcHRpb25zIiwiY2xhc3NOYW1lIiwiZHVyYXRpb24iLCJzdHlsZSIsImJhY2tncm91bmQiLCJjb2xvciIsImJvcmRlciIsImJvcmRlclJhZGl1cyIsImZvbnRTaXplIiwibWF4V2lkdGgiLCJzdWNjZXNzIiwiaWNvblRoZW1lIiwicHJpbWFyeSIsInNlY29uZGFyeSIsImVycm9yIiwibG9hZGluZyIsIkluZmluaXR5IiwiaW5pdGlhbElzT3BlbiIsInRvZ2dsZUJ1dHRvblByb3BzIiwibWFyZ2luTGVmdCIsInRyYW5zZm9ybSIsInRyYW5zZm9ybU9yaWdpbiIsInpJbmRleCIsInBhbmVsUHJvcHMiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/providers.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/lib/error-handling.ts":
/*!***********************************!*\
  !*** ./src/lib/error-handling.ts ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ErrorHandler: () => (/* binding */ ErrorHandler),\n/* harmony export */   ErrorSeverity: () => (/* binding */ ErrorSeverity),\n/* harmony export */   GERMAN_ERROR_MESSAGES: () => (/* binding */ GERMAN_ERROR_MESSAGES),\n/* harmony export */   createFormErrorMessage: () => (/* binding */ createFormErrorMessage),\n/* harmony export */   enhanceError: () => (/* binding */ enhanceError),\n/* harmony export */   errorHandler: () => (/* binding */ errorHandler),\n/* harmony export */   handleMutationError: () => (/* binding */ handleMutationError),\n/* harmony export */   handleQueryError: () => (/* binding */ handleQueryError),\n/* harmony export */   isApiError: () => (/* binding */ isApiError),\n/* harmony export */   mapStatusToError: () => (/* binding */ mapStatusToError),\n/* harmony export */   shouldRetryError: () => (/* binding */ shouldRetryError)\n/* harmony export */ });\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-hot-toast */ \"(app-pages-browser)/./node_modules/react-hot-toast/dist/index.mjs\");\n// Comprehensive error handling utilities for React Query and API operations\n\n// German error messages for common scenarios\nconst GERMAN_ERROR_MESSAGES = {\n    // Network errors\n    NETWORK_ERROR: 'Netzwerkfehler. Bitte überprüfen Sie Ihre Internetverbindung.',\n    TIMEOUT_ERROR: 'Die Anfrage dauerte zu lange. Bitte versuchen Sie es erneut.',\n    CONNECTION_ERROR: 'Verbindung zum Server fehlgeschlagen.',\n    // Authentication errors\n    UNAUTHORIZED: 'Sie sind nicht angemeldet. Bitte melden Sie sich an.',\n    FORBIDDEN: 'Sie haben nicht die erforderlichen Berechtigungen für diese Aktion.',\n    TOKEN_EXPIRED: 'Ihre Sitzung ist abgelaufen. Bitte melden Sie sich erneut an.',\n    // Client errors\n    BAD_REQUEST: 'Ungültige Anfrage. Bitte überprüfen Sie Ihre Eingaben.',\n    NOT_FOUND: 'Die angeforderte Ressource wurde nicht gefunden.',\n    CONFLICT: 'Die Aktion kann nicht ausgeführt werden, da ein Konflikt vorliegt.',\n    VALIDATION_ERROR: 'Eingabevalidierung fehlgeschlagen. Bitte korrigieren Sie Ihre Eingaben.',\n    // Server errors\n    INTERNAL_SERVER_ERROR: 'Ein Serverfehler ist aufgetreten. Bitte versuchen Sie es später erneut.',\n    SERVICE_UNAVAILABLE: 'Der Service ist momentan nicht verfügbar. Bitte versuchen Sie es später.',\n    GATEWAY_TIMEOUT: 'Server-Timeout. Bitte versuchen Sie es erneut.',\n    // Rate limiting\n    TOO_MANY_REQUESTS: 'Zu viele Anfragen. Bitte warten Sie einen Moment.',\n    // Generic fallbacks\n    UNKNOWN_ERROR: 'Ein unbekannter Fehler ist aufgetreten.',\n    OPERATION_FAILED: 'Die Aktion konnte nicht ausgeführt werden.'\n};\n// Error severity levels\nvar ErrorSeverity = /*#__PURE__*/ function(ErrorSeverity) {\n    ErrorSeverity[\"LOW\"] = \"low\";\n    ErrorSeverity[\"MEDIUM\"] = \"medium\";\n    ErrorSeverity[\"HIGH\"] = \"high\";\n    ErrorSeverity[\"CRITICAL\"] = \"critical\";\n    return ErrorSeverity;\n}({});\n/**\n * Maps HTTP status codes to German error messages and severity levels\n */ function mapStatusToError(status, context) {\n    const errorMap = {\n        // 4xx Client Errors\n        400: {\n            message: GERMAN_ERROR_MESSAGES.BAD_REQUEST,\n            severity: \"medium\"\n        },\n        401: {\n            message: GERMAN_ERROR_MESSAGES.UNAUTHORIZED,\n            severity: \"high\"\n        },\n        403: {\n            message: GERMAN_ERROR_MESSAGES.FORBIDDEN,\n            severity: \"high\"\n        },\n        404: {\n            message: GERMAN_ERROR_MESSAGES.NOT_FOUND,\n            severity: \"low\"\n        },\n        408: {\n            message: GERMAN_ERROR_MESSAGES.TIMEOUT_ERROR,\n            severity: \"medium\"\n        },\n        409: {\n            message: GERMAN_ERROR_MESSAGES.CONFLICT,\n            severity: \"medium\"\n        },\n        422: {\n            message: GERMAN_ERROR_MESSAGES.VALIDATION_ERROR,\n            severity: \"medium\"\n        },\n        429: {\n            message: GERMAN_ERROR_MESSAGES.TOO_MANY_REQUESTS,\n            severity: \"medium\"\n        },\n        // 5xx Server Errors\n        500: {\n            message: GERMAN_ERROR_MESSAGES.INTERNAL_SERVER_ERROR,\n            severity: \"high\"\n        },\n        502: {\n            message: GERMAN_ERROR_MESSAGES.SERVICE_UNAVAILABLE,\n            severity: \"high\"\n        },\n        503: {\n            message: GERMAN_ERROR_MESSAGES.SERVICE_UNAVAILABLE,\n            severity: \"high\"\n        },\n        504: {\n            message: GERMAN_ERROR_MESSAGES.GATEWAY_TIMEOUT,\n            severity: \"high\"\n        }\n    };\n    return errorMap[status] || {\n        message: GERMAN_ERROR_MESSAGES.UNKNOWN_ERROR,\n        severity: \"medium\"\n    };\n}\n/**\n * Enhances a basic API error with additional context and German messages\n */ function enhanceError(error, context) {\n    const { message: userMessage, severity } = mapStatusToError(error.status, context);\n    return {\n        ...error,\n        severity,\n        context,\n        timestamp: new Date(),\n        userMessage,\n        technicalMessage: error.message !== userMessage ? error.message : undefined\n    };\n}\n/**\n * Centralized error handler for React Query operations\n */ class ErrorHandler {\n    static getInstance() {\n        if (!ErrorHandler.instance) {\n            ErrorHandler.instance = new ErrorHandler();\n        }\n        return ErrorHandler.instance;\n    }\n    /**\n   * Handle and log an error\n   */ handleError(error, context) {\n        let enhancedError;\n        if ('status' in error) {\n            // API Error\n            enhancedError = enhanceError(error, context);\n        } else {\n            // Generic Error\n            enhancedError = {\n                message: error.message,\n                status: 0,\n                details: [],\n                severity: \"medium\",\n                context,\n                timestamp: new Date(),\n                userMessage: this.getGenericErrorMessage(error.message),\n                technicalMessage: error.message\n            };\n        }\n        // Log the error\n        this.logError(enhancedError);\n        // Show appropriate notification\n        this.showErrorNotification(enhancedError);\n        return enhancedError;\n    }\n    /**\n   * Handle React Query errors specifically\n   */ handleQueryError(error, context) {\n        console.error(`Query Error in ${context}:`, error);\n        if (error?.status) {\n            this.handleError(error, context);\n        } else {\n            // Network or other errors\n            const enhancedError = {\n                message: error?.message || 'Unknown error',\n                status: 0,\n                details: [],\n                severity: \"medium\",\n                context,\n                timestamp: new Date(),\n                userMessage: GERMAN_ERROR_MESSAGES.NETWORK_ERROR,\n                technicalMessage: error?.message\n            };\n            this.logError(enhancedError);\n            this.showErrorNotification(enhancedError);\n        }\n    }\n    /**\n   * Handle mutation errors with additional context\n   */ handleMutationError(error, operation, data) {\n        console.error(`Mutation Error (${operation}):`, error, 'Data:', data);\n        const context = `${operation} operation`;\n        this.handleQueryError(error, context);\n    }\n    /**\n   * Show appropriate error notification based on severity\n   */ showErrorNotification(error) {\n        const duration = this.getNotificationDuration(error.severity);\n        switch(error.severity){\n            case \"critical\":\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error(error.userMessage, {\n                    duration: duration,\n                    position: 'top-center',\n                    style: {\n                        background: '#fee2e2',\n                        border: '1px solid #fecaca',\n                        color: '#dc2626',\n                        fontWeight: '600'\n                    }\n                });\n                break;\n            case \"high\":\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error(error.userMessage, {\n                    duration: duration,\n                    position: 'top-right',\n                    style: {\n                        background: '#fef2f2',\n                        border: '1px solid #fecaca',\n                        color: '#dc2626'\n                    }\n                });\n                break;\n            case \"medium\":\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error(error.userMessage, {\n                    duration: duration,\n                    position: 'top-right'\n                });\n                break;\n            case \"low\":\n                // For low severity errors, show a less intrusive notification\n                if (true) {\n                    react_hot_toast__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error(error.userMessage, {\n                        duration: 3000,\n                        position: 'bottom-right'\n                    });\n                }\n                break;\n        }\n    }\n    /**\n   * Get notification duration based on severity\n   */ getNotificationDuration(severity) {\n        switch(severity){\n            case \"critical\":\n                return 10000 // 10 seconds\n                ;\n            case \"high\":\n                return 8000 // 8 seconds\n                ;\n            case \"medium\":\n                return 6000 // 6 seconds\n                ;\n            case \"low\":\n                return 3000 // 3 seconds\n                ;\n            default:\n                return 5000 // 5 seconds\n                ;\n        }\n    }\n    /**\n   * Log error to internal array (could be extended to send to external service)\n   */ logError(error) {\n        this.errorLog.unshift(error);\n        // Keep log size manageable\n        if (this.errorLog.length > this.maxLogSize) {\n            this.errorLog = this.errorLog.slice(0, this.maxLogSize);\n        }\n        // In production, you might want to send critical errors to a logging service\n        if (false) {}\n    }\n    /**\n   * Get generic error message for unknown errors\n   */ getGenericErrorMessage(technicalMessage) {\n        if (technicalMessage.toLowerCase().includes('network')) {\n            return GERMAN_ERROR_MESSAGES.NETWORK_ERROR;\n        }\n        if (technicalMessage.toLowerCase().includes('timeout')) {\n            return GERMAN_ERROR_MESSAGES.TIMEOUT_ERROR;\n        }\n        return GERMAN_ERROR_MESSAGES.UNKNOWN_ERROR;\n    }\n    /**\n   * Send critical errors to external logging service\n   */ sendToLoggingService(error) {\n        // Implementation would depend on your logging service\n        // Example: Sentry, LogRocket, custom endpoint, etc.\n        console.error('Critical Error:', error);\n    }\n    /**\n   * Get recent errors for debugging\n   */ getRecentErrors(limit = 10) {\n        return this.errorLog.slice(0, limit);\n    }\n    /**\n   * Clear error log\n   */ clearErrorLog() {\n        this.errorLog = [];\n    }\n    /**\n   * Get error statistics\n   */ getErrorStats() {\n        const stats = {\n            total: this.errorLog.length,\n            bySeverity: {\n                [\"low\"]: 0,\n                [\"medium\"]: 0,\n                [\"high\"]: 0,\n                [\"critical\"]: 0\n            },\n            byStatus: {}\n        };\n        this.errorLog.forEach((error)=>{\n            stats.bySeverity[error.severity]++;\n            stats.byStatus[error.status] = (stats.byStatus[error.status] || 0) + 1;\n        });\n        return stats;\n    }\n    constructor(){\n        this.errorLog = [];\n        this.maxLogSize = 100;\n    }\n}\n// Export singleton instance\nconst errorHandler = ErrorHandler.getInstance();\n/**\n * React Query error handler function\n */ const handleQueryError = (error, context)=>{\n    errorHandler.handleQueryError(error, context);\n};\n/**\n * React Query mutation error handler function\n */ const handleMutationError = (error, operation, data)=>{\n    errorHandler.handleMutationError(error, operation, data);\n};\n/**\n * Utility to create user-friendly error messages for forms\n */ function createFormErrorMessage(error) {\n    const result = {\n        fields: {}\n    };\n    if (error.status === 422 && error.details?.length) {\n        // Validation errors - map to form fields\n        error.details.forEach((detail)=>{\n            if (typeof detail === 'string') {\n                result.general = detail;\n            } else {\n                // Assume detail has field and message properties\n                const fieldError = detail;\n                if (fieldError.field && fieldError.message) {\n                    result.fields[fieldError.field] = fieldError.message;\n                }\n            }\n        });\n    } else {\n        // General error\n        const { message } = mapStatusToError(error.status);\n        result.general = message;\n    }\n    return result;\n}\n/**\n * Utility to check if an error should be retried\n */ function shouldRetryError(error) {\n    // Don't retry client errors (4xx) except rate limiting\n    if (error.status >= 400 && error.status < 500 && error.status !== 429) {\n        return false;\n    }\n    // Retry server errors and network errors\n    return true;\n}\n/**\n * Type guard to check if error is an API error\n */ function isApiError(error) {\n    return error && typeof error.status === 'number' && typeof error.message === 'string';\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/error-handling.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/lib/query-keys.ts":
/*!*******************************!*\
  !*** ./src/lib/query-keys.ts ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CACHE_TIMES: () => (/* binding */ CACHE_TIMES),\n/* harmony export */   STALE_TIMES: () => (/* binding */ STALE_TIMES),\n/* harmony export */   mutationKeys: () => (/* binding */ mutationKeys),\n/* harmony export */   queryKeyHelpers: () => (/* binding */ queryKeyHelpers),\n/* harmony export */   queryKeys: () => (/* binding */ queryKeys)\n/* harmony export */ });\n// Query Keys Factory for React Query Cache Management\n// Provides consistent and type-safe query keys across the application\n/**\n * Centralized query keys factory following React Query best practices\n * Each entity has its own namespace with specific query patterns\n */ const queryKeys = {\n    // Application-wide keys\n    all: [\n        'kgv'\n    ],\n    // Authentication & User\n    auth: {\n        all: ()=>[\n                ...queryKeys.all,\n                'auth'\n            ],\n        user: ()=>[\n                ...queryKeys.auth.all(),\n                'user'\n            ],\n        profile: ()=>[\n                ...queryKeys.auth.all(),\n                'profile'\n            ],\n        permissions: ()=>[\n                ...queryKeys.auth.all(),\n                'permissions'\n            ]\n    },\n    // Bezirke (Districts)\n    bezirke: {\n        all: ()=>[\n                ...queryKeys.all,\n                'bezirke'\n            ],\n        lists: ()=>[\n                ...queryKeys.bezirke.all(),\n                'list'\n            ],\n        list: (filters)=>[\n                ...queryKeys.bezirke.lists(),\n                filters\n            ],\n        details: ()=>[\n                ...queryKeys.bezirke.all(),\n                'detail'\n            ],\n        detail: (id)=>[\n                ...queryKeys.bezirke.details(),\n                id\n            ],\n        statistics: ()=>[\n                ...queryKeys.bezirke.all(),\n                'statistics'\n            ],\n        search: (query)=>[\n                ...queryKeys.bezirke.all(),\n                'search',\n                query\n            ],\n        // Cached lists for dropdowns/selectors\n        dropdown: ()=>[\n                ...queryKeys.bezirke.all(),\n                'dropdown'\n            ],\n        // Relations\n        parzellen: (bezirkId)=>[\n                ...queryKeys.bezirke.detail(bezirkId),\n                'parzellen'\n            ],\n        antraege: (bezirkId)=>[\n                ...queryKeys.bezirke.detail(bezirkId),\n                'antraege'\n            ]\n    },\n    // Parzellen (Plots)\n    parzellen: {\n        all: ()=>[\n                ...queryKeys.all,\n                'parzellen'\n            ],\n        lists: ()=>[\n                ...queryKeys.parzellen.all(),\n                'list'\n            ],\n        list: (filters)=>[\n                ...queryKeys.parzellen.lists(),\n                filters\n            ],\n        details: ()=>[\n                ...queryKeys.parzellen.all(),\n                'detail'\n            ],\n        detail: (id)=>[\n                ...queryKeys.parzellen.details(),\n                id\n            ],\n        statistics: ()=>[\n                ...queryKeys.parzellen.all(),\n                'statistics'\n            ],\n        search: (query)=>[\n                ...queryKeys.parzellen.all(),\n                'search',\n                query\n            ],\n        // Filtered lists\n        byBezirk: (bezirkId, filters)=>[\n                ...queryKeys.parzellen.lists(),\n                'bezirk',\n                bezirkId,\n                filters\n            ],\n        available: (filters)=>[\n                ...queryKeys.parzellen.lists(),\n                'available',\n                filters\n            ],\n        assigned: (filters)=>[\n                ...queryKeys.parzellen.lists(),\n                'assigned',\n                filters\n            ],\n        // Relations\n        history: (parzelleId)=>[\n                ...queryKeys.parzellen.detail(parzelleId),\n                'history'\n            ],\n        assignments: (parzelleId)=>[\n                ...queryKeys.parzellen.detail(parzelleId),\n                'assignments'\n            ]\n    },\n    // Anträge (Applications)\n    antraege: {\n        all: ()=>[\n                ...queryKeys.all,\n                'antraege'\n            ],\n        lists: ()=>[\n                ...queryKeys.antraege.all(),\n                'list'\n            ],\n        list: (filters, pagination)=>[\n                ...queryKeys.antraege.lists(),\n                filters,\n                pagination\n            ],\n        details: ()=>[\n                ...queryKeys.antraege.all(),\n                'detail'\n            ],\n        detail: (id)=>[\n                ...queryKeys.antraege.details(),\n                id\n            ],\n        statistics: ()=>[\n                ...queryKeys.antraege.all(),\n                'statistics'\n            ],\n        search: (query)=>[\n                ...queryKeys.antraege.all(),\n                'search',\n                query\n            ],\n        // Status-based lists\n        pending: (filters)=>[\n                ...queryKeys.antraege.lists(),\n                'pending',\n                filters\n            ],\n        approved: (filters)=>[\n                ...queryKeys.antraege.lists(),\n                'approved',\n                filters\n            ],\n        rejected: (filters)=>[\n                ...queryKeys.antraege.lists(),\n                'rejected',\n                filters\n            ],\n        // Relations\n        history: (antragId)=>[\n                ...queryKeys.antraege.detail(antragId),\n                'history'\n            ],\n        documents: (antragId)=>[\n                ...queryKeys.antraege.detail(antragId),\n                'documents'\n            ]\n    },\n    // Dashboard & Analytics\n    dashboard: {\n        all: ()=>[\n                ...queryKeys.all,\n                'dashboard'\n            ],\n        stats: ()=>[\n                ...queryKeys.dashboard.all(),\n                'stats'\n            ],\n        charts: ()=>[\n                ...queryKeys.dashboard.all(),\n                'charts'\n            ],\n        activity: ()=>[\n                ...queryKeys.dashboard.all(),\n                'activity'\n            ],\n        trends: (period)=>[\n                ...queryKeys.dashboard.all(),\n                'trends',\n                period\n            ]\n    },\n    // System & Configuration\n    system: {\n        all: ()=>[\n                ...queryKeys.all,\n                'system'\n            ],\n        health: ()=>[\n                ...queryKeys.system.all(),\n                'health'\n            ],\n        config: ()=>[\n                ...queryKeys.system.all(),\n                'config'\n            ],\n        notifications: ()=>[\n                ...queryKeys.system.all(),\n                'notifications'\n            ]\n    },\n    // Reports & Exports\n    reports: {\n        all: ()=>[\n                ...queryKeys.all,\n                'reports'\n            ],\n        export: (type, filters)=>[\n                ...queryKeys.reports.all(),\n                'export',\n                type,\n                filters\n            ],\n        templates: ()=>[\n                ...queryKeys.reports.all(),\n                'templates'\n            ]\n    }\n};\n/**\n * Helper functions for common query key operations\n */ const queryKeyHelpers = {\n    /**\n   * Invalidate all queries for a specific entity\n   */ invalidateEntity: (queryClient, entity)=>{\n        return queryClient.invalidateQueries({\n            queryKey: queryKeys[entity].all()\n        });\n    },\n    /**\n   * Remove all queries for a specific entity\n   */ removeEntity: (queryClient, entity)=>{\n        return queryClient.removeQueries({\n            queryKey: queryKeys[entity].all()\n        });\n    },\n    /**\n   * Prefetch entity list with filters\n   */ prefetchList: async (queryClient, entity, filters)=>{\n        switch(entity){\n            case 'bezirke':\n                return queryClient.prefetchQuery({\n                    queryKey: queryKeys.bezirke.list(filters),\n                    staleTime: 5 * 60 * 1000\n                });\n            case 'parzellen':\n                return queryClient.prefetchQuery({\n                    queryKey: queryKeys.parzellen.list(filters),\n                    staleTime: 5 * 60 * 1000\n                });\n            case 'antraege':\n                return queryClient.prefetchQuery({\n                    queryKey: queryKeys.antraege.list(filters),\n                    staleTime: 2 * 60 * 1000\n                });\n        }\n    },\n    /**\n   * Get cached data without triggering a fetch\n   */ getCachedData: (queryClient, queryKey)=>{\n        return queryClient.getQueryData(queryKey);\n    },\n    /**\n   * Set cached data\n   */ setCachedData: (queryClient, queryKey, data)=>{\n        return queryClient.setQueryData(queryKey, data);\n    },\n    /**\n   * Check if query is currently fetching\n   */ isFetching: (queryClient, queryKey)=>{\n        return queryClient.isFetching({\n            queryKey\n        }) > 0;\n    },\n    /**\n   * Reset query error state\n   */ resetQueryError: (queryClient, queryKey)=>{\n        return queryClient.resetQueries({\n            queryKey\n        });\n    }\n};\n/**\n * Mutation keys for consistent cache invalidation\n */ const mutationKeys = {\n    // Bezirke mutations\n    bezirke: {\n        create: 'create-bezirk',\n        update: 'update-bezirk',\n        delete: 'delete-bezirk'\n    },\n    // Parzellen mutations\n    parzellen: {\n        create: 'create-parzelle',\n        update: 'update-parzelle',\n        delete: 'delete-parzelle',\n        assign: 'assign-parzelle',\n        unassign: 'unassign-parzelle'\n    },\n    // Anträge mutations\n    antraege: {\n        create: 'create-antrag',\n        update: 'update-antrag',\n        updateStatus: 'update-antrag-status',\n        delete: 'delete-antrag'\n    },\n    // Authentication mutations\n    auth: {\n        login: 'login',\n        logout: 'logout',\n        refresh: 'refresh-token',\n        register: 'register'\n    }\n};\n/**\n * Default stale times for different types of data\n */ const STALE_TIMES = {\n    // Static/configuration data - 30 minutes\n    STATIC: 30 * 60 * 1000,\n    // Entity lists - 5 minutes\n    LISTS: 5 * 60 * 1000,\n    // Entity details - 10 minutes\n    DETAILS: 10 * 60 * 1000,\n    // Dynamic data (applications, activity) - 2 minutes\n    DYNAMIC: 2 * 60 * 1000,\n    // Real-time data (notifications, live stats) - 30 seconds\n    REALTIME: 30 * 1000\n};\n/**\n * Default cache times for different types of data\n */ const CACHE_TIMES = {\n    // Keep static data for 1 hour\n    STATIC: 60 * 60 * 1000,\n    // Keep lists for 15 minutes\n    LISTS: 15 * 60 * 1000,\n    // Keep details for 30 minutes\n    DETAILS: 30 * 60 * 1000,\n    // Keep dynamic data for 5 minutes\n    DYNAMIC: 5 * 60 * 1000,\n    // Keep real-time data for 1 minute\n    REALTIME: 60 * 1000\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/query-keys.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/lib/react-query-config.ts":
/*!***************************************!*\
  !*** ./src/lib/react-query-config.ts ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearAllCache: () => (/* binding */ clearAllCache),\n/* harmony export */   configureQueryClient: () => (/* binding */ configureQueryClient),\n/* harmony export */   createAppQueryClient: () => (/* binding */ createAppQueryClient),\n/* harmony export */   createQueryClient: () => (/* binding */ createQueryClient),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   devTools: () => (/* binding */ devTools),\n/* harmony export */   invalidateAuthQueries: () => (/* binding */ invalidateAuthQueries),\n/* harmony export */   prefetchCriticalData: () => (/* binding */ prefetchCriticalData),\n/* harmony export */   queryPerformance: () => (/* binding */ queryPerformance)\n/* harmony export */ });\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tanstack/react-query */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/queryClient.js\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tanstack/react-query */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/queryCache.js\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tanstack/react-query */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/mutationCache.js\");\n/* harmony import */ var _error_handling__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error-handling */ \"(app-pages-browser)/./src/lib/error-handling.ts\");\n/* harmony import */ var _query_keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query-keys */ \"(app-pages-browser)/./src/lib/query-keys.ts\");\n// React Query configuration with enhanced error handling and German localization\n\n\n\n/**\n * Create a properly configured QueryClient for the KGV application\n */ function createQueryClient() {\n    return new _tanstack_react_query__WEBPACK_IMPORTED_MODULE_2__.QueryClient({\n        defaultOptions: {\n            queries: {\n                // Default stale time for lists\n                staleTime: _query_keys__WEBPACK_IMPORTED_MODULE_1__.STALE_TIMES.LISTS,\n                // Default cache time for lists\n                gcTime: _query_keys__WEBPACK_IMPORTED_MODULE_1__.CACHE_TIMES.LISTS,\n                // Retry configuration with intelligent error handling\n                retry: (failureCount, error)=>{\n                    // Don't retry on client errors except rate limiting\n                    if ((0,_error_handling__WEBPACK_IMPORTED_MODULE_0__.isApiError)(error) && !(0,_error_handling__WEBPACK_IMPORTED_MODULE_0__.shouldRetryError)(error)) {\n                        return false;\n                    }\n                    // Max 3 retries for network/server errors\n                    return failureCount < 3;\n                },\n                // Retry delay with exponential backoff (max 30 seconds)\n                retryDelay: (attemptIndex)=>Math.min(1000 * 2 ** attemptIndex, 30000),\n                // Refetch configuration\n                refetchOnWindowFocus: true,\n                refetchOnReconnect: 'always',\n                refetchInterval: false,\n                // Network mode - online first, then cache\n                networkMode: 'online',\n                // Error handling\n                throwOnError: false,\n                // Use error boundary for critical server errors\n                useErrorBoundary: (error)=>{\n                    return (0,_error_handling__WEBPACK_IMPORTED_MODULE_0__.isApiError)(error) && error.status >= 500;\n                },\n                // Meta information for error context\n                meta: {\n                    errorContext: 'query'\n                }\n            },\n            mutations: {\n                // Retry configuration for mutations\n                retry: (failureCount, error)=>{\n                    // Don't retry client errors (4xx)\n                    if ((0,_error_handling__WEBPACK_IMPORTED_MODULE_0__.isApiError)(error) && error.status >= 400 && error.status < 500) {\n                        return false;\n                    }\n                    // Retry once for server errors or network issues\n                    return failureCount < 1;\n                },\n                // Retry delay for mutations (longer than queries)\n                retryDelay: 2000,\n                // Use error boundary for critical mutation errors\n                useErrorBoundary: (error)=>{\n                    return (0,_error_handling__WEBPACK_IMPORTED_MODULE_0__.isApiError)(error) && error.status >= 500;\n                },\n                // Network mode for mutations\n                networkMode: 'online',\n                // Meta information\n                meta: {\n                    errorContext: 'mutation'\n                }\n            }\n        },\n        // Global query cache with error handling\n        queryCache: new _tanstack_react_query__WEBPACK_IMPORTED_MODULE_3__.QueryCache({\n            onError: (error, query)=>{\n                const context = `Query: ${JSON.stringify(query.queryKey)}`;\n                _error_handling__WEBPACK_IMPORTED_MODULE_0__.errorHandler.handleQueryError(error, context);\n                // Log query details in development\n                if (true) {\n                    console.group(`❌ Query Error`);\n                    console.error('Error:', error);\n                    console.log('Query Key:', query.queryKey);\n                    console.log('Query State:', query.state);\n                    console.groupEnd();\n                }\n            },\n            onSuccess: (data, query)=>{\n                // Log successful queries in development\n                if ( true && query.queryKey[0] !== 'kgv') {\n                    console.log(`✅ Query Success:`, query.queryKey);\n                }\n            },\n            onSettled: (data, error, query)=>{\n                // Query performance monitoring in development\n                if (true) {\n                    const duration = Date.now() - (query.state.dataUpdatedAt || 0);\n                    if (duration > 1000) {\n                        console.warn(`🐌 Slow Query (${duration}ms):`, query.queryKey);\n                    }\n                }\n            }\n        }),\n        // Global mutation cache with error handling\n        mutationCache: new _tanstack_react_query__WEBPACK_IMPORTED_MODULE_4__.MutationCache({\n            onError: (error, variables, context, mutation)=>{\n                const operation = mutation.options.mutationKey || 'unknown';\n                _error_handling__WEBPACK_IMPORTED_MODULE_0__.errorHandler.handleMutationError(error, operation, variables);\n                // Log mutation details in development\n                if (true) {\n                    console.group(`❌ Mutation Error`);\n                    console.error('Error:', error);\n                    console.log('Operation:', operation);\n                    console.log('Variables:', variables);\n                    console.log('Context:', context);\n                    console.groupEnd();\n                }\n            },\n            onSuccess: (data, variables, context, mutation)=>{\n                // Log successful mutations in development\n                if (true) {\n                    const operation = mutation.options.mutationKey || 'unknown';\n                    console.log(`✅ Mutation Success:`, operation);\n                }\n            },\n            onSettled: (data, error, variables, context, mutation)=>{\n                // Mutation performance monitoring in development\n                if (true) {\n                    const duration = Date.now() - (mutation.state.submittedAt || 0);\n                    if (duration > 3000) {\n                        const operation = mutation.options.mutationKey || 'unknown';\n                        console.warn(`🐌 Slow Mutation (${duration}ms):`, operation);\n                    }\n                }\n            }\n        })\n    });\n}\n/**\n * Configure query client for different environments\n */ function configureQueryClient(environment = 'production') {\n    const baseClient = createQueryClient();\n    switch(environment){\n        case 'development':\n            // More aggressive refetching and shorter cache times for development\n            baseClient.setDefaultOptions({\n                queries: {\n                    staleTime: _query_keys__WEBPACK_IMPORTED_MODULE_1__.STALE_TIMES.DYNAMIC,\n                    gcTime: _query_keys__WEBPACK_IMPORTED_MODULE_1__.CACHE_TIMES.DYNAMIC,\n                    refetchOnWindowFocus: true,\n                    refetchInterval: false\n                }\n            });\n            break;\n        case 'test':\n            // Disable network requests and retries for testing\n            baseClient.setDefaultOptions({\n                queries: {\n                    retry: false,\n                    staleTime: Infinity,\n                    gcTime: Infinity,\n                    refetchOnWindowFocus: false,\n                    refetchOnReconnect: false,\n                    networkMode: 'offlineFirst'\n                },\n                mutations: {\n                    retry: false,\n                    networkMode: 'offlineFirst'\n                }\n            });\n            break;\n        case 'production':\n            // Optimized settings for production\n            baseClient.setDefaultOptions({\n                queries: {\n                    staleTime: _query_keys__WEBPACK_IMPORTED_MODULE_1__.STALE_TIMES.LISTS,\n                    gcTime: _query_keys__WEBPACK_IMPORTED_MODULE_1__.CACHE_TIMES.LISTS,\n                    refetchOnWindowFocus: true,\n                    refetchOnReconnect: 'always'\n                }\n            });\n            break;\n    }\n    return baseClient;\n}\n/**\n * Query client factory with environment detection\n */ function createAppQueryClient() {\n    const environment = \"development\";\n    return configureQueryClient(environment);\n}\n/**\n * Utility to clear all cache data (useful for logout)\n */ function clearAllCache(queryClient) {\n    queryClient.clear();\n    // Also clear error log\n    _error_handling__WEBPACK_IMPORTED_MODULE_0__.errorHandler.clearErrorLog();\n}\n/**\n * Utility to invalidate authentication-related queries\n */ function invalidateAuthQueries(queryClient) {\n    queryClient.invalidateQueries({\n        queryKey: [\n            'kgv',\n            'auth'\n        ]\n    });\n    queryClient.invalidateQueries({\n        queryKey: [\n            'kgv',\n            'dashboard'\n        ]\n    });\n}\n/**\n * Utility to prefetch critical data on app startup\n */ async function prefetchCriticalData(queryClient) {\n    const prefetchPromises = [\n        // Prefetch user data if authenticated\n        queryClient.prefetchQuery({\n            queryKey: [\n                'kgv',\n                'auth',\n                'user'\n            ],\n            staleTime: _query_keys__WEBPACK_IMPORTED_MODULE_1__.STALE_TIMES.STATIC\n        }),\n        // Prefetch dashboard stats\n        queryClient.prefetchQuery({\n            queryKey: [\n                'kgv',\n                'dashboard',\n                'stats'\n            ],\n            staleTime: _query_keys__WEBPACK_IMPORTED_MODULE_1__.STALE_TIMES.DYNAMIC\n        }),\n        // Prefetch dropdown data for forms\n        queryClient.prefetchQuery({\n            queryKey: [\n                'kgv',\n                'bezirke',\n                'dropdown'\n            ],\n            staleTime: _query_keys__WEBPACK_IMPORTED_MODULE_1__.STALE_TIMES.STATIC\n        })\n    ];\n    try {\n        await Promise.allSettled(prefetchPromises);\n    } catch (error) {\n        console.warn('Some prefetch operations failed:', error);\n    }\n}\n/**\n * Performance monitoring utilities\n */ const queryPerformance = {\n    /**\n   * Log query performance metrics\n   */ logMetrics: (queryClient)=>{\n        if (false) {}\n        const cache = queryClient.getQueryCache();\n        const queries = cache.getAll();\n        console.group('📊 Query Performance Metrics');\n        console.log(`Total Queries: ${queries.length}`);\n        console.log(`Active Queries: ${queries.filter((q)=>q.getObserversCount() > 0).length}`);\n        console.log(`Stale Queries: ${queries.filter((q)=>q.isStale()).length}`);\n        console.log(`Error Queries: ${queries.filter((q)=>q.state.status === 'error').length}`);\n        // Memory usage estimate\n        const memoryUsage = JSON.stringify(cache).length;\n        console.log(`Estimated Cache Size: ${(memoryUsage / 1024).toFixed(2)} KB`);\n        console.groupEnd();\n    },\n    /**\n   * Get slow queries (queries that took longer than threshold)\n   */ getSlowQueries: (queryClient, thresholdMs = 1000)=>{\n        const cache = queryClient.getQueryCache();\n        const queries = cache.getAll();\n        return queries.filter((query)=>{\n            const duration = (query.state.dataUpdatedAt || 0) - (query.state.fetchFailureTime || 0);\n            return duration > thresholdMs;\n        }).map((query)=>({\n                queryKey: query.queryKey,\n                duration: (query.state.dataUpdatedAt || 0) - (query.state.fetchFailureTime || 0),\n                status: query.state.status\n            }));\n    }\n};\n/**\n * Dev tools integration\n */ const devTools = {\n    /**\n   * Export cache data for debugging\n   */ exportCache: (queryClient)=>{\n        if (false) {}\n        const cache = queryClient.getQueryCache();\n        const data = cache.getAll().reduce((acc, query)=>{\n            acc[JSON.stringify(query.queryKey)] = {\n                data: query.state.data,\n                status: query.state.status,\n                dataUpdatedAt: query.state.dataUpdatedAt,\n                error: query.state.error\n            };\n            return acc;\n        }, {});\n        console.log('Cache Export:', data);\n        return data;\n    },\n    /**\n   * Clear specific query pattern\n   */ clearPattern: (queryClient, pattern)=>{\n        if (false) {}\n        queryClient.removeQueries({\n            queryKey: pattern\n        });\n        console.log(`Cleared queries matching:`, pattern);\n    }\n};\n// Export default configured client\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (createAppQueryClient);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/react-query-config.ts\n"));

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["commons","main-app"], () => (__webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22display%5C%22%3A%5C%22swap%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-inter%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fsrc%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fsrc%2Fapp%2Fproviders.tsx%22%2C%22ids%22%3A%5B%22Providers%22%5D%7D&server=false!")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);