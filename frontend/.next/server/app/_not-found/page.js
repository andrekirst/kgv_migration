/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/_not-found/page";
exports.ids = ["app/_not-found/page"];
exports.modules = {

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2F_not-found%2Fpage&page=%2F_not-found%2Fpage&appPaths=&pagePath=%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-not-found.js&appDir=%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":
/*!*************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2F_not-found%2Fpage&page=%2F_not-found%2Fpage&appPaths=&pagePath=%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-not-found.js&appDir=%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GlobalError: () => (/* reexport default from dynamic */ next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_24___default.a),\n/* harmony export */   __next_app__: () => (/* binding */ __next_app__),\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   pages: () => (/* binding */ pages),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   tree: () => (/* binding */ tree)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-page/module.compiled */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/module.compiled.js?cc4a\");\n/* harmony import */ var next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_app_render_interop_default__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/app-render/interop-default */ \"(rsc)/./node_modules/next/dist/server/app-render/interop-default.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_experimental_ppr__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/experimental/ppr */ \"(rsc)/./node_modules/next/dist/server/lib/experimental/ppr.js\");\n/* harmony import */ var next_dist_server_lib_experimental_ppr__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_experimental_ppr__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_request_fallback_params__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/request/fallback-params */ \"(rsc)/./node_modules/next/dist/server/request/fallback-params.js\");\n/* harmony import */ var next_dist_server_app_render_encryption_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/app-render/encryption-utils */ \"(rsc)/./node_modules/next/dist/server/app-render/encryption-utils.js\");\n/* harmony import */ var next_dist_server_app_render_encryption_utils__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_encryption_utils__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/lib/streaming-metadata */ \"(rsc)/./node_modules/next/dist/server/lib/streaming-metadata.js\");\n/* harmony import */ var next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_app_render_action_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/app-render/action-utils */ \"(rsc)/./node_modules/next/dist/server/app-render/action-utils.js\");\n/* harmony import */ var next_dist_server_app_render_action_utils__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_action_utils__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_server_lib_server_action_request_meta__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/server/lib/server-action-request-meta */ \"(rsc)/./node_modules/next/dist/server/lib/server-action-request-meta.js\");\n/* harmony import */ var next_dist_server_lib_server_action_request_meta__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_server_action_request_meta__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/client/components/app-router-headers */ \"(rsc)/./node_modules/next/dist/client/components/app-router-headers.js\");\n/* harmony import */ var next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/is-bot */ \"next/dist/shared/lib/router/utils/is-bot\");\n/* harmony import */ var next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_16__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17__);\n/* harmony import */ var next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! next/dist/lib/fallback */ \"(rsc)/./node_modules/next/dist/lib/fallback.js\");\n/* harmony import */ var next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__);\n/* harmony import */ var next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! next/dist/server/render-result */ \"(rsc)/./node_modules/next/dist/server/render-result.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__);\n/* harmony import */ var next_dist_server_stream_utils_encoded_tags__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! next/dist/server/stream-utils/encoded-tags */ \"(rsc)/./node_modules/next/dist/server/stream-utils/encoded-tags.js\");\n/* harmony import */ var next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! next/dist/server/send-payload */ \"(rsc)/./node_modules/next/dist/server/send-payload.js\");\n/* harmony import */ var next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_23__);\n/* harmony import */ var next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! next/dist/client/components/builtin/global-error.js */ \"(rsc)/./node_modules/next/dist/client/components/builtin/global-error.js\");\n/* harmony import */ var next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_24___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_24__);\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! next/dist/server/app-render/entry-base */ \"(rsc)/./node_modules/next/dist/server/app-render/entry-base.js\");\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_25___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_25__);\n/* harmony import */ var next_dist_client_components_redirect_status_code__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! next/dist/client/components/redirect-status-code */ \"(rsc)/./node_modules/next/dist/client/components/redirect-status-code.js\");\n/* harmony import */ var next_dist_client_components_redirect_status_code__WEBPACK_IMPORTED_MODULE_26___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_redirect_status_code__WEBPACK_IMPORTED_MODULE_26__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_25__) if([\"default\",\"tree\",\"pages\",\"GlobalError\",\"__next_app__\",\"routeModule\",\"handler\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_25__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\nconst notFound0 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/builtin/not-found.js */ \"(rsc)/./node_modules/next/dist/client/components/builtin/not-found.js\", 23));\nconst module1 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/layout.tsx */ \"(rsc)/./src/app/layout.tsx\"));\nconst module2 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/builtin/global-error.js */ \"(rsc)/./node_modules/next/dist/client/components/builtin/global-error.js\", 23));\nconst module3 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/builtin/forbidden.js */ \"(rsc)/./node_modules/next/dist/client/components/builtin/forbidden.js\", 23));\nconst module4 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/builtin/unauthorized.js */ \"(rsc)/./node_modules/next/dist/client/components/builtin/unauthorized.js\", 23));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\nconst tree = {\n        children: [\n        '',\n        {\n              children: [\"/_not-found\", {\n                children: ['__PAGE__', {}, {\n                  page: [\n                    notFound0,\n                    \"next/dist/client/components/builtin/not-found.js\"\n                  ]\n                }]\n              }, {}]\n            },\n        {\n        'layout': [module1, \"/home/andrekirst/git/github/andrekirst/kgv_migration/frontend/src/app/layout.tsx\"],\n'global-error': [module2, \"next/dist/client/components/builtin/global-error.js\"],\n'forbidden': [module3, \"next/dist/client/components/builtin/forbidden.js\"],\n'unauthorized': [module4, \"next/dist/client/components/builtin/unauthorized.js\"],\n        \n      }\n      ]\n      }.children;\nconst pages = [];\n\n\n\nconst __next_app_require__ = __webpack_require__\nconst __next_app_load_chunk__ = () => Promise.resolve()\nconst __next_app__ = {\n    require: __next_app_require__,\n    loadChunk: __next_app_load_chunk__\n};\n\n\n\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppPageRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n        page: \"/_not-found/page\",\n        pathname: \"/_not-found\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: '',\n        appPaths: []\n    },\n    userland: {\n        loaderTree: tree\n    },\n    distDir: \".next\" || 0,\n    projectDir:  false || ''\n});\nasync function handler(req, res, ctx) {\n    var _this;\n    let srcPage = \"/_not-found/page\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = \"false\";\n    const initialPostponed = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'postponed');\n    // TODO: replace with more specific flags\n    const minimalMode = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'minimalMode');\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, query, params, parsedUrl, pageIsDynamic, buildManifest, nextFontManifest, reactLoadableManifest, serverActionsManifest, clientReferenceManifest, subresourceIntegrityManifest, prerenderManifest, isDraftMode, resolvedPathname, revalidateOnlyGenerated, routerServerContext, nextConfig } = prepareResult;\n    const pathname = parsedUrl.pathname || '/';\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_13__.normalizeAppPath)(srcPage);\n    let { isOnDemandRevalidate } = prepareResult;\n    const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n    const isPrerendered = prerenderManifest.routes[resolvedPathname];\n    let isSSG = Boolean(prerenderInfo || isPrerendered || prerenderManifest.routes[normalizedSrcPage]);\n    const userAgent = req.headers['user-agent'] || '';\n    const botType = (0,next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_16__.getBotType)(userAgent);\n    const isHtmlBot = (0,next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_11__.isHtmlBotRequest)(req);\n    /**\n   * If true, this indicates that the request being made is for an app\n   * prefetch request.\n   */ const isPrefetchRSCRequest = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'isPrefetchRSCRequest') ?? Boolean(req.headers[next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15__.NEXT_ROUTER_PREFETCH_HEADER]);\n    // NOTE: Don't delete headers[RSC] yet, it still needs to be used in renderToHTML later\n    const isRSCRequest = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'isRSCRequest') ?? Boolean(req.headers[next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15__.RSC_HEADER]);\n    const isPossibleServerAction = (0,next_dist_server_lib_server_action_request_meta__WEBPACK_IMPORTED_MODULE_14__.getIsPossibleServerAction)(req);\n    /**\n   * If the route being rendered is an app page, and the ppr feature has been\n   * enabled, then the given route _could_ support PPR.\n   */ const couldSupportPPR = (0,next_dist_server_lib_experimental_ppr__WEBPACK_IMPORTED_MODULE_8__.checkIsAppPPREnabled)(nextConfig.experimental.ppr);\n    // When enabled, this will allow the use of the `?__nextppronly` query to\n    // enable debugging of the static shell.\n    const hasDebugStaticShellQuery =  false && 0;\n    // When enabled, this will allow the use of the `?__nextppronly` query\n    // to enable debugging of the fallback shell.\n    const hasDebugFallbackShellQuery = hasDebugStaticShellQuery && query.__nextppronly === 'fallback';\n    // This page supports PPR if it is marked as being `PARTIALLY_STATIC` in the\n    // prerender manifest and this is an app page.\n    const isRoutePPREnabled = couldSupportPPR && (((_this = prerenderManifest.routes[normalizedSrcPage] ?? prerenderManifest.dynamicRoutes[normalizedSrcPage]) == null ? void 0 : _this.renderingMode) === 'PARTIALLY_STATIC' || // Ideally we'd want to check the appConfig to see if this page has PPR\n    // enabled or not, but that would require plumbing the appConfig through\n    // to the server during development. We assume that the page supports it\n    // but only during development.\n    hasDebugStaticShellQuery && (routeModule.isDev === true || (routerServerContext == null ? void 0 : routerServerContext.experimentalTestProxy) === true));\n    const isDebugStaticShell = hasDebugStaticShellQuery && isRoutePPREnabled;\n    // We should enable debugging dynamic accesses when the static shell\n    // debugging has been enabled and we're also in development mode.\n    const isDebugDynamicAccesses = isDebugStaticShell && routeModule.isDev === true;\n    const isDebugFallbackShell = hasDebugFallbackShellQuery && isRoutePPREnabled;\n    // If we're in minimal mode, then try to get the postponed information from\n    // the request metadata. If available, use it for resuming the postponed\n    // render.\n    const minimalPostponed = isRoutePPREnabled ? initialPostponed : undefined;\n    // If PPR is enabled, and this is a RSC request (but not a prefetch), then\n    // we can use this fact to only generate the flight data for the request\n    // because we can't cache the HTML (as it's also dynamic).\n    const isDynamicRSCRequest = isRoutePPREnabled && isRSCRequest && !isPrefetchRSCRequest;\n    // Need to read this before it's stripped by stripFlightHeaders. We don't\n    // need to transfer it to the request meta because it's only read\n    // within this function; the static segment data should have already been\n    // generated, so we will always either return a static response or a 404.\n    const segmentPrefetchHeader = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'segmentPrefetchRSCRequest');\n    // TODO: investigate existing bug with shouldServeStreamingMetadata always\n    // being true for a revalidate due to modifying the base-server this.renderOpts\n    // when fixing this to correct logic it causes hydration issue since we set\n    // serveStreamingMetadata to true during export\n    let serveStreamingMetadata = !userAgent ? true : (0,next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_11__.shouldServeStreamingMetadata)(userAgent, nextConfig.htmlLimitedBots);\n    if (isHtmlBot && isRoutePPREnabled) {\n        isSSG = false;\n        serveStreamingMetadata = false;\n    }\n    // In development, we always want to generate dynamic HTML.\n    let supportsDynamicResponse = // If we're in development, we always support dynamic HTML, unless it's\n    // a data request, in which case we only produce static HTML.\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isSSG || // If this request has provided postponed data, it supports dynamic\n    // HTML.\n    typeof initialPostponed === 'string' || // If this is a dynamic RSC request, then this render supports dynamic\n    // HTML (it's dynamic).\n    isDynamicRSCRequest;\n    // When html bots request PPR page, perform the full dynamic rendering.\n    const shouldWaitOnAllReady = isHtmlBot && isRoutePPREnabled;\n    let ssgCacheKey = null;\n    if (!isDraftMode && isSSG && !supportsDynamicResponse && !isPossibleServerAction && !minimalPostponed && !isDynamicRSCRequest) {\n        ssgCacheKey = resolvedPathname;\n    }\n    // the staticPathKey differs from ssgCacheKey since\n    // ssgCacheKey is null in dev since we're always in \"dynamic\"\n    // mode in dev to bypass the cache, but we still need to honor\n    // dynamicParams = false in dev mode\n    let staticPathKey = ssgCacheKey;\n    if (!staticPathKey && routeModule.isDev) {\n        staticPathKey = resolvedPathname;\n    }\n    const ComponentMod = {\n        ...next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_25__,\n        tree,\n        pages,\n        GlobalError: (next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_24___default()),\n        handler,\n        routeModule,\n        __next_app__\n    };\n    // Before rendering (which initializes component tree modules), we have to\n    // set the reference manifests to our global store so Server Action's\n    // encryption util can access to them at the top level of the page module.\n    if (serverActionsManifest && clientReferenceManifest) {\n        (0,next_dist_server_app_render_encryption_utils__WEBPACK_IMPORTED_MODULE_10__.setReferenceManifestsSingleton)({\n            page: srcPage,\n            clientReferenceManifest,\n            serverActionsManifest,\n            serverModuleMap: (0,next_dist_server_app_render_action_utils__WEBPACK_IMPORTED_MODULE_12__.createServerModuleMap)({\n                serverActionsManifest\n            })\n        });\n    }\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    try {\n        const invokeRouteModule = async (span, context)=>{\n            const nextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_7__.NodeNextRequest(req);\n            const nextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_7__.NodeNextResponse(res);\n            // TODO: adapt for putting the RDC inside the postponed data\n            // If we're in dev, and this isn't a prefetch or a server action,\n            // we should seed the resume data cache.\n            if (true) {\n                if (nextConfig.experimental.dynamicIO && !isPrefetchRSCRequest && !context.renderOpts.isPossibleServerAction) {\n                    const warmup = await routeModule.warmup(nextReq, nextRes, context);\n                    // If the warmup is successful, we should use the resume data\n                    // cache from the warmup.\n                    if (warmup.metadata.renderResumeDataCache) {\n                        context.renderOpts.renderResumeDataCache = warmup.metadata.renderResumeDataCache;\n                    }\n                }\n            }\n            return routeModule.render(nextReq, nextRes, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const doRender = async ({ span, postponed, fallbackRouteParams })=>{\n            const context = {\n                query,\n                params,\n                page: normalizedSrcPage,\n                sharedContext: {\n                    buildId\n                },\n                serverComponentsHmrCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'serverComponentsHmrCache'),\n                fallbackRouteParams,\n                renderOpts: {\n                    App: ()=>null,\n                    Document: ()=>null,\n                    pageConfig: {},\n                    ComponentMod,\n                    Component: (0,next_dist_server_app_render_interop_default__WEBPACK_IMPORTED_MODULE_6__.interopDefault)(ComponentMod),\n                    params,\n                    routeModule,\n                    page: srcPage,\n                    postponed,\n                    shouldWaitOnAllReady,\n                    serveStreamingMetadata,\n                    supportsDynamicResponse: typeof postponed === 'string' || supportsDynamicResponse,\n                    buildManifest,\n                    nextFontManifest,\n                    reactLoadableManifest,\n                    subresourceIntegrityManifest,\n                    serverActionsManifest,\n                    clientReferenceManifest,\n                    setIsrStatus: routerServerContext == null ? void 0 : routerServerContext.setIsrStatus,\n                    dir: routeModule.projectDir,\n                    isDraftMode,\n                    isRevalidate: isSSG && !postponed && !isDynamicRSCRequest,\n                    botType,\n                    isOnDemandRevalidate,\n                    isPossibleServerAction,\n                    assetPrefix: nextConfig.assetPrefix,\n                    nextConfigOutput: nextConfig.output,\n                    crossOrigin: nextConfig.crossOrigin,\n                    trailingSlash: nextConfig.trailingSlash,\n                    previewProps: prerenderManifest.preview,\n                    deploymentId: nextConfig.deploymentId,\n                    enableTainting: nextConfig.experimental.taint,\n                    htmlLimitedBots: nextConfig.htmlLimitedBots,\n                    devtoolSegmentExplorer: nextConfig.experimental.devtoolSegmentExplorer,\n                    reactMaxHeadersLength: nextConfig.reactMaxHeadersLength,\n                    multiZoneDraftMode,\n                    incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'incrementalCache'),\n                    cacheLifeProfiles: nextConfig.experimental.cacheLife,\n                    basePath: nextConfig.basePath,\n                    serverActions: nextConfig.experimental.serverActions,\n                    ...isDebugStaticShell || isDebugDynamicAccesses ? {\n                        nextExport: true,\n                        supportsDynamicResponse: false,\n                        isStaticGeneration: true,\n                        isRevalidate: true,\n                        isDebugDynamicAccesses: isDebugDynamicAccesses\n                    } : {},\n                    experimental: {\n                        isRoutePPREnabled,\n                        expireTime: nextConfig.expireTime,\n                        staleTimes: nextConfig.experimental.staleTimes,\n                        dynamicIO: Boolean(nextConfig.experimental.dynamicIO),\n                        clientSegmentCache: Boolean(nextConfig.experimental.clientSegmentCache),\n                        dynamicOnHover: Boolean(nextConfig.experimental.dynamicOnHover),\n                        inlineCss: Boolean(nextConfig.experimental.inlineCss),\n                        authInterrupts: Boolean(nextConfig.experimental.authInterrupts),\n                        clientTraceMetadata: nextConfig.experimental.clientTraceMetadata || []\n                    },\n                    waitUntil: ctx.waitUntil,\n                    onClose: (cb)=>{\n                        res.on('close', cb);\n                    },\n                    onAfterTaskError: ()=>{},\n                    onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext),\n                    err: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'invokeError'),\n                    dev: routeModule.isDev\n                }\n            };\n            const result = await invokeRouteModule(span, context);\n            const { metadata } = result;\n            const { cacheControl, headers = {}, // Add any fetch tags that were on the page to the response headers.\n            fetchTags: cacheTags } = metadata;\n            if (cacheTags) {\n                headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n            }\n            // Pull any fetch metrics from the render onto the request.\n            ;\n            req.fetchMetrics = metadata.fetchMetrics;\n            // we don't throw static to dynamic errors in dev as isSSG\n            // is a best guess in dev since we don't have the prerender pass\n            // to know whether the path is actually static or not\n            if (isSSG && (cacheControl == null ? void 0 : cacheControl.revalidate) === 0 && !routeModule.isDev && !isRoutePPREnabled) {\n                const staticBailoutInfo = metadata.staticBailoutInfo;\n                const err = Object.defineProperty(new Error(`Page changed from static to dynamic at runtime ${resolvedPathname}${(staticBailoutInfo == null ? void 0 : staticBailoutInfo.description) ? `, reason: ${staticBailoutInfo.description}` : ``}` + `\\nsee more here https://nextjs.org/docs/messages/app-static-to-dynamic-error`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E132\",\n                    enumerable: false,\n                    configurable: true\n                });\n                if (staticBailoutInfo == null ? void 0 : staticBailoutInfo.stack) {\n                    const stack = staticBailoutInfo.stack;\n                    err.stack = err.message + stack.substring(stack.indexOf('\\n'));\n                }\n                throw err;\n            }\n            return {\n                value: {\n                    kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17__.CachedRouteKind.APP_PAGE,\n                    html: result,\n                    headers,\n                    rscData: metadata.flightData,\n                    postponed: metadata.postponed,\n                    status: metadata.statusCode,\n                    segmentData: metadata.segmentData\n                },\n                cacheControl\n            };\n        };\n        const responseGenerator = async ({ hasResolved, previousCacheEntry, isRevalidating, span })=>{\n            const isProduction = routeModule.isDev === false;\n            const didRespond = hasResolved || res.writableEnded;\n            // skip on-demand revalidate if cache is not present and\n            // revalidate-if-generated is set\n            if (isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry && !minimalMode) {\n                if (routerServerContext == null ? void 0 : routerServerContext.render404) {\n                    await routerServerContext.render404(req, res);\n                } else {\n                    res.statusCode = 404;\n                    res.end('This page could not be found');\n                }\n                return null;\n            }\n            let fallbackMode;\n            if (prerenderInfo) {\n                fallbackMode = (0,next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__.parseFallbackField)(prerenderInfo.fallback);\n            }\n            // When serving a bot request, we want to serve a blocking render and not\n            // the prerendered page. This ensures that the correct content is served\n            // to the bot in the head.\n            if (fallbackMode === next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__.FallbackMode.PRERENDER && (0,next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_16__.isBot)(userAgent)) {\n                fallbackMode = next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__.FallbackMode.BLOCKING_STATIC_RENDER;\n            }\n            if ((previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) === -1) {\n                isOnDemandRevalidate = true;\n            }\n            // TODO: adapt for PPR\n            // only allow on-demand revalidate for fallback: true/blocking\n            // or for prerendered fallback: false paths\n            if (isOnDemandRevalidate && (fallbackMode !== next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__.FallbackMode.NOT_FOUND || previousCacheEntry)) {\n                fallbackMode = next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__.FallbackMode.BLOCKING_STATIC_RENDER;\n            }\n            if (!minimalMode && fallbackMode !== next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__.FallbackMode.BLOCKING_STATIC_RENDER && staticPathKey && !didRespond && !isDraftMode && pageIsDynamic && (isProduction || !isPrerendered)) {\n                // if the page has dynamicParams: false and this pathname wasn't\n                // prerendered trigger the no fallback handling\n                if (// In development, fall through to render to handle missing\n                // getStaticPaths.\n                (isProduction || prerenderInfo) && // When fallback isn't present, abort this render so we 404\n                fallbackMode === next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__.FallbackMode.NOT_FOUND) {\n                    throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_23__.NoFallbackError();\n                }\n                let fallbackResponse;\n                if (isRoutePPREnabled && !isRSCRequest) {\n                    // We use the response cache here to handle the revalidation and\n                    // management of the fallback shell.\n                    fallbackResponse = await routeModule.handleResponse({\n                        cacheKey: isProduction ? normalizedSrcPage : null,\n                        req,\n                        nextConfig,\n                        routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n                        isFallback: true,\n                        prerenderManifest,\n                        isRoutePPREnabled,\n                        responseGenerator: async ()=>doRender({\n                                span,\n                                // We pass `undefined` as rendering a fallback isn't resumed\n                                // here.\n                                postponed: undefined,\n                                fallbackRouteParams: // If we're in production or we're debugging the fallback\n                                // shell then we should postpone when dynamic params are\n                                // accessed.\n                                isProduction || isDebugFallbackShell ? (0,next_dist_server_request_fallback_params__WEBPACK_IMPORTED_MODULE_9__.getFallbackRouteParams)(normalizedSrcPage) : null\n                            }),\n                        waitUntil: ctx.waitUntil\n                    });\n                    // If the fallback response was set to null, then we should return null.\n                    if (fallbackResponse === null) return null;\n                    // Otherwise, if we did get a fallback response, we should return it.\n                    if (fallbackResponse) {\n                        // Remove the cache control from the response to prevent it from being\n                        // used in the surrounding cache.\n                        delete fallbackResponse.cacheControl;\n                        return fallbackResponse;\n                    }\n                }\n            }\n            // Only requests that aren't revalidating can be resumed. If we have the\n            // minimal postponed data, then we should resume the render with it.\n            const postponed = !isOnDemandRevalidate && !isRevalidating && minimalPostponed ? minimalPostponed : undefined;\n            // When we're in minimal mode, if we're trying to debug the static shell,\n            // we should just return nothing instead of resuming the dynamic render.\n            if ((isDebugStaticShell || isDebugDynamicAccesses) && typeof postponed !== 'undefined') {\n                return {\n                    cacheControl: {\n                        revalidate: 1,\n                        expire: undefined\n                    },\n                    value: {\n                        kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17__.CachedRouteKind.PAGES,\n                        html: next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_19__[\"default\"].fromStatic(''),\n                        pageData: {},\n                        headers: undefined,\n                        status: undefined\n                    }\n                };\n            }\n            // If this is a dynamic route with PPR enabled and the default route\n            // matches were set, then we should pass the fallback route params to\n            // the renderer as this is a fallback revalidation request.\n            const fallbackRouteParams = pageIsDynamic && isRoutePPREnabled && ((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'renderFallbackShell') || isDebugFallbackShell) ? (0,next_dist_server_request_fallback_params__WEBPACK_IMPORTED_MODULE_9__.getFallbackRouteParams)(pathname) : null;\n            // Perform the render.\n            return doRender({\n                span,\n                postponed,\n                fallbackRouteParams\n            });\n        };\n        const handleResponse = async (span)=>{\n            var _cacheEntry_value, _cachedData_headers;\n            const cacheEntry = await routeModule.handleResponse({\n                cacheKey: ssgCacheKey,\n                responseGenerator: (c)=>responseGenerator({\n                        span,\n                        ...c\n                    }),\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n                isOnDemandRevalidate,\n                isRoutePPREnabled,\n                req,\n                nextConfig,\n                prerenderManifest,\n                waitUntil: ctx.waitUntil\n            });\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            // In dev, we should not cache pages for any reason.\n            if (routeModule.isDev) {\n                res.setHeader('Cache-Control', 'no-store, must-revalidate');\n            }\n            if (!cacheEntry) {\n                if (ssgCacheKey) {\n                    // A cache entry might not be generated if a response is written\n                    // in `getInitialProps` or `getServerSideProps`, but those shouldn't\n                    // have a cache key. If we do have a cache key but we don't end up\n                    // with a cache entry, then either Next.js or the application has a\n                    // bug that needs fixing.\n                    throw Object.defineProperty(new Error('invariant: cache entry required but not generated'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E62\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                return null;\n            }\n            if (((_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17__.CachedRouteKind.APP_PAGE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant app-page handler received invalid cache entry ${(_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E707\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            const didPostpone = typeof cacheEntry.value.postponed === 'string';\n            if (isSSG && // We don't want to send a cache header for requests that contain dynamic\n            // data. If this is a Dynamic RSC request or wasn't a Prefetch RSC\n            // request, then we should set the cache header.\n            !isDynamicRSCRequest && (!didPostpone || isPrefetchRSCRequest)) {\n                if (!minimalMode) {\n                    // set x-nextjs-cache header to match the header\n                    // we set for the image-optimizer\n                    res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n                }\n                // Set a header used by the client router to signal the response is static\n                // and should respect the `static` cache staleTime value.\n                res.setHeader(next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15__.NEXT_IS_PRERENDER_HEADER, '1');\n            }\n            const { value: cachedData } = cacheEntry;\n            // Coerce the cache control parameter from the render.\n            let cacheControl;\n            // If this is a resume request in minimal mode it is streamed with dynamic\n            // content and should not be cached.\n            if (minimalPostponed) {\n                cacheControl = {\n                    revalidate: 0,\n                    expire: undefined\n                };\n            } else if (minimalMode && isRSCRequest && !isPrefetchRSCRequest && isRoutePPREnabled) {\n                cacheControl = {\n                    revalidate: 0,\n                    expire: undefined\n                };\n            } else if (!routeModule.isDev) {\n                // If this is a preview mode request, we shouldn't cache it\n                if (isDraftMode) {\n                    cacheControl = {\n                        revalidate: 0,\n                        expire: undefined\n                    };\n                } else if (!isSSG) {\n                    if (!res.getHeader('Cache-Control')) {\n                        cacheControl = {\n                            revalidate: 0,\n                            expire: undefined\n                        };\n                    }\n                } else if (cacheEntry.cacheControl) {\n                    // If the cache entry has a cache control with a revalidate value that's\n                    // a number, use it.\n                    if (typeof cacheEntry.cacheControl.revalidate === 'number') {\n                        var _cacheEntry_cacheControl;\n                        if (cacheEntry.cacheControl.revalidate < 1) {\n                            throw Object.defineProperty(new Error(`Invalid revalidate configuration provided: ${cacheEntry.cacheControl.revalidate} < 1`), \"__NEXT_ERROR_CODE\", {\n                                value: \"E22\",\n                                enumerable: false,\n                                configurable: true\n                            });\n                        }\n                        cacheControl = {\n                            revalidate: cacheEntry.cacheControl.revalidate,\n                            expire: ((_cacheEntry_cacheControl = cacheEntry.cacheControl) == null ? void 0 : _cacheEntry_cacheControl.expire) ?? nextConfig.expireTime\n                        };\n                    } else {\n                        cacheControl = {\n                            revalidate: next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__.CACHE_ONE_YEAR,\n                            expire: undefined\n                        };\n                    }\n                }\n            }\n            cacheEntry.cacheControl = cacheControl;\n            if (typeof segmentPrefetchHeader === 'string' && (cachedData == null ? void 0 : cachedData.kind) === next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17__.CachedRouteKind.APP_PAGE && cachedData.segmentData) {\n                var _cachedData_headers1;\n                // This is a prefetch request issued by the client Segment Cache. These\n                // should never reach the application layer (lambda). We should either\n                // respond from the cache (HIT) or respond with 204 No Content (MISS).\n                // Set a header to indicate that PPR is enabled for this route. This\n                // lets the client distinguish between a regular cache miss and a cache\n                // miss due to PPR being disabled. In other contexts this header is used\n                // to indicate that the response contains dynamic data, but here we're\n                // only using it to indicate that the feature is enabled — the segment\n                // response itself contains whether the data is dynamic.\n                res.setHeader(next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15__.NEXT_DID_POSTPONE_HEADER, '2');\n                // Add the cache tags header to the response if it exists and we're in\n                // minimal mode while rendering a static page.\n                const tags = (_cachedData_headers1 = cachedData.headers) == null ? void 0 : _cachedData_headers1[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__.NEXT_CACHE_TAGS_HEADER];\n                if (minimalMode && isSSG && tags && typeof tags === 'string') {\n                    res.setHeader(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__.NEXT_CACHE_TAGS_HEADER, tags);\n                }\n                const matchedSegment = cachedData.segmentData.get(segmentPrefetchHeader);\n                if (matchedSegment !== undefined) {\n                    // Cache hit\n                    return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__.sendRenderResult)({\n                        req,\n                        res,\n                        type: 'rsc',\n                        generateEtags: nextConfig.generateEtags,\n                        poweredByHeader: nextConfig.poweredByHeader,\n                        result: next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_19__[\"default\"].fromStatic(matchedSegment),\n                        cacheControl: cacheEntry.cacheControl\n                    });\n                }\n                // Cache miss. Either a cache entry for this route has not been generated\n                // (which technically should not be possible when PPR is enabled, because\n                // at a minimum there should always be a fallback entry) or there's no\n                // match for the requested segment. Respond with a 204 No Content. We\n                // don't bother to respond with 404, because these requests are only\n                // issued as part of a prefetch.\n                res.statusCode = 204;\n                return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__.sendRenderResult)({\n                    req,\n                    res,\n                    type: 'rsc',\n                    generateEtags: nextConfig.generateEtags,\n                    poweredByHeader: nextConfig.poweredByHeader,\n                    result: next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_19__[\"default\"].fromStatic(''),\n                    cacheControl: cacheEntry.cacheControl\n                });\n            }\n            // If there's a callback for `onCacheEntry`, call it with the cache entry\n            // and the revalidate options.\n            const onCacheEntry = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'onCacheEntry');\n            if (onCacheEntry) {\n                const finished = await onCacheEntry({\n                    ...cacheEntry,\n                    // TODO: remove this when upstream doesn't\n                    // always expect this value to be \"PAGE\"\n                    value: {\n                        ...cacheEntry.value,\n                        kind: 'PAGE'\n                    }\n                }, {\n                    url: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'initURL')\n                });\n                if (finished) {\n                    // TODO: maybe we have to end the request?\n                    return null;\n                }\n            }\n            // If the request has a postponed state and it's a resume request we\n            // should error.\n            if (didPostpone && minimalPostponed) {\n                throw Object.defineProperty(new Error('Invariant: postponed state should not be present on a resume request'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E396\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (cachedData.headers) {\n                const headers = {\n                    ...cachedData.headers\n                };\n                if (!minimalMode || !isSSG) {\n                    delete headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__.NEXT_CACHE_TAGS_HEADER];\n                }\n                for (let [key, value] of Object.entries(headers)){\n                    if (typeof value === 'undefined') continue;\n                    if (Array.isArray(value)) {\n                        for (const v of value){\n                            res.appendHeader(key, v);\n                        }\n                    } else if (typeof value === 'number') {\n                        value = value.toString();\n                        res.appendHeader(key, value);\n                    } else {\n                        res.appendHeader(key, value);\n                    }\n                }\n            }\n            // Add the cache tags header to the response if it exists and we're in\n            // minimal mode while rendering a static page.\n            const tags = (_cachedData_headers = cachedData.headers) == null ? void 0 : _cachedData_headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__.NEXT_CACHE_TAGS_HEADER];\n            if (minimalMode && isSSG && tags && typeof tags === 'string') {\n                res.setHeader(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__.NEXT_CACHE_TAGS_HEADER, tags);\n            }\n            // If the request is a data request, then we shouldn't set the status code\n            // from the response because it should always be 200. This should be gated\n            // behind the experimental PPR flag.\n            if (cachedData.status && (!isRSCRequest || !isRoutePPREnabled)) {\n                res.statusCode = cachedData.status;\n            }\n            // Redirect information is encoded in RSC payload, so we don't need to use redirect status codes\n            if (!minimalMode && cachedData.status && next_dist_client_components_redirect_status_code__WEBPACK_IMPORTED_MODULE_26__.RedirectStatusCode[cachedData.status] && isRSCRequest) {\n                res.statusCode = 200;\n            }\n            // Mark that the request did postpone.\n            if (didPostpone) {\n                res.setHeader(next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15__.NEXT_DID_POSTPONE_HEADER, '1');\n            }\n            // we don't go through this block when preview mode is true\n            // as preview mode is a dynamic request (bypasses cache) and doesn't\n            // generate both HTML and payloads in the same request so continue to just\n            // return the generated payload\n            if (isRSCRequest && !isDraftMode) {\n                // If this is a dynamic RSC request, then stream the response.\n                if (typeof cachedData.rscData === 'undefined') {\n                    if (cachedData.postponed) {\n                        throw Object.defineProperty(new Error('Invariant: Expected postponed to be undefined'), \"__NEXT_ERROR_CODE\", {\n                            value: \"E372\",\n                            enumerable: false,\n                            configurable: true\n                        });\n                    }\n                    return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__.sendRenderResult)({\n                        req,\n                        res,\n                        type: 'rsc',\n                        generateEtags: nextConfig.generateEtags,\n                        poweredByHeader: nextConfig.poweredByHeader,\n                        result: cachedData.html,\n                        // Dynamic RSC responses cannot be cached, even if they're\n                        // configured with `force-static` because we have no way of\n                        // distinguishing between `force-static` and pages that have no\n                        // postponed state.\n                        // TODO: distinguish `force-static` from pages with no postponed state (static)\n                        cacheControl: isDynamicRSCRequest ? {\n                            revalidate: 0,\n                            expire: undefined\n                        } : cacheEntry.cacheControl\n                    });\n                }\n                // As this isn't a prefetch request, we should serve the static flight\n                // data.\n                return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__.sendRenderResult)({\n                    req,\n                    res,\n                    type: 'rsc',\n                    generateEtags: nextConfig.generateEtags,\n                    poweredByHeader: nextConfig.poweredByHeader,\n                    result: next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_19__[\"default\"].fromStatic(cachedData.rscData),\n                    cacheControl: cacheEntry.cacheControl\n                });\n            }\n            // This is a request for HTML data.\n            let body = cachedData.html;\n            // If there's no postponed state, we should just serve the HTML. This\n            // should also be the case for a resume request because it's completed\n            // as a server render (rather than a static render).\n            if (!didPostpone || minimalMode) {\n                return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__.sendRenderResult)({\n                    req,\n                    res,\n                    type: 'html',\n                    generateEtags: nextConfig.generateEtags,\n                    poweredByHeader: nextConfig.poweredByHeader,\n                    result: body,\n                    cacheControl: cacheEntry.cacheControl\n                });\n            }\n            // If we're debugging the static shell or the dynamic API accesses, we\n            // should just serve the HTML without resuming the render. The returned\n            // HTML will be the static shell so all the Dynamic API's will be used\n            // during static generation.\n            if (isDebugStaticShell || isDebugDynamicAccesses) {\n                // Since we're not resuming the render, we need to at least add the\n                // closing body and html tags to create valid HTML.\n                body.chain(new ReadableStream({\n                    start (controller) {\n                        controller.enqueue(next_dist_server_stream_utils_encoded_tags__WEBPACK_IMPORTED_MODULE_21__.ENCODED_TAGS.CLOSED.BODY_AND_HTML);\n                        controller.close();\n                    }\n                }));\n                return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__.sendRenderResult)({\n                    req,\n                    res,\n                    type: 'html',\n                    generateEtags: nextConfig.generateEtags,\n                    poweredByHeader: nextConfig.poweredByHeader,\n                    result: body,\n                    cacheControl: {\n                        revalidate: 0,\n                        expire: undefined\n                    }\n                });\n            }\n            // This request has postponed, so let's create a new transformer that the\n            // dynamic data can pipe to that will attach the dynamic data to the end\n            // of the response.\n            const transformer = new TransformStream();\n            body.chain(transformer.readable);\n            // Perform the render again, but this time, provide the postponed state.\n            // We don't await because we want the result to start streaming now, and\n            // we've already chained the transformer's readable to the render result.\n            doRender({\n                span,\n                postponed: cachedData.postponed,\n                // This is a resume render, not a fallback render, so we don't need to\n                // set this.\n                fallbackRouteParams: null\n            }).then(async (result)=>{\n                var _result_value;\n                if (!result) {\n                    throw Object.defineProperty(new Error('Invariant: expected a result to be returned'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E463\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                if (((_result_value = result.value) == null ? void 0 : _result_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17__.CachedRouteKind.APP_PAGE) {\n                    var _result_value1;\n                    throw Object.defineProperty(new Error(`Invariant: expected a page response, got ${(_result_value1 = result.value) == null ? void 0 : _result_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                        value: \"E305\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                // Pipe the resume result to the transformer.\n                await result.value.html.pipeTo(transformer.writable);\n            }).catch((err)=>{\n                // An error occurred during piping or preparing the render, abort\n                // the transformers writer so we can terminate the stream.\n                transformer.writable.abort(err).catch((e)=>{\n                    console.error(\"couldn't abort transformer\", e);\n                });\n            });\n            return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__.sendRenderResult)({\n                req,\n                res,\n                type: 'html',\n                generateEtags: nextConfig.generateEtags,\n                poweredByHeader: nextConfig.poweredByHeader,\n                result: body,\n                // We don't want to cache the response if it has postponed data because\n                // the response being sent to the client it's dynamic parts are streamed\n                // to the client on the same request.\n                cacheControl: {\n                    revalidate: 0,\n                    expire: undefined\n                }\n            });\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            return await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_23__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: srcPage,\n                routeType: 'render',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_2__.getRevalidateReason)({\n                    isRevalidate: isSSG,\n                    isOnDemandRevalidate\n                })\n            }, routerServerContext);\n        }\n        // rethrow so that we can handle serving error page\n        throw err;\n    }\n}\n\n//# sourceMappingURL=app-page.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2F_not-found%2Fpage&page=%2F_not-found%2Fpage&appPaths=&pagePath=%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-not-found.js&appDir=%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fasync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fgenerate%2Ficon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fnext-devtools%2Fuserspace%2Fapp%2Fsegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fasync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fgenerate%2Ficon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fnext-devtools%2Fuserspace%2Fapp%2Fsegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/builtin/global-error.js */ \"(rsc)/./node_modules/next/dist/client/components/builtin/global-error.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-page.js */ \"(rsc)/./node_modules/next/dist/client/components/client-page.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-segment.js */ \"(rsc)/./node_modules/next/dist/client/components/client-segment.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js */ \"(rsc)/./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/layout-router.js */ \"(rsc)/./node_modules/next/dist/client/components/layout-router.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/metadata/async-metadata.js */ \"(rsc)/./node_modules/next/dist/client/components/metadata/async-metadata.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/metadata/metadata-boundary.js */ \"(rsc)/./node_modules/next/dist/client/components/metadata/metadata-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/render-from-template-context.js */ \"(rsc)/./node_modules/next/dist/client/components/render-from-template-context.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/lib/metadata/generate/icon-mark.js */ \"(rsc)/./node_modules/next/dist/lib/metadata/generate/icon-mark.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js */ \"(rsc)/./node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRmhvbWUlMkZhbmRyZWtpcnN0JTJGZ2l0JTJGZ2l0aHViJTJGYW5kcmVraXJzdCUyRmtndl9taWdyYXRpb24lMkZmcm9udGVuZCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRmJ1aWx0aW4lMkZnbG9iYWwtZXJyb3IuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGaG9tZSUyRmFuZHJla2lyc3QlMkZnaXQlMkZnaXRodWIlMkZhbmRyZWtpcnN0JTJGa2d2X21pZ3JhdGlvbiUyRmZyb250ZW5kJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGY2xpZW50LXBhZ2UuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGaG9tZSUyRmFuZHJla2lyc3QlMkZnaXQlMkZnaXRodWIlMkZhbmRyZWtpcnN0JTJGa2d2X21pZ3JhdGlvbiUyRmZyb250ZW5kJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGY2xpZW50LXNlZ21lbnQuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGaG9tZSUyRmFuZHJla2lyc3QlMkZnaXQlMkZnaXRodWIlMkZhbmRyZWtpcnN0JTJGa2d2X21pZ3JhdGlvbiUyRmZyb250ZW5kJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGaHR0cC1hY2Nlc3MtZmFsbGJhY2slMkZlcnJvci1ib3VuZGFyeS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZob21lJTJGYW5kcmVraXJzdCUyRmdpdCUyRmdpdGh1YiUyRmFuZHJla2lyc3QlMkZrZ3ZfbWlncmF0aW9uJTJGZnJvbnRlbmQlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZsYXlvdXQtcm91dGVyLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRmhvbWUlMkZhbmRyZWtpcnN0JTJGZ2l0JTJGZ2l0aHViJTJGYW5kcmVraXJzdCUyRmtndl9taWdyYXRpb24lMkZmcm9udGVuZCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRm1ldGFkYXRhJTJGYXN5bmMtbWV0YWRhdGEuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGaG9tZSUyRmFuZHJla2lyc3QlMkZnaXQlMkZnaXRodWIlMkZhbmRyZWtpcnN0JTJGa2d2X21pZ3JhdGlvbiUyRmZyb250ZW5kJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGbWV0YWRhdGElMkZtZXRhZGF0YS1ib3VuZGFyeS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZob21lJTJGYW5kcmVraXJzdCUyRmdpdCUyRmdpdGh1YiUyRmFuZHJla2lyc3QlMkZrZ3ZfbWlncmF0aW9uJTJGZnJvbnRlbmQlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZyZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRmhvbWUlMkZhbmRyZWtpcnN0JTJGZ2l0JTJGZ2l0aHViJTJGYW5kcmVraXJzdCUyRmtndl9taWdyYXRpb24lMkZmcm9udGVuZCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGbGliJTJGbWV0YWRhdGElMkZnZW5lcmF0ZSUyRmljb24tbWFyay5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZob21lJTJGYW5kcmVraXJzdCUyRmdpdCUyRmdpdGh1YiUyRmFuZHJla2lyc3QlMkZrZ3ZfbWlncmF0aW9uJTJGZnJvbnRlbmQlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRm5leHQtZGV2dG9vbHMlMkZ1c2Vyc3BhY2UlMkZhcHAlMkZzZWdtZW50LWV4cGxvcmVyLW5vZGUuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0Qmc2VydmVyPXRydWUhIiwibWFwcGluZ3MiOiJBQUFBLHNQQUFtSztBQUNuSztBQUNBLG9PQUEwSjtBQUMxSjtBQUNBLDBPQUE2SjtBQUM3SjtBQUNBLG9SQUFrTDtBQUNsTDtBQUNBLHdPQUE0SjtBQUM1SjtBQUNBLDRQQUFzSztBQUN0SztBQUNBLGtRQUF5SztBQUN6SztBQUNBLHNRQUEySztBQUMzSztBQUNBLHdPQUE0SjtBQUM1SjtBQUNBLDRRQUE4SyIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL2hvbWUvYW5kcmVraXJzdC9naXQvZ2l0aHViL2FuZHJla2lyc3Qva2d2X21pZ3JhdGlvbi9mcm9udGVuZC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2J1aWx0aW4vZ2xvYmFsLWVycm9yLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvaG9tZS9hbmRyZWtpcnN0L2dpdC9naXRodWIvYW5kcmVraXJzdC9rZ3ZfbWlncmF0aW9uL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvY2xpZW50LXBhZ2UuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9ob21lL2FuZHJla2lyc3QvZ2l0L2dpdGh1Yi9hbmRyZWtpcnN0L2tndl9taWdyYXRpb24vZnJvbnRlbmQvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9jbGllbnQtc2VnbWVudC5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL2hvbWUvYW5kcmVraXJzdC9naXQvZ2l0aHViL2FuZHJla2lyc3Qva2d2X21pZ3JhdGlvbi9mcm9udGVuZC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2h0dHAtYWNjZXNzLWZhbGxiYWNrL2Vycm9yLWJvdW5kYXJ5LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvaG9tZS9hbmRyZWtpcnN0L2dpdC9naXRodWIvYW5kcmVraXJzdC9rZ3ZfbWlncmF0aW9uL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvbGF5b3V0LXJvdXRlci5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL2hvbWUvYW5kcmVraXJzdC9naXQvZ2l0aHViL2FuZHJla2lyc3Qva2d2X21pZ3JhdGlvbi9mcm9udGVuZC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL21ldGFkYXRhL2FzeW5jLW1ldGFkYXRhLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvaG9tZS9hbmRyZWtpcnN0L2dpdC9naXRodWIvYW5kcmVraXJzdC9rZ3ZfbWlncmF0aW9uL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvbWV0YWRhdGEvbWV0YWRhdGEtYm91bmRhcnkuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9ob21lL2FuZHJla2lyc3QvZ2l0L2dpdGh1Yi9hbmRyZWtpcnN0L2tndl9taWdyYXRpb24vZnJvbnRlbmQvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9yZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvaG9tZS9hbmRyZWtpcnN0L2dpdC9naXRodWIvYW5kcmVraXJzdC9rZ3ZfbWlncmF0aW9uL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvbGliL21ldGFkYXRhL2dlbmVyYXRlL2ljb24tbWFyay5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL2hvbWUvYW5kcmVraXJzdC9naXQvZ2l0aHViL2FuZHJla2lyc3Qva2d2X21pZ3JhdGlvbi9mcm9udGVuZC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L25leHQtZGV2dG9vbHMvdXNlcnNwYWNlL2FwcC9zZWdtZW50LWV4cGxvcmVyLW5vZGUuanNcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fasync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fgenerate%2Ficon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fnext-devtools%2Fuserspace%2Fapp%2Fsegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22display%5C%22%3A%5C%22swap%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-inter%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fsrc%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fsrc%2Fapp%2Fproviders.tsx%22%2C%22ids%22%3A%5B%22Providers%22%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22display%5C%22%3A%5C%22swap%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-inter%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fsrc%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fsrc%2Fapp%2Fproviders.tsx%22%2C%22ids%22%3A%5B%22Providers%22%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/providers.tsx */ \"(rsc)/./src/app/providers.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRmhvbWUlMkZhbmRyZWtpcnN0JTJGZ2l0JTJGZ2l0aHViJTJGYW5kcmVraXJzdCUyRmtndl9taWdyYXRpb24lMkZmcm9udGVuZCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZmb250JTJGZ29vZ2xlJTJGdGFyZ2V0LmNzcyUzRiU3QiU1QyUyMnBhdGglNUMlMjIlM0ElNUMlMjJzcmMlMkZhcHAlMkZsYXlvdXQudHN4JTVDJTIyJTJDJTVDJTIyaW1wb3J0JTVDJTIyJTNBJTVDJTIySW50ZXIlNUMlMjIlMkMlNUMlMjJhcmd1bWVudHMlNUMlMjIlM0ElNUIlN0IlNUMlMjJzdWJzZXRzJTVDJTIyJTNBJTVCJTVDJTIybGF0aW4lNUMlMjIlNUQlMkMlNUMlMjJkaXNwbGF5JTVDJTIyJTNBJTVDJTIyc3dhcCU1QyUyMiUyQyU1QyUyMnZhcmlhYmxlJTVDJTIyJTNBJTVDJTIyLS1mb250LWludGVyJTVDJTIyJTdEJTVEJTJDJTVDJTIydmFyaWFibGVOYW1lJTVDJTIyJTNBJTVDJTIyaW50ZXIlNUMlMjIlN0QlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGaG9tZSUyRmFuZHJla2lyc3QlMkZnaXQlMkZnaXRodWIlMkZhbmRyZWtpcnN0JTJGa2d2X21pZ3JhdGlvbiUyRmZyb250ZW5kJTJGc3JjJTJGYXBwJTJGZ2xvYmFscy5jc3MlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGaG9tZSUyRmFuZHJla2lyc3QlMkZnaXQlMkZnaXRodWIlMkZhbmRyZWtpcnN0JTJGa2d2X21pZ3JhdGlvbiUyRmZyb250ZW5kJTJGc3JjJTJGYXBwJTJGcHJvdmlkZXJzLnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMlByb3ZpZGVycyUyMiU1RCU3RCZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEsMEpBQXVKIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJQcm92aWRlcnNcIl0gKi8gXCIvaG9tZS9hbmRyZWtpcnN0L2dpdC9naXRodWIvYW5kcmVraXJzdC9rZ3ZfbWlncmF0aW9uL2Zyb250ZW5kL3NyYy9hcHAvcHJvdmlkZXJzLnRzeFwiKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22display%5C%22%3A%5C%22swap%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-inter%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fsrc%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fsrc%2Fapp%2Fproviders.tsx%22%2C%22ids%22%3A%5B%22Providers%22%5D%7D&server=true!\n");

/***/ }),

/***/ "(rsc)/./src/app/globals.css":
/*!*****************************!*\
  !*** ./src/app/globals.css ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"9f5a46e8844a\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2dsb2JhbHMuY3NzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxjQUFjO0FBQzdCLElBQUksS0FBVSxFQUFFLEVBQXVCIiwic291cmNlcyI6WyIvaG9tZS9hbmRyZWtpcnN0L2dpdC9naXRodWIvYW5kcmVraXJzdC9rZ3ZfbWlncmF0aW9uL2Zyb250ZW5kL3NyYy9hcHAvZ2xvYmFscy5jc3MiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCI5ZjVhNDZlODg0NGFcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/app/globals.css\n");

/***/ }),

/***/ "(rsc)/./src/app/layout.tsx":
/*!****************************!*\
  !*** ./src/app/layout.tsx ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RootLayout),\n/* harmony export */   metadata: () => (/* binding */ metadata),\n/* harmony export */   viewport: () => (/* binding */ viewport)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_font_google_target_css_path_src_app_layout_tsx_import_Inter_arguments_subsets_latin_display_swap_variable_font_inter_variableName_inter___WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/font/google/target.css?{\"path\":\"src/app/layout.tsx\",\"import\":\"Inter\",\"arguments\":[{\"subsets\":[\"latin\"],\"display\":\"swap\",\"variable\":\"--font-inter\"}],\"variableName\":\"inter\"} */ \"(rsc)/./node_modules/next/font/google/target.css?{\\\"path\\\":\\\"src/app/layout.tsx\\\",\\\"import\\\":\\\"Inter\\\",\\\"arguments\\\":[{\\\"subsets\\\":[\\\"latin\\\"],\\\"display\\\":\\\"swap\\\",\\\"variable\\\":\\\"--font-inter\\\"}],\\\"variableName\\\":\\\"inter\\\"}\");\n/* harmony import */ var next_font_google_target_css_path_src_app_layout_tsx_import_Inter_arguments_subsets_latin_display_swap_variable_font_inter_variableName_inter___WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_font_google_target_css_path_src_app_layout_tsx_import_Inter_arguments_subsets_latin_display_swap_variable_font_inter_variableName_inter___WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/utils */ \"(rsc)/./src/lib/utils.ts\");\n/* harmony import */ var _providers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./providers */ \"(rsc)/./src/app/providers.tsx\");\n/* harmony import */ var _globals_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./globals.css */ \"(rsc)/./src/app/globals.css\");\n// Root layout for KGV Frontend Application\n\n\n\n\n\nconst metadata = {\n    title: {\n        default: 'KGV Verwaltung',\n        template: '%s | KGV Verwaltung'\n    },\n    description: 'Kleingartenverein Verwaltungssystem - Moderne Lösung für die Antragsverwaltung',\n    keywords: [\n        'Kleingartenverein',\n        'KGV',\n        'Verwaltung',\n        'Anträge',\n        'Parzellen',\n        'Deutschland'\n    ],\n    authors: [\n        {\n            name: 'KGV Development Team'\n        }\n    ],\n    creator: 'KGV Development Team',\n    publisher: 'KGV',\n    formatDetection: {\n        email: false,\n        address: false,\n        telephone: false\n    },\n    metadataBase: new URL(\"http://localhost:3000\" || 0),\n    alternates: {\n        canonical: '/'\n    },\n    openGraph: {\n        type: 'website',\n        locale: 'de_DE',\n        url: '/',\n        title: 'KGV Verwaltung',\n        description: 'Kleingartenverein Verwaltungssystem - Moderne Lösung für die Antragsverwaltung',\n        siteName: 'KGV Verwaltung'\n    },\n    twitter: {\n        card: 'summary_large_image',\n        title: 'KGV Verwaltung',\n        description: 'Kleingartenverein Verwaltungssystem - Moderne Lösung für die Antragsverwaltung'\n    },\n    robots: {\n        index: false,\n        follow: false,\n        noarchive: true,\n        nosnippet: true,\n        noimageindex: true,\n        nocache: true\n    }\n};\nconst viewport = {\n    width: 'device-width',\n    initialScale: 1,\n    maximumScale: 5,\n    userScalable: true,\n    themeColor: [\n        {\n            media: '(prefers-color-scheme: light)',\n            color: '#0ea5e9'\n        },\n        {\n            media: '(prefers-color-scheme: dark)',\n            color: '#0284c7'\n        }\n    ],\n    colorScheme: 'light dark'\n};\nfunction RootLayout({ children }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"html\", {\n        lang: \"de\",\n        suppressHydrationWarning: true,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_1__.cn)('scroll-smooth antialiased', (next_font_google_target_css_path_src_app_layout_tsx_import_Inter_arguments_subsets_latin_display_swap_variable_font_inter_variableName_inter___WEBPACK_IMPORTED_MODULE_4___default().variable)),\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"head\", {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                        rel: \"preload\",\n                        href: \"/fonts/inter-var.woff2\",\n                        as: \"font\",\n                        type: \"font/woff2\",\n                        crossOrigin: \"anonymous\"\n                    }, void 0, false, {\n                        fileName: \"/home/andrekirst/git/github/andrekirst/kgv_migration/frontend/src/app/layout.tsx\",\n                        lineNumber: 95,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        httpEquiv: \"X-Content-Type-Options\",\n                        content: \"nosniff\"\n                    }, void 0, false, {\n                        fileName: \"/home/andrekirst/git/github/andrekirst/kgv_migration/frontend/src/app/layout.tsx\",\n                        lineNumber: 98,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        httpEquiv: \"X-Frame-Options\",\n                        content: \"DENY\"\n                    }, void 0, false, {\n                        fileName: \"/home/andrekirst/git/github/andrekirst/kgv_migration/frontend/src/app/layout.tsx\",\n                        lineNumber: 99,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        httpEquiv: \"X-XSS-Protection\",\n                        content: \"1; mode=block\"\n                    }, void 0, false, {\n                        fileName: \"/home/andrekirst/git/github/andrekirst/kgv_migration/frontend/src/app/layout.tsx\",\n                        lineNumber: 100,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        httpEquiv: \"Referrer-Policy\",\n                        content: \"strict-origin-when-cross-origin\"\n                    }, void 0, false, {\n                        fileName: \"/home/andrekirst/git/github/andrekirst/kgv_migration/frontend/src/app/layout.tsx\",\n                        lineNumber: 101,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"application-name\",\n                        content: \"KGV Verwaltung\"\n                    }, void 0, false, {\n                        fileName: \"/home/andrekirst/git/github/andrekirst/kgv_migration/frontend/src/app/layout.tsx\",\n                        lineNumber: 104,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"apple-mobile-web-app-capable\",\n                        content: \"yes\"\n                    }, void 0, false, {\n                        fileName: \"/home/andrekirst/git/github/andrekirst/kgv_migration/frontend/src/app/layout.tsx\",\n                        lineNumber: 105,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"apple-mobile-web-app-status-bar-style\",\n                        content: \"default\"\n                    }, void 0, false, {\n                        fileName: \"/home/andrekirst/git/github/andrekirst/kgv_migration/frontend/src/app/layout.tsx\",\n                        lineNumber: 106,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"apple-mobile-web-app-title\",\n                        content: \"KGV Verwaltung\"\n                    }, void 0, false, {\n                        fileName: \"/home/andrekirst/git/github/andrekirst/kgv_migration/frontend/src/app/layout.tsx\",\n                        lineNumber: 107,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"mobile-web-app-capable\",\n                        content: \"yes\"\n                    }, void 0, false, {\n                        fileName: \"/home/andrekirst/git/github/andrekirst/kgv_migration/frontend/src/app/layout.tsx\",\n                        lineNumber: 108,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"msapplication-TileColor\",\n                        content: \"#0ea5e9\"\n                    }, void 0, false, {\n                        fileName: \"/home/andrekirst/git/github/andrekirst/kgv_migration/frontend/src/app/layout.tsx\",\n                        lineNumber: 109,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                        rel: \"icon\",\n                        href: \"/favicon.ico\",\n                        sizes: \"any\"\n                    }, void 0, false, {\n                        fileName: \"/home/andrekirst/git/github/andrekirst/kgv_migration/frontend/src/app/layout.tsx\",\n                        lineNumber: 112,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                        rel: \"icon\",\n                        href: \"/icon.svg\",\n                        type: \"image/svg+xml\"\n                    }, void 0, false, {\n                        fileName: \"/home/andrekirst/git/github/andrekirst/kgv_migration/frontend/src/app/layout.tsx\",\n                        lineNumber: 113,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                        rel: \"apple-touch-icon\",\n                        href: \"/apple-touch-icon.png\"\n                    }, void 0, false, {\n                        fileName: \"/home/andrekirst/git/github/andrekirst/kgv_migration/frontend/src/app/layout.tsx\",\n                        lineNumber: 114,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                        rel: \"manifest\",\n                        href: \"/manifest.webmanifest\"\n                    }, void 0, false, {\n                        fileName: \"/home/andrekirst/git/github/andrekirst/kgv_migration/frontend/src/app/layout.tsx\",\n                        lineNumber: 115,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/andrekirst/git/github/andrekirst/kgv_migration/frontend/src/app/layout.tsx\",\n                lineNumber: 93,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"body\", {\n                className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_1__.cn)('min-h-screen bg-white font-sans text-secondary-900 antialiased', 'dark:bg-secondary-950 dark:text-secondary-50', (next_font_google_target_css_path_src_app_layout_tsx_import_Inter_arguments_subsets_latin_display_swap_variable_font_inter_variableName_inter___WEBPACK_IMPORTED_MODULE_4___default().className)),\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_providers__WEBPACK_IMPORTED_MODULE_2__.Providers, {\n                    children: children\n                }, void 0, false, {\n                    fileName: \"/home/andrekirst/git/github/andrekirst/kgv_migration/frontend/src/app/layout.tsx\",\n                    lineNumber: 124,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/home/andrekirst/git/github/andrekirst/kgv_migration/frontend/src/app/layout.tsx\",\n                lineNumber: 117,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/andrekirst/git/github/andrekirst/kgv_migration/frontend/src/app/layout.tsx\",\n        lineNumber: 85,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/layout.tsx\n");

/***/ }),

/***/ "(rsc)/./src/app/providers.tsx":
/*!*******************************!*\
  !*** ./src/app/providers.tsx ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Providers: () => (/* binding */ Providers)
/* harmony export */ });
/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-server-dom-webpack/server */ "(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-webpack-server.js");
/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__);

const Providers = (0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call Providers() from the server but Providers is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/home/andrekirst/git/github/andrekirst/kgv_migration/frontend/src/app/providers.tsx",
"Providers",
);

/***/ }),

/***/ "(rsc)/./src/lib/utils.ts":
/*!**************************!*\
  !*** ./src/lib/utils.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   camelToKebab: () => (/* binding */ camelToKebab),\n/* harmony export */   capitalize: () => (/* binding */ capitalize),\n/* harmony export */   cn: () => (/* binding */ cn),\n/* harmony export */   debounce: () => (/* binding */ debounce),\n/* harmony export */   deepClone: () => (/* binding */ deepClone),\n/* harmony export */   formatAddress: () => (/* binding */ formatAddress),\n/* harmony export */   formatBytes: () => (/* binding */ formatBytes),\n/* harmony export */   formatDate: () => (/* binding */ formatDate),\n/* harmony export */   formatDateTime: () => (/* binding */ formatDateTime),\n/* harmony export */   formatFullName: () => (/* binding */ formatFullName),\n/* harmony export */   formatPhoneNumber: () => (/* binding */ formatPhoneNumber),\n/* harmony export */   formatPostalCode: () => (/* binding */ formatPostalCode),\n/* harmony export */   formatRelativeTime: () => (/* binding */ formatRelativeTime),\n/* harmony export */   generateId: () => (/* binding */ generateId),\n/* harmony export */   getInitials: () => (/* binding */ getInitials),\n/* harmony export */   isEmpty: () => (/* binding */ isEmpty),\n/* harmony export */   isEqual: () => (/* binding */ isEqual),\n/* harmony export */   isValidEmail: () => (/* binding */ isValidEmail),\n/* harmony export */   isValidPhoneNumber: () => (/* binding */ isValidPhoneNumber),\n/* harmony export */   isValidPostalCode: () => (/* binding */ isValidPostalCode),\n/* harmony export */   sleep: () => (/* binding */ sleep),\n/* harmony export */   truncate: () => (/* binding */ truncate)\n/* harmony export */ });\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! clsx */ \"(rsc)/./node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var tailwind_merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tailwind-merge */ \"(rsc)/./node_modules/tailwind-merge/dist/bundle-mjs.mjs\");\n/* harmony import */ var _barrel_optimize_names_format_formatDistanceToNow_isValid_parseISO_date_fns__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! __barrel_optimize__?names=format,formatDistanceToNow,isValid,parseISO!=!date-fns */ \"(rsc)/./node_modules/date-fns/parseISO.mjs\");\n/* harmony import */ var _barrel_optimize_names_format_formatDistanceToNow_isValid_parseISO_date_fns__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! __barrel_optimize__?names=format,formatDistanceToNow,isValid,parseISO!=!date-fns */ \"(rsc)/./node_modules/date-fns/isValid.mjs\");\n/* harmony import */ var _barrel_optimize_names_format_formatDistanceToNow_isValid_parseISO_date_fns__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! __barrel_optimize__?names=format,formatDistanceToNow,isValid,parseISO!=!date-fns */ \"(rsc)/./node_modules/date-fns/format.mjs\");\n/* harmony import */ var _barrel_optimize_names_format_formatDistanceToNow_isValid_parseISO_date_fns__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! __barrel_optimize__?names=format,formatDistanceToNow,isValid,parseISO!=!date-fns */ \"(rsc)/./node_modules/date-fns/formatDistanceToNow.mjs\");\n/* harmony import */ var date_fns_locale__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! date-fns/locale */ \"(rsc)/./node_modules/date-fns/locale/de.mjs\");\n// Utility functions for the KGV Frontend Application\n\n\n\n\n/**\n * Combine classes with tailwind-merge\n */ function cn(...inputs) {\n    return (0,tailwind_merge__WEBPACK_IMPORTED_MODULE_1__.twMerge)((0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(inputs));\n}\n/**\n * Format date for German locale\n */ function formatDate(date, formatStr = 'dd.MM.yyyy') {\n    if (!date) return '-';\n    try {\n        const dateObj = typeof date === 'string' ? (0,_barrel_optimize_names_format_formatDistanceToNow_isValid_parseISO_date_fns__WEBPACK_IMPORTED_MODULE_2__.parseISO)(date) : date;\n        if (!(0,_barrel_optimize_names_format_formatDistanceToNow_isValid_parseISO_date_fns__WEBPACK_IMPORTED_MODULE_3__.isValid)(dateObj)) return '-';\n        return (0,_barrel_optimize_names_format_formatDistanceToNow_isValid_parseISO_date_fns__WEBPACK_IMPORTED_MODULE_4__.format)(dateObj, formatStr, {\n            locale: date_fns_locale__WEBPACK_IMPORTED_MODULE_5__.de\n        });\n    } catch  {\n        return '-';\n    }\n}\n/**\n * Format date with time for German locale\n */ function formatDateTime(date) {\n    return formatDate(date, 'dd.MM.yyyy HH:mm');\n}\n/**\n * Format relative time for German locale\n */ function formatRelativeTime(date) {\n    if (!date) return '-';\n    try {\n        const dateObj = typeof date === 'string' ? (0,_barrel_optimize_names_format_formatDistanceToNow_isValid_parseISO_date_fns__WEBPACK_IMPORTED_MODULE_2__.parseISO)(date) : date;\n        if (!(0,_barrel_optimize_names_format_formatDistanceToNow_isValid_parseISO_date_fns__WEBPACK_IMPORTED_MODULE_3__.isValid)(dateObj)) return '-';\n        return (0,_barrel_optimize_names_format_formatDistanceToNow_isValid_parseISO_date_fns__WEBPACK_IMPORTED_MODULE_6__.formatDistanceToNow)(dateObj, {\n            addSuffix: true,\n            locale: date_fns_locale__WEBPACK_IMPORTED_MODULE_5__.de\n        });\n    } catch  {\n        return '-';\n    }\n}\n/**\n * Format German phone number\n */ function formatPhoneNumber(phone) {\n    if (!phone) return '-';\n    // Remove all non-digits\n    const cleaned = phone.replace(/\\D/g, '');\n    // German mobile format\n    if (cleaned.startsWith('49') && cleaned.length === 12) {\n        return `+49 ${cleaned.slice(2, 5)} ${cleaned.slice(5, 8)} ${cleaned.slice(8)}`;\n    }\n    // German landline format\n    if (cleaned.startsWith('49') && cleaned.length === 11) {\n        return `+49 ${cleaned.slice(2, 5)} ${cleaned.slice(5)}`;\n    }\n    // Local format\n    if (cleaned.length === 11) {\n        return `0${cleaned.slice(1, 4)} ${cleaned.slice(4)}`;\n    }\n    return phone;\n}\n/**\n * Format German postal code\n */ function formatPostalCode(plz) {\n    if (!plz) return '-';\n    return plz.padStart(5, '0');\n}\n/**\n * Format full German address\n */ function formatAddress(strasse, plz, ort) {\n    const parts = [];\n    if (strasse) parts.push(strasse);\n    if (plz || ort) {\n        const location = [\n            formatPostalCode(plz),\n            ort\n        ].filter(Boolean).join(' ');\n        if (location.trim()) parts.push(location);\n    }\n    return parts.join(', ') || '-';\n}\n/**\n * Format full name\n */ function formatFullName(anrede, titel, vorname, nachname) {\n    const parts = [];\n    if (anrede) parts.push(anrede);\n    if (titel) parts.push(titel);\n    if (vorname) parts.push(vorname);\n    if (nachname) parts.push(nachname);\n    return parts.join(' ') || '-';\n}\n/**\n * Get initials from name\n */ function getInitials(name) {\n    return name.split(' ').map((word)=>word.charAt(0).toUpperCase()).slice(0, 2).join('');\n}\n/**\n * Validate German email\n */ function isValidEmail(email) {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n}\n/**\n * Validate German phone number\n */ function isValidPhoneNumber(phone) {\n    const cleaned = phone.replace(/\\D/g, '');\n    return cleaned.length >= 10 && cleaned.length <= 15;\n}\n/**\n * Validate German postal code\n */ function isValidPostalCode(plz) {\n    return /^\\d{5}$/.test(plz);\n}\n/**\n * Truncate text with ellipsis\n */ function truncate(text, maxLength) {\n    if (!text) return '-';\n    if (text.length <= maxLength) return text;\n    return text.slice(0, maxLength) + '...';\n}\n/**\n * Sleep utility for testing\n */ function sleep(ms) {\n    return new Promise((resolve)=>setTimeout(resolve, ms));\n}\n/**\n * Debounce function\n */ function debounce(func, wait) {\n    let timeout = null;\n    return (...args)=>{\n        if (timeout) clearTimeout(timeout);\n        timeout = setTimeout(()=>func(...args), wait);\n    };\n}\n/**\n * Generate random ID\n */ function generateId() {\n    return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n}\n/**\n * Convert bytes to human readable format\n */ function formatBytes(bytes, decimals = 2) {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = [\n        'Bytes',\n        'KB',\n        'MB',\n        'GB',\n        'TB',\n        'PB',\n        'EB',\n        'ZB',\n        'YB'\n    ];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n/**\n * Check if string is empty or whitespace\n */ function isEmpty(value) {\n    return !value || value.trim().length === 0;\n}\n/**\n * Capitalize first letter\n */ function capitalize(text) {\n    return text.charAt(0).toUpperCase() + text.slice(1).toLowerCase();\n}\n/**\n * Convert camelCase to kebab-case\n */ function camelToKebab(str) {\n    return str.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, '$1-$2').toLowerCase();\n}\n/**\n * Deep clone object\n */ function deepClone(obj) {\n    if (obj === null || typeof obj !== 'object') return obj;\n    if (obj instanceof Date) return new Date(obj.getTime());\n    if (obj instanceof Array) return obj.map((item)=>deepClone(item));\n    if (typeof obj === 'object') {\n        const clonedObj = {};\n        for(const key in obj){\n            if (obj.hasOwnProperty(key)) {\n                clonedObj[key] = deepClone(obj[key]);\n            }\n        }\n        return clonedObj;\n    }\n    return obj;\n}\n/**\n * Compare two objects for equality\n */ function isEqual(obj1, obj2) {\n    if (obj1 === obj2) return true;\n    if (obj1 == null || obj2 == null) return false;\n    if (typeof obj1 !== typeof obj2) return false;\n    if (typeof obj1 === 'object') {\n        const keys1 = Object.keys(obj1);\n        const keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) return false;\n        for (const key of keys1){\n            if (!keys2.includes(key)) return false;\n            if (!isEqual(obj1[key], obj2[key])) return false;\n        }\n        return true;\n    }\n    return false;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/utils.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fasync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fgenerate%2Ficon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fnext-devtools%2Fuserspace%2Fapp%2Fsegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fasync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fgenerate%2Ficon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fnext-devtools%2Fuserspace%2Fapp%2Fsegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/builtin/global-error.js */ \"(ssr)/./node_modules/next/dist/client/components/builtin/global-error.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-page.js */ \"(ssr)/./node_modules/next/dist/client/components/client-page.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-segment.js */ \"(ssr)/./node_modules/next/dist/client/components/client-segment.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js */ \"(ssr)/./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/layout-router.js */ \"(ssr)/./node_modules/next/dist/client/components/layout-router.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/metadata/async-metadata.js */ \"(ssr)/./node_modules/next/dist/client/components/metadata/async-metadata.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/metadata/metadata-boundary.js */ \"(ssr)/./node_modules/next/dist/client/components/metadata/metadata-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/render-from-template-context.js */ \"(ssr)/./node_modules/next/dist/client/components/render-from-template-context.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/next/dist/lib/metadata/generate/icon-mark.js */ \"(ssr)/./node_modules/next/dist/lib/metadata/generate/icon-mark.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js */ \"(ssr)/./node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRmhvbWUlMkZhbmRyZWtpcnN0JTJGZ2l0JTJGZ2l0aHViJTJGYW5kcmVraXJzdCUyRmtndl9taWdyYXRpb24lMkZmcm9udGVuZCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRmJ1aWx0aW4lMkZnbG9iYWwtZXJyb3IuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGaG9tZSUyRmFuZHJla2lyc3QlMkZnaXQlMkZnaXRodWIlMkZhbmRyZWtpcnN0JTJGa2d2X21pZ3JhdGlvbiUyRmZyb250ZW5kJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGY2xpZW50LXBhZ2UuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGaG9tZSUyRmFuZHJla2lyc3QlMkZnaXQlMkZnaXRodWIlMkZhbmRyZWtpcnN0JTJGa2d2X21pZ3JhdGlvbiUyRmZyb250ZW5kJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGY2xpZW50LXNlZ21lbnQuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGaG9tZSUyRmFuZHJla2lyc3QlMkZnaXQlMkZnaXRodWIlMkZhbmRyZWtpcnN0JTJGa2d2X21pZ3JhdGlvbiUyRmZyb250ZW5kJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGaHR0cC1hY2Nlc3MtZmFsbGJhY2slMkZlcnJvci1ib3VuZGFyeS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZob21lJTJGYW5kcmVraXJzdCUyRmdpdCUyRmdpdGh1YiUyRmFuZHJla2lyc3QlMkZrZ3ZfbWlncmF0aW9uJTJGZnJvbnRlbmQlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZsYXlvdXQtcm91dGVyLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRmhvbWUlMkZhbmRyZWtpcnN0JTJGZ2l0JTJGZ2l0aHViJTJGYW5kcmVraXJzdCUyRmtndl9taWdyYXRpb24lMkZmcm9udGVuZCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRm1ldGFkYXRhJTJGYXN5bmMtbWV0YWRhdGEuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGaG9tZSUyRmFuZHJla2lyc3QlMkZnaXQlMkZnaXRodWIlMkZhbmRyZWtpcnN0JTJGa2d2X21pZ3JhdGlvbiUyRmZyb250ZW5kJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGbWV0YWRhdGElMkZtZXRhZGF0YS1ib3VuZGFyeS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZob21lJTJGYW5kcmVraXJzdCUyRmdpdCUyRmdpdGh1YiUyRmFuZHJla2lyc3QlMkZrZ3ZfbWlncmF0aW9uJTJGZnJvbnRlbmQlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZyZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRmhvbWUlMkZhbmRyZWtpcnN0JTJGZ2l0JTJGZ2l0aHViJTJGYW5kcmVraXJzdCUyRmtndl9taWdyYXRpb24lMkZmcm9udGVuZCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGbGliJTJGbWV0YWRhdGElMkZnZW5lcmF0ZSUyRmljb24tbWFyay5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZob21lJTJGYW5kcmVraXJzdCUyRmdpdCUyRmdpdGh1YiUyRmFuZHJla2lyc3QlMkZrZ3ZfbWlncmF0aW9uJTJGZnJvbnRlbmQlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRm5leHQtZGV2dG9vbHMlMkZ1c2Vyc3BhY2UlMkZhcHAlMkZzZWdtZW50LWV4cGxvcmVyLW5vZGUuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0Qmc2VydmVyPXRydWUhIiwibWFwcGluZ3MiOiJBQUFBLHNQQUFtSztBQUNuSztBQUNBLG9PQUEwSjtBQUMxSjtBQUNBLDBPQUE2SjtBQUM3SjtBQUNBLG9SQUFrTDtBQUNsTDtBQUNBLHdPQUE0SjtBQUM1SjtBQUNBLDRQQUFzSztBQUN0SztBQUNBLGtRQUF5SztBQUN6SztBQUNBLHNRQUEySztBQUMzSztBQUNBLGtPQUE0SjtBQUM1SjtBQUNBLDRRQUE4SyIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL2hvbWUvYW5kcmVraXJzdC9naXQvZ2l0aHViL2FuZHJla2lyc3Qva2d2X21pZ3JhdGlvbi9mcm9udGVuZC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2J1aWx0aW4vZ2xvYmFsLWVycm9yLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvaG9tZS9hbmRyZWtpcnN0L2dpdC9naXRodWIvYW5kcmVraXJzdC9rZ3ZfbWlncmF0aW9uL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvY2xpZW50LXBhZ2UuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9ob21lL2FuZHJla2lyc3QvZ2l0L2dpdGh1Yi9hbmRyZWtpcnN0L2tndl9taWdyYXRpb24vZnJvbnRlbmQvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9jbGllbnQtc2VnbWVudC5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL2hvbWUvYW5kcmVraXJzdC9naXQvZ2l0aHViL2FuZHJla2lyc3Qva2d2X21pZ3JhdGlvbi9mcm9udGVuZC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2h0dHAtYWNjZXNzLWZhbGxiYWNrL2Vycm9yLWJvdW5kYXJ5LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvaG9tZS9hbmRyZWtpcnN0L2dpdC9naXRodWIvYW5kcmVraXJzdC9rZ3ZfbWlncmF0aW9uL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvbGF5b3V0LXJvdXRlci5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL2hvbWUvYW5kcmVraXJzdC9naXQvZ2l0aHViL2FuZHJla2lyc3Qva2d2X21pZ3JhdGlvbi9mcm9udGVuZC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL21ldGFkYXRhL2FzeW5jLW1ldGFkYXRhLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvaG9tZS9hbmRyZWtpcnN0L2dpdC9naXRodWIvYW5kcmVraXJzdC9rZ3ZfbWlncmF0aW9uL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvbWV0YWRhdGEvbWV0YWRhdGEtYm91bmRhcnkuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9ob21lL2FuZHJla2lyc3QvZ2l0L2dpdGh1Yi9hbmRyZWtpcnN0L2tndl9taWdyYXRpb24vZnJvbnRlbmQvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9yZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvaG9tZS9hbmRyZWtpcnN0L2dpdC9naXRodWIvYW5kcmVraXJzdC9rZ3ZfbWlncmF0aW9uL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvbGliL21ldGFkYXRhL2dlbmVyYXRlL2ljb24tbWFyay5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL2hvbWUvYW5kcmVraXJzdC9naXQvZ2l0aHViL2FuZHJla2lyc3Qva2d2X21pZ3JhdGlvbi9mcm9udGVuZC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L25leHQtZGV2dG9vbHMvdXNlcnNwYWNlL2FwcC9zZWdtZW50LWV4cGxvcmVyLW5vZGUuanNcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fasync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fgenerate%2Ficon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fnext-devtools%2Fuserspace%2Fapp%2Fsegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22display%5C%22%3A%5C%22swap%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-inter%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fsrc%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fsrc%2Fapp%2Fproviders.tsx%22%2C%22ids%22%3A%5B%22Providers%22%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22display%5C%22%3A%5C%22swap%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-inter%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fsrc%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fsrc%2Fapp%2Fproviders.tsx%22%2C%22ids%22%3A%5B%22Providers%22%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/providers.tsx */ \"(ssr)/./src/app/providers.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRmhvbWUlMkZhbmRyZWtpcnN0JTJGZ2l0JTJGZ2l0aHViJTJGYW5kcmVraXJzdCUyRmtndl9taWdyYXRpb24lMkZmcm9udGVuZCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZmb250JTJGZ29vZ2xlJTJGdGFyZ2V0LmNzcyUzRiU3QiU1QyUyMnBhdGglNUMlMjIlM0ElNUMlMjJzcmMlMkZhcHAlMkZsYXlvdXQudHN4JTVDJTIyJTJDJTVDJTIyaW1wb3J0JTVDJTIyJTNBJTVDJTIySW50ZXIlNUMlMjIlMkMlNUMlMjJhcmd1bWVudHMlNUMlMjIlM0ElNUIlN0IlNUMlMjJzdWJzZXRzJTVDJTIyJTNBJTVCJTVDJTIybGF0aW4lNUMlMjIlNUQlMkMlNUMlMjJkaXNwbGF5JTVDJTIyJTNBJTVDJTIyc3dhcCU1QyUyMiUyQyU1QyUyMnZhcmlhYmxlJTVDJTIyJTNBJTVDJTIyLS1mb250LWludGVyJTVDJTIyJTdEJTVEJTJDJTVDJTIydmFyaWFibGVOYW1lJTVDJTIyJTNBJTVDJTIyaW50ZXIlNUMlMjIlN0QlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGaG9tZSUyRmFuZHJla2lyc3QlMkZnaXQlMkZnaXRodWIlMkZhbmRyZWtpcnN0JTJGa2d2X21pZ3JhdGlvbiUyRmZyb250ZW5kJTJGc3JjJTJGYXBwJTJGZ2xvYmFscy5jc3MlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGaG9tZSUyRmFuZHJla2lyc3QlMkZnaXQlMkZnaXRodWIlMkZhbmRyZWtpcnN0JTJGa2d2X21pZ3JhdGlvbiUyRmZyb250ZW5kJTJGc3JjJTJGYXBwJTJGcHJvdmlkZXJzLnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMlByb3ZpZGVycyUyMiU1RCU3RCZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEsMEpBQXVKIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJQcm92aWRlcnNcIl0gKi8gXCIvaG9tZS9hbmRyZWtpcnN0L2dpdC9naXRodWIvYW5kcmVraXJzdC9rZ3ZfbWlncmF0aW9uL2Zyb250ZW5kL3NyYy9hcHAvcHJvdmlkZXJzLnRzeFwiKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22display%5C%22%3A%5C%22swap%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-inter%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fsrc%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fsrc%2Fapp%2Fproviders.tsx%22%2C%22ids%22%3A%5B%22Providers%22%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./src/app/providers.tsx":
/*!*******************************!*\
  !*** ./src/app/providers.tsx ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Providers: () => (/* binding */ Providers)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js\");\n/* harmony import */ var _tanstack_react_query_devtools__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @tanstack/react-query-devtools */ \"(ssr)/./node_modules/@tanstack/react-query-devtools/build/modern/index.js\");\n/* harmony import */ var next_themes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next-themes */ \"(ssr)/./node_modules/next-themes/dist/index.mjs\");\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-hot-toast */ \"(ssr)/./node_modules/react-hot-toast/dist/index.mjs\");\n/* harmony import */ var _lib_react_query_config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/react-query-config */ \"(ssr)/./src/lib/react-query-config.ts\");\n/* __next_internal_client_entry_do_not_use__ Providers auto */ \n// Providers component for global app state and configuration\n\n\n\n\n\n\nfunction Providers({ children }) {\n    // Create QueryClient with comprehensive error handling and German localization\n    const [queryClient] = react__WEBPACK_IMPORTED_MODULE_1__.useState({\n        \"Providers.useState\": ()=>(0,_lib_react_query_config__WEBPACK_IMPORTED_MODULE_4__.createAppQueryClient)()\n    }[\"Providers.useState\"]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_tanstack_react_query__WEBPACK_IMPORTED_MODULE_5__.QueryClientProvider, {\n        client: queryClient,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_themes__WEBPACK_IMPORTED_MODULE_2__.ThemeProvider, {\n            attribute: \"class\",\n            defaultTheme: \"system\",\n            enableSystem: true,\n            storageKey: \"kgv-theme\",\n            disableTransitionOnChange: true,\n            children: [\n                children,\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_hot_toast__WEBPACK_IMPORTED_MODULE_3__.Toaster, {\n                    position: \"top-right\",\n                    reverseOrder: false,\n                    gutter: 8,\n                    containerClassName: \"\",\n                    containerStyle: {},\n                    toastOptions: {\n                        // Styling\n                        className: '',\n                        duration: 5000,\n                        style: {\n                            background: '#ffffff',\n                            color: '#1f2937',\n                            border: '1px solid #e5e7eb',\n                            borderRadius: '0.5rem',\n                            fontSize: '14px',\n                            maxWidth: '400px'\n                        },\n                        // Success toast styling\n                        success: {\n                            duration: 4000,\n                            style: {\n                                background: '#f0fdf4',\n                                border: '1px solid #bbf7d0',\n                                color: '#166534'\n                            },\n                            iconTheme: {\n                                primary: '#22c55e',\n                                secondary: '#f0fdf4'\n                            }\n                        },\n                        // Error toast styling\n                        error: {\n                            duration: 6000,\n                            style: {\n                                background: '#fef2f2',\n                                border: '1px solid #fecaca',\n                                color: '#dc2626'\n                            },\n                            iconTheme: {\n                                primary: '#ef4444',\n                                secondary: '#fef2f2'\n                            }\n                        },\n                        // Loading toast styling\n                        loading: {\n                            duration: Infinity,\n                            style: {\n                                background: '#fffbeb',\n                                border: '1px solid #fde68a',\n                                color: '#d97706'\n                            }\n                        }\n                    }\n                }, void 0, false, {\n                    fileName: \"/home/andrekirst/git/github/andrekirst/kgv_migration/frontend/src/app/providers.tsx\",\n                    lineNumber: 31,\n                    columnNumber: 9\n                }, this),\n                 true && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_tanstack_react_query_devtools__WEBPACK_IMPORTED_MODULE_6__.ReactQueryDevtools, {\n                    initialIsOpen: false,\n                    position: \"bottom-right\",\n                    toggleButtonProps: {\n                        style: {\n                            marginLeft: 'auto',\n                            transform: 'scale(0.8)',\n                            transformOrigin: 'bottom right',\n                            zIndex: 99999\n                        }\n                    },\n                    panelProps: {\n                        style: {\n                            zIndex: 99998\n                        }\n                    }\n                }, void 0, false, {\n                    fileName: \"/home/andrekirst/git/github/andrekirst/kgv_migration/frontend/src/app/providers.tsx\",\n                    lineNumber: 89,\n                    columnNumber: 11\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/home/andrekirst/git/github/andrekirst/kgv_migration/frontend/src/app/providers.tsx\",\n            lineNumber: 21,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/home/andrekirst/git/github/andrekirst/kgv_migration/frontend/src/app/providers.tsx\",\n        lineNumber: 20,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvYXBwL3Byb3ZpZGVycy50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFFQSw2REFBNkQ7QUFDL0I7QUFDNkI7QUFDUTtBQUN4QjtBQUNGO0FBQ3NCO0FBTXhELFNBQVNNLFVBQVUsRUFBRUMsUUFBUSxFQUFrQjtJQUNwRCwrRUFBK0U7SUFDL0UsTUFBTSxDQUFDQyxZQUFZLEdBQUdSLDJDQUFjOzhCQUFDLElBQU1LLDZFQUFvQkE7O0lBRS9ELHFCQUNFLDhEQUFDSixzRUFBbUJBO1FBQUNTLFFBQVFGO2tCQUMzQiw0RUFBQ0wsc0RBQWFBO1lBQ1pRLFdBQVU7WUFDVkMsY0FBYTtZQUNiQyxZQUFZO1lBQ1pDLFlBQVc7WUFDWEMseUJBQXlCOztnQkFFeEJSOzhCQUdELDhEQUFDSCxvREFBT0E7b0JBQ05ZLFVBQVM7b0JBQ1RDLGNBQWM7b0JBQ2RDLFFBQVE7b0JBQ1JDLG9CQUFtQjtvQkFDbkJDLGdCQUFnQixDQUFDO29CQUNqQkMsY0FBYzt3QkFDWixVQUFVO3dCQUNWQyxXQUFXO3dCQUNYQyxVQUFVO3dCQUNWQyxPQUFPOzRCQUNMQyxZQUFZOzRCQUNaQyxPQUFPOzRCQUNQQyxRQUFROzRCQUNSQyxjQUFjOzRCQUNkQyxVQUFVOzRCQUNWQyxVQUFVO3dCQUNaO3dCQUNBLHdCQUF3Qjt3QkFDeEJDLFNBQVM7NEJBQ1BSLFVBQVU7NEJBQ1ZDLE9BQU87Z0NBQ0xDLFlBQVk7Z0NBQ1pFLFFBQVE7Z0NBQ1JELE9BQU87NEJBQ1Q7NEJBQ0FNLFdBQVc7Z0NBQ1RDLFNBQVM7Z0NBQ1RDLFdBQVc7NEJBQ2I7d0JBQ0Y7d0JBQ0Esc0JBQXNCO3dCQUN0QkMsT0FBTzs0QkFDTFosVUFBVTs0QkFDVkMsT0FBTztnQ0FDTEMsWUFBWTtnQ0FDWkUsUUFBUTtnQ0FDUkQsT0FBTzs0QkFDVDs0QkFDQU0sV0FBVztnQ0FDVEMsU0FBUztnQ0FDVEMsV0FBVzs0QkFDYjt3QkFDRjt3QkFDQSx3QkFBd0I7d0JBQ3hCRSxTQUFTOzRCQUNQYixVQUFVYzs0QkFDVmIsT0FBTztnQ0FDTEMsWUFBWTtnQ0FDWkUsUUFBUTtnQ0FDUkQsT0FBTzs0QkFDVDt3QkFDRjtvQkFDRjs7Ozs7O2dCQXpCRyxLQTZCa0Msa0JBQ3JDLDhEQUFDeEIsOEVBQWtCQTtvQkFDakJvQyxlQUFlO29CQUNmdEIsVUFBUztvQkFDVHVCLG1CQUFtQjt3QkFDakJmLE9BQU87NEJBQ0xnQixZQUFZOzRCQUNaQyxXQUFXOzRCQUNYQyxpQkFBaUI7NEJBQ2pCQyxRQUFRO3dCQUNWO29CQUNGO29CQUNBQyxZQUFZO3dCQUNWcEIsT0FBTzs0QkFDTG1CLFFBQVE7d0JBQ1Y7b0JBQ0Y7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBTVoiLCJzb3VyY2VzIjpbIi9ob21lL2FuZHJla2lyc3QvZ2l0L2dpdGh1Yi9hbmRyZWtpcnN0L2tndl9taWdyYXRpb24vZnJvbnRlbmQvc3JjL2FwcC9wcm92aWRlcnMudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50J1xuXG4vLyBQcm92aWRlcnMgY29tcG9uZW50IGZvciBnbG9iYWwgYXBwIHN0YXRlIGFuZCBjb25maWd1cmF0aW9uXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IFF1ZXJ5Q2xpZW50UHJvdmlkZXIgfSBmcm9tICdAdGFuc3RhY2svcmVhY3QtcXVlcnknXG5pbXBvcnQgeyBSZWFjdFF1ZXJ5RGV2dG9vbHMgfSBmcm9tICdAdGFuc3RhY2svcmVhY3QtcXVlcnktZGV2dG9vbHMnXG5pbXBvcnQgeyBUaGVtZVByb3ZpZGVyIH0gZnJvbSAnbmV4dC10aGVtZXMnXG5pbXBvcnQgeyBUb2FzdGVyIH0gZnJvbSAncmVhY3QtaG90LXRvYXN0J1xuaW1wb3J0IHsgY3JlYXRlQXBwUXVlcnlDbGllbnQgfSBmcm9tICdAL2xpYi9yZWFjdC1xdWVyeS1jb25maWcnXG5cbmludGVyZmFjZSBQcm92aWRlcnNQcm9wcyB7XG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGVcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIFByb3ZpZGVycyh7IGNoaWxkcmVuIH06IFByb3ZpZGVyc1Byb3BzKSB7XG4gIC8vIENyZWF0ZSBRdWVyeUNsaWVudCB3aXRoIGNvbXByZWhlbnNpdmUgZXJyb3IgaGFuZGxpbmcgYW5kIEdlcm1hbiBsb2NhbGl6YXRpb25cbiAgY29uc3QgW3F1ZXJ5Q2xpZW50XSA9IFJlYWN0LnVzZVN0YXRlKCgpID0+IGNyZWF0ZUFwcFF1ZXJ5Q2xpZW50KCkpXG5cbiAgcmV0dXJuIChcbiAgICA8UXVlcnlDbGllbnRQcm92aWRlciBjbGllbnQ9e3F1ZXJ5Q2xpZW50fT5cbiAgICAgIDxUaGVtZVByb3ZpZGVyXG4gICAgICAgIGF0dHJpYnV0ZT1cImNsYXNzXCJcbiAgICAgICAgZGVmYXVsdFRoZW1lPVwic3lzdGVtXCJcbiAgICAgICAgZW5hYmxlU3lzdGVtXG4gICAgICAgIHN0b3JhZ2VLZXk9XCJrZ3YtdGhlbWVcIlxuICAgICAgICBkaXNhYmxlVHJhbnNpdGlvbk9uQ2hhbmdlXG4gICAgICA+XG4gICAgICAgIHtjaGlsZHJlbn1cbiAgICAgICAgXG4gICAgICAgIHsvKiBUb2FzdCBub3RpZmljYXRpb25zIHdpdGggR2VybWFuIG1lc3NhZ2VzICovfVxuICAgICAgICA8VG9hc3RlclxuICAgICAgICAgIHBvc2l0aW9uPVwidG9wLXJpZ2h0XCJcbiAgICAgICAgICByZXZlcnNlT3JkZXI9e2ZhbHNlfVxuICAgICAgICAgIGd1dHRlcj17OH1cbiAgICAgICAgICBjb250YWluZXJDbGFzc05hbWU9XCJcIlxuICAgICAgICAgIGNvbnRhaW5lclN0eWxlPXt7fX1cbiAgICAgICAgICB0b2FzdE9wdGlvbnM9e3tcbiAgICAgICAgICAgIC8vIFN0eWxpbmdcbiAgICAgICAgICAgIGNsYXNzTmFtZTogJycsXG4gICAgICAgICAgICBkdXJhdGlvbjogNTAwMCxcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgIGJhY2tncm91bmQ6ICcjZmZmZmZmJyxcbiAgICAgICAgICAgICAgY29sb3I6ICcjMWYyOTM3JyxcbiAgICAgICAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkICNlNWU3ZWInLFxuICAgICAgICAgICAgICBib3JkZXJSYWRpdXM6ICcwLjVyZW0nLFxuICAgICAgICAgICAgICBmb250U2l6ZTogJzE0cHgnLFxuICAgICAgICAgICAgICBtYXhXaWR0aDogJzQwMHB4JyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAvLyBTdWNjZXNzIHRvYXN0IHN0eWxpbmdcbiAgICAgICAgICAgIHN1Y2Nlc3M6IHtcbiAgICAgICAgICAgICAgZHVyYXRpb246IDQwMDAsXG4gICAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogJyNmMGZkZjQnLFxuICAgICAgICAgICAgICAgIGJvcmRlcjogJzFweCBzb2xpZCAjYmJmN2QwJyxcbiAgICAgICAgICAgICAgICBjb2xvcjogJyMxNjY1MzQnLFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBpY29uVGhlbWU6IHtcbiAgICAgICAgICAgICAgICBwcmltYXJ5OiAnIzIyYzU1ZScsXG4gICAgICAgICAgICAgICAgc2Vjb25kYXJ5OiAnI2YwZmRmNCcsXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgLy8gRXJyb3IgdG9hc3Qgc3R5bGluZ1xuICAgICAgICAgICAgZXJyb3I6IHtcbiAgICAgICAgICAgICAgZHVyYXRpb246IDYwMDAsXG4gICAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogJyNmZWYyZjInLFxuICAgICAgICAgICAgICAgIGJvcmRlcjogJzFweCBzb2xpZCAjZmVjYWNhJyxcbiAgICAgICAgICAgICAgICBjb2xvcjogJyNkYzI2MjYnLFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBpY29uVGhlbWU6IHtcbiAgICAgICAgICAgICAgICBwcmltYXJ5OiAnI2VmNDQ0NCcsXG4gICAgICAgICAgICAgICAgc2Vjb25kYXJ5OiAnI2ZlZjJmMicsXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgLy8gTG9hZGluZyB0b2FzdCBzdHlsaW5nXG4gICAgICAgICAgICBsb2FkaW5nOiB7XG4gICAgICAgICAgICAgIGR1cmF0aW9uOiBJbmZpbml0eSxcbiAgICAgICAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAnI2ZmZmJlYicsXG4gICAgICAgICAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkICNmZGU2OGEnLFxuICAgICAgICAgICAgICAgIGNvbG9yOiAnI2Q5NzcwNicsXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH19XG4gICAgICAgIC8+XG4gICAgICAgIFxuICAgICAgICB7LyogUmVhY3QgUXVlcnkgRGV2dG9vbHMgLSBvbmx5IGluIGRldmVsb3BtZW50ICovfVxuICAgICAgICB7cHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcgJiYgKFxuICAgICAgICAgIDxSZWFjdFF1ZXJ5RGV2dG9vbHNcbiAgICAgICAgICAgIGluaXRpYWxJc09wZW49e2ZhbHNlfVxuICAgICAgICAgICAgcG9zaXRpb249XCJib3R0b20tcmlnaHRcIlxuICAgICAgICAgICAgdG9nZ2xlQnV0dG9uUHJvcHM9e3tcbiAgICAgICAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAgICAgICBtYXJnaW5MZWZ0OiAnYXV0bycsXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiAnc2NhbGUoMC44KScsXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtT3JpZ2luOiAnYm90dG9tIHJpZ2h0JyxcbiAgICAgICAgICAgICAgICB6SW5kZXg6IDk5OTk5XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9fVxuICAgICAgICAgICAgcGFuZWxQcm9wcz17e1xuICAgICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICAgIHpJbmRleDogOTk5OThcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfX1cbiAgICAgICAgICAvPlxuICAgICAgICApfVxuICAgICAgPC9UaGVtZVByb3ZpZGVyPlxuICAgIDwvUXVlcnlDbGllbnRQcm92aWRlcj5cbiAgKVxufSJdLCJuYW1lcyI6WyJSZWFjdCIsIlF1ZXJ5Q2xpZW50UHJvdmlkZXIiLCJSZWFjdFF1ZXJ5RGV2dG9vbHMiLCJUaGVtZVByb3ZpZGVyIiwiVG9hc3RlciIsImNyZWF0ZUFwcFF1ZXJ5Q2xpZW50IiwiUHJvdmlkZXJzIiwiY2hpbGRyZW4iLCJxdWVyeUNsaWVudCIsInVzZVN0YXRlIiwiY2xpZW50IiwiYXR0cmlidXRlIiwiZGVmYXVsdFRoZW1lIiwiZW5hYmxlU3lzdGVtIiwic3RvcmFnZUtleSIsImRpc2FibGVUcmFuc2l0aW9uT25DaGFuZ2UiLCJwb3NpdGlvbiIsInJldmVyc2VPcmRlciIsImd1dHRlciIsImNvbnRhaW5lckNsYXNzTmFtZSIsImNvbnRhaW5lclN0eWxlIiwidG9hc3RPcHRpb25zIiwiY2xhc3NOYW1lIiwiZHVyYXRpb24iLCJzdHlsZSIsImJhY2tncm91bmQiLCJjb2xvciIsImJvcmRlciIsImJvcmRlclJhZGl1cyIsImZvbnRTaXplIiwibWF4V2lkdGgiLCJzdWNjZXNzIiwiaWNvblRoZW1lIiwicHJpbWFyeSIsInNlY29uZGFyeSIsImVycm9yIiwibG9hZGluZyIsIkluZmluaXR5IiwiaW5pdGlhbElzT3BlbiIsInRvZ2dsZUJ1dHRvblByb3BzIiwibWFyZ2luTGVmdCIsInRyYW5zZm9ybSIsInRyYW5zZm9ybU9yaWdpbiIsInpJbmRleCIsInBhbmVsUHJvcHMiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./src/app/providers.tsx\n");

/***/ }),

/***/ "(ssr)/./src/lib/error-handling.ts":
/*!***********************************!*\
  !*** ./src/lib/error-handling.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ErrorHandler: () => (/* binding */ ErrorHandler),\n/* harmony export */   ErrorSeverity: () => (/* binding */ ErrorSeverity),\n/* harmony export */   GERMAN_ERROR_MESSAGES: () => (/* binding */ GERMAN_ERROR_MESSAGES),\n/* harmony export */   createFormErrorMessage: () => (/* binding */ createFormErrorMessage),\n/* harmony export */   enhanceError: () => (/* binding */ enhanceError),\n/* harmony export */   errorHandler: () => (/* binding */ errorHandler),\n/* harmony export */   handleMutationError: () => (/* binding */ handleMutationError),\n/* harmony export */   handleQueryError: () => (/* binding */ handleQueryError),\n/* harmony export */   isApiError: () => (/* binding */ isApiError),\n/* harmony export */   mapStatusToError: () => (/* binding */ mapStatusToError),\n/* harmony export */   shouldRetryError: () => (/* binding */ shouldRetryError)\n/* harmony export */ });\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-hot-toast */ \"(ssr)/./node_modules/react-hot-toast/dist/index.mjs\");\n// Comprehensive error handling utilities for React Query and API operations\n\n// German error messages for common scenarios\nconst GERMAN_ERROR_MESSAGES = {\n    // Network errors\n    NETWORK_ERROR: 'Netzwerkfehler. Bitte überprüfen Sie Ihre Internetverbindung.',\n    TIMEOUT_ERROR: 'Die Anfrage dauerte zu lange. Bitte versuchen Sie es erneut.',\n    CONNECTION_ERROR: 'Verbindung zum Server fehlgeschlagen.',\n    // Authentication errors\n    UNAUTHORIZED: 'Sie sind nicht angemeldet. Bitte melden Sie sich an.',\n    FORBIDDEN: 'Sie haben nicht die erforderlichen Berechtigungen für diese Aktion.',\n    TOKEN_EXPIRED: 'Ihre Sitzung ist abgelaufen. Bitte melden Sie sich erneut an.',\n    // Client errors\n    BAD_REQUEST: 'Ungültige Anfrage. Bitte überprüfen Sie Ihre Eingaben.',\n    NOT_FOUND: 'Die angeforderte Ressource wurde nicht gefunden.',\n    CONFLICT: 'Die Aktion kann nicht ausgeführt werden, da ein Konflikt vorliegt.',\n    VALIDATION_ERROR: 'Eingabevalidierung fehlgeschlagen. Bitte korrigieren Sie Ihre Eingaben.',\n    // Server errors\n    INTERNAL_SERVER_ERROR: 'Ein Serverfehler ist aufgetreten. Bitte versuchen Sie es später erneut.',\n    SERVICE_UNAVAILABLE: 'Der Service ist momentan nicht verfügbar. Bitte versuchen Sie es später.',\n    GATEWAY_TIMEOUT: 'Server-Timeout. Bitte versuchen Sie es erneut.',\n    // Rate limiting\n    TOO_MANY_REQUESTS: 'Zu viele Anfragen. Bitte warten Sie einen Moment.',\n    // Generic fallbacks\n    UNKNOWN_ERROR: 'Ein unbekannter Fehler ist aufgetreten.',\n    OPERATION_FAILED: 'Die Aktion konnte nicht ausgeführt werden.'\n};\n// Error severity levels\nvar ErrorSeverity = /*#__PURE__*/ function(ErrorSeverity) {\n    ErrorSeverity[\"LOW\"] = \"low\";\n    ErrorSeverity[\"MEDIUM\"] = \"medium\";\n    ErrorSeverity[\"HIGH\"] = \"high\";\n    ErrorSeverity[\"CRITICAL\"] = \"critical\";\n    return ErrorSeverity;\n}({});\n/**\n * Maps HTTP status codes to German error messages and severity levels\n */ function mapStatusToError(status, context) {\n    const errorMap = {\n        // 4xx Client Errors\n        400: {\n            message: GERMAN_ERROR_MESSAGES.BAD_REQUEST,\n            severity: \"medium\"\n        },\n        401: {\n            message: GERMAN_ERROR_MESSAGES.UNAUTHORIZED,\n            severity: \"high\"\n        },\n        403: {\n            message: GERMAN_ERROR_MESSAGES.FORBIDDEN,\n            severity: \"high\"\n        },\n        404: {\n            message: GERMAN_ERROR_MESSAGES.NOT_FOUND,\n            severity: \"low\"\n        },\n        408: {\n            message: GERMAN_ERROR_MESSAGES.TIMEOUT_ERROR,\n            severity: \"medium\"\n        },\n        409: {\n            message: GERMAN_ERROR_MESSAGES.CONFLICT,\n            severity: \"medium\"\n        },\n        422: {\n            message: GERMAN_ERROR_MESSAGES.VALIDATION_ERROR,\n            severity: \"medium\"\n        },\n        429: {\n            message: GERMAN_ERROR_MESSAGES.TOO_MANY_REQUESTS,\n            severity: \"medium\"\n        },\n        // 5xx Server Errors\n        500: {\n            message: GERMAN_ERROR_MESSAGES.INTERNAL_SERVER_ERROR,\n            severity: \"high\"\n        },\n        502: {\n            message: GERMAN_ERROR_MESSAGES.SERVICE_UNAVAILABLE,\n            severity: \"high\"\n        },\n        503: {\n            message: GERMAN_ERROR_MESSAGES.SERVICE_UNAVAILABLE,\n            severity: \"high\"\n        },\n        504: {\n            message: GERMAN_ERROR_MESSAGES.GATEWAY_TIMEOUT,\n            severity: \"high\"\n        }\n    };\n    return errorMap[status] || {\n        message: GERMAN_ERROR_MESSAGES.UNKNOWN_ERROR,\n        severity: \"medium\"\n    };\n}\n/**\n * Enhances a basic API error with additional context and German messages\n */ function enhanceError(error, context) {\n    const { message: userMessage, severity } = mapStatusToError(error.status, context);\n    return {\n        ...error,\n        severity,\n        context,\n        timestamp: new Date(),\n        userMessage,\n        technicalMessage: error.message !== userMessage ? error.message : undefined\n    };\n}\n/**\n * Centralized error handler for React Query operations\n */ class ErrorHandler {\n    static getInstance() {\n        if (!ErrorHandler.instance) {\n            ErrorHandler.instance = new ErrorHandler();\n        }\n        return ErrorHandler.instance;\n    }\n    /**\n   * Handle and log an error\n   */ handleError(error, context) {\n        let enhancedError;\n        if ('status' in error) {\n            // API Error\n            enhancedError = enhanceError(error, context);\n        } else {\n            // Generic Error\n            enhancedError = {\n                message: error.message,\n                status: 0,\n                details: [],\n                severity: \"medium\",\n                context,\n                timestamp: new Date(),\n                userMessage: this.getGenericErrorMessage(error.message),\n                technicalMessage: error.message\n            };\n        }\n        // Log the error\n        this.logError(enhancedError);\n        // Show appropriate notification\n        this.showErrorNotification(enhancedError);\n        return enhancedError;\n    }\n    /**\n   * Handle React Query errors specifically\n   */ handleQueryError(error, context) {\n        console.error(`Query Error in ${context}:`, error);\n        if (error?.status) {\n            this.handleError(error, context);\n        } else {\n            // Network or other errors\n            const enhancedError = {\n                message: error?.message || 'Unknown error',\n                status: 0,\n                details: [],\n                severity: \"medium\",\n                context,\n                timestamp: new Date(),\n                userMessage: GERMAN_ERROR_MESSAGES.NETWORK_ERROR,\n                technicalMessage: error?.message\n            };\n            this.logError(enhancedError);\n            this.showErrorNotification(enhancedError);\n        }\n    }\n    /**\n   * Handle mutation errors with additional context\n   */ handleMutationError(error, operation, data) {\n        console.error(`Mutation Error (${operation}):`, error, 'Data:', data);\n        const context = `${operation} operation`;\n        this.handleQueryError(error, context);\n    }\n    /**\n   * Show appropriate error notification based on severity\n   */ showErrorNotification(error) {\n        const duration = this.getNotificationDuration(error.severity);\n        switch(error.severity){\n            case \"critical\":\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error(error.userMessage, {\n                    duration: duration,\n                    position: 'top-center',\n                    style: {\n                        background: '#fee2e2',\n                        border: '1px solid #fecaca',\n                        color: '#dc2626',\n                        fontWeight: '600'\n                    }\n                });\n                break;\n            case \"high\":\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error(error.userMessage, {\n                    duration: duration,\n                    position: 'top-right',\n                    style: {\n                        background: '#fef2f2',\n                        border: '1px solid #fecaca',\n                        color: '#dc2626'\n                    }\n                });\n                break;\n            case \"medium\":\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error(error.userMessage, {\n                    duration: duration,\n                    position: 'top-right'\n                });\n                break;\n            case \"low\":\n                // For low severity errors, show a less intrusive notification\n                if (true) {\n                    react_hot_toast__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error(error.userMessage, {\n                        duration: 3000,\n                        position: 'bottom-right'\n                    });\n                }\n                break;\n        }\n    }\n    /**\n   * Get notification duration based on severity\n   */ getNotificationDuration(severity) {\n        switch(severity){\n            case \"critical\":\n                return 10000 // 10 seconds\n                ;\n            case \"high\":\n                return 8000 // 8 seconds\n                ;\n            case \"medium\":\n                return 6000 // 6 seconds\n                ;\n            case \"low\":\n                return 3000 // 3 seconds\n                ;\n            default:\n                return 5000 // 5 seconds\n                ;\n        }\n    }\n    /**\n   * Log error to internal array (could be extended to send to external service)\n   */ logError(error) {\n        this.errorLog.unshift(error);\n        // Keep log size manageable\n        if (this.errorLog.length > this.maxLogSize) {\n            this.errorLog = this.errorLog.slice(0, this.maxLogSize);\n        }\n        // In production, you might want to send critical errors to a logging service\n        if (false) {}\n    }\n    /**\n   * Get generic error message for unknown errors\n   */ getGenericErrorMessage(technicalMessage) {\n        if (technicalMessage.toLowerCase().includes('network')) {\n            return GERMAN_ERROR_MESSAGES.NETWORK_ERROR;\n        }\n        if (technicalMessage.toLowerCase().includes('timeout')) {\n            return GERMAN_ERROR_MESSAGES.TIMEOUT_ERROR;\n        }\n        return GERMAN_ERROR_MESSAGES.UNKNOWN_ERROR;\n    }\n    /**\n   * Send critical errors to external logging service\n   */ sendToLoggingService(error) {\n        // Implementation would depend on your logging service\n        // Example: Sentry, LogRocket, custom endpoint, etc.\n        console.error('Critical Error:', error);\n    }\n    /**\n   * Get recent errors for debugging\n   */ getRecentErrors(limit = 10) {\n        return this.errorLog.slice(0, limit);\n    }\n    /**\n   * Clear error log\n   */ clearErrorLog() {\n        this.errorLog = [];\n    }\n    /**\n   * Get error statistics\n   */ getErrorStats() {\n        const stats = {\n            total: this.errorLog.length,\n            bySeverity: {\n                [\"low\"]: 0,\n                [\"medium\"]: 0,\n                [\"high\"]: 0,\n                [\"critical\"]: 0\n            },\n            byStatus: {}\n        };\n        this.errorLog.forEach((error)=>{\n            stats.bySeverity[error.severity]++;\n            stats.byStatus[error.status] = (stats.byStatus[error.status] || 0) + 1;\n        });\n        return stats;\n    }\n    constructor(){\n        this.errorLog = [];\n        this.maxLogSize = 100;\n    }\n}\n// Export singleton instance\nconst errorHandler = ErrorHandler.getInstance();\n/**\n * React Query error handler function\n */ const handleQueryError = (error, context)=>{\n    errorHandler.handleQueryError(error, context);\n};\n/**\n * React Query mutation error handler function\n */ const handleMutationError = (error, operation, data)=>{\n    errorHandler.handleMutationError(error, operation, data);\n};\n/**\n * Utility to create user-friendly error messages for forms\n */ function createFormErrorMessage(error) {\n    const result = {\n        fields: {}\n    };\n    if (error.status === 422 && error.details?.length) {\n        // Validation errors - map to form fields\n        error.details.forEach((detail)=>{\n            if (typeof detail === 'string') {\n                result.general = detail;\n            } else {\n                // Assume detail has field and message properties\n                const fieldError = detail;\n                if (fieldError.field && fieldError.message) {\n                    result.fields[fieldError.field] = fieldError.message;\n                }\n            }\n        });\n    } else {\n        // General error\n        const { message } = mapStatusToError(error.status);\n        result.general = message;\n    }\n    return result;\n}\n/**\n * Utility to check if an error should be retried\n */ function shouldRetryError(error) {\n    // Don't retry client errors (4xx) except rate limiting\n    if (error.status >= 400 && error.status < 500 && error.status !== 429) {\n        return false;\n    }\n    // Retry server errors and network errors\n    return true;\n}\n/**\n * Type guard to check if error is an API error\n */ function isApiError(error) {\n    return error && typeof error.status === 'number' && typeof error.message === 'string';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/lib/error-handling.ts\n");

/***/ }),

/***/ "(ssr)/./src/lib/query-keys.ts":
/*!*******************************!*\
  !*** ./src/lib/query-keys.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CACHE_TIMES: () => (/* binding */ CACHE_TIMES),\n/* harmony export */   STALE_TIMES: () => (/* binding */ STALE_TIMES),\n/* harmony export */   mutationKeys: () => (/* binding */ mutationKeys),\n/* harmony export */   queryKeyHelpers: () => (/* binding */ queryKeyHelpers),\n/* harmony export */   queryKeys: () => (/* binding */ queryKeys)\n/* harmony export */ });\n// Query Keys Factory for React Query Cache Management\n// Provides consistent and type-safe query keys across the application\n/**\n * Centralized query keys factory following React Query best practices\n * Each entity has its own namespace with specific query patterns\n */ const queryKeys = {\n    // Application-wide keys\n    all: [\n        'kgv'\n    ],\n    // Authentication & User\n    auth: {\n        all: ()=>[\n                ...queryKeys.all,\n                'auth'\n            ],\n        user: ()=>[\n                ...queryKeys.auth.all(),\n                'user'\n            ],\n        profile: ()=>[\n                ...queryKeys.auth.all(),\n                'profile'\n            ],\n        permissions: ()=>[\n                ...queryKeys.auth.all(),\n                'permissions'\n            ]\n    },\n    // Bezirke (Districts)\n    bezirke: {\n        all: ()=>[\n                ...queryKeys.all,\n                'bezirke'\n            ],\n        lists: ()=>[\n                ...queryKeys.bezirke.all(),\n                'list'\n            ],\n        list: (filters)=>[\n                ...queryKeys.bezirke.lists(),\n                filters\n            ],\n        details: ()=>[\n                ...queryKeys.bezirke.all(),\n                'detail'\n            ],\n        detail: (id)=>[\n                ...queryKeys.bezirke.details(),\n                id\n            ],\n        statistics: ()=>[\n                ...queryKeys.bezirke.all(),\n                'statistics'\n            ],\n        search: (query)=>[\n                ...queryKeys.bezirke.all(),\n                'search',\n                query\n            ],\n        // Cached lists for dropdowns/selectors\n        dropdown: ()=>[\n                ...queryKeys.bezirke.all(),\n                'dropdown'\n            ],\n        // Relations\n        parzellen: (bezirkId)=>[\n                ...queryKeys.bezirke.detail(bezirkId),\n                'parzellen'\n            ],\n        antraege: (bezirkId)=>[\n                ...queryKeys.bezirke.detail(bezirkId),\n                'antraege'\n            ]\n    },\n    // Parzellen (Plots)\n    parzellen: {\n        all: ()=>[\n                ...queryKeys.all,\n                'parzellen'\n            ],\n        lists: ()=>[\n                ...queryKeys.parzellen.all(),\n                'list'\n            ],\n        list: (filters)=>[\n                ...queryKeys.parzellen.lists(),\n                filters\n            ],\n        details: ()=>[\n                ...queryKeys.parzellen.all(),\n                'detail'\n            ],\n        detail: (id)=>[\n                ...queryKeys.parzellen.details(),\n                id\n            ],\n        statistics: ()=>[\n                ...queryKeys.parzellen.all(),\n                'statistics'\n            ],\n        search: (query)=>[\n                ...queryKeys.parzellen.all(),\n                'search',\n                query\n            ],\n        // Filtered lists\n        byBezirk: (bezirkId, filters)=>[\n                ...queryKeys.parzellen.lists(),\n                'bezirk',\n                bezirkId,\n                filters\n            ],\n        available: (filters)=>[\n                ...queryKeys.parzellen.lists(),\n                'available',\n                filters\n            ],\n        assigned: (filters)=>[\n                ...queryKeys.parzellen.lists(),\n                'assigned',\n                filters\n            ],\n        // Relations\n        history: (parzelleId)=>[\n                ...queryKeys.parzellen.detail(parzelleId),\n                'history'\n            ],\n        assignments: (parzelleId)=>[\n                ...queryKeys.parzellen.detail(parzelleId),\n                'assignments'\n            ]\n    },\n    // Anträge (Applications)\n    antraege: {\n        all: ()=>[\n                ...queryKeys.all,\n                'antraege'\n            ],\n        lists: ()=>[\n                ...queryKeys.antraege.all(),\n                'list'\n            ],\n        list: (filters, pagination)=>[\n                ...queryKeys.antraege.lists(),\n                filters,\n                pagination\n            ],\n        details: ()=>[\n                ...queryKeys.antraege.all(),\n                'detail'\n            ],\n        detail: (id)=>[\n                ...queryKeys.antraege.details(),\n                id\n            ],\n        statistics: ()=>[\n                ...queryKeys.antraege.all(),\n                'statistics'\n            ],\n        search: (query)=>[\n                ...queryKeys.antraege.all(),\n                'search',\n                query\n            ],\n        // Status-based lists\n        pending: (filters)=>[\n                ...queryKeys.antraege.lists(),\n                'pending',\n                filters\n            ],\n        approved: (filters)=>[\n                ...queryKeys.antraege.lists(),\n                'approved',\n                filters\n            ],\n        rejected: (filters)=>[\n                ...queryKeys.antraege.lists(),\n                'rejected',\n                filters\n            ],\n        // Relations\n        history: (antragId)=>[\n                ...queryKeys.antraege.detail(antragId),\n                'history'\n            ],\n        documents: (antragId)=>[\n                ...queryKeys.antraege.detail(antragId),\n                'documents'\n            ]\n    },\n    // Dashboard & Analytics\n    dashboard: {\n        all: ()=>[\n                ...queryKeys.all,\n                'dashboard'\n            ],\n        stats: ()=>[\n                ...queryKeys.dashboard.all(),\n                'stats'\n            ],\n        charts: ()=>[\n                ...queryKeys.dashboard.all(),\n                'charts'\n            ],\n        activity: ()=>[\n                ...queryKeys.dashboard.all(),\n                'activity'\n            ],\n        trends: (period)=>[\n                ...queryKeys.dashboard.all(),\n                'trends',\n                period\n            ]\n    },\n    // System & Configuration\n    system: {\n        all: ()=>[\n                ...queryKeys.all,\n                'system'\n            ],\n        health: ()=>[\n                ...queryKeys.system.all(),\n                'health'\n            ],\n        config: ()=>[\n                ...queryKeys.system.all(),\n                'config'\n            ],\n        notifications: ()=>[\n                ...queryKeys.system.all(),\n                'notifications'\n            ]\n    },\n    // Reports & Exports\n    reports: {\n        all: ()=>[\n                ...queryKeys.all,\n                'reports'\n            ],\n        export: (type, filters)=>[\n                ...queryKeys.reports.all(),\n                'export',\n                type,\n                filters\n            ],\n        templates: ()=>[\n                ...queryKeys.reports.all(),\n                'templates'\n            ]\n    }\n};\n/**\n * Helper functions for common query key operations\n */ const queryKeyHelpers = {\n    /**\n   * Invalidate all queries for a specific entity\n   */ invalidateEntity: (queryClient, entity)=>{\n        return queryClient.invalidateQueries({\n            queryKey: queryKeys[entity].all()\n        });\n    },\n    /**\n   * Remove all queries for a specific entity\n   */ removeEntity: (queryClient, entity)=>{\n        return queryClient.removeQueries({\n            queryKey: queryKeys[entity].all()\n        });\n    },\n    /**\n   * Prefetch entity list with filters\n   */ prefetchList: async (queryClient, entity, filters)=>{\n        switch(entity){\n            case 'bezirke':\n                return queryClient.prefetchQuery({\n                    queryKey: queryKeys.bezirke.list(filters),\n                    staleTime: 5 * 60 * 1000\n                });\n            case 'parzellen':\n                return queryClient.prefetchQuery({\n                    queryKey: queryKeys.parzellen.list(filters),\n                    staleTime: 5 * 60 * 1000\n                });\n            case 'antraege':\n                return queryClient.prefetchQuery({\n                    queryKey: queryKeys.antraege.list(filters),\n                    staleTime: 2 * 60 * 1000\n                });\n        }\n    },\n    /**\n   * Get cached data without triggering a fetch\n   */ getCachedData: (queryClient, queryKey)=>{\n        return queryClient.getQueryData(queryKey);\n    },\n    /**\n   * Set cached data\n   */ setCachedData: (queryClient, queryKey, data)=>{\n        return queryClient.setQueryData(queryKey, data);\n    },\n    /**\n   * Check if query is currently fetching\n   */ isFetching: (queryClient, queryKey)=>{\n        return queryClient.isFetching({\n            queryKey\n        }) > 0;\n    },\n    /**\n   * Reset query error state\n   */ resetQueryError: (queryClient, queryKey)=>{\n        return queryClient.resetQueries({\n            queryKey\n        });\n    }\n};\n/**\n * Mutation keys for consistent cache invalidation\n */ const mutationKeys = {\n    // Bezirke mutations\n    bezirke: {\n        create: 'create-bezirk',\n        update: 'update-bezirk',\n        delete: 'delete-bezirk'\n    },\n    // Parzellen mutations\n    parzellen: {\n        create: 'create-parzelle',\n        update: 'update-parzelle',\n        delete: 'delete-parzelle',\n        assign: 'assign-parzelle',\n        unassign: 'unassign-parzelle'\n    },\n    // Anträge mutations\n    antraege: {\n        create: 'create-antrag',\n        update: 'update-antrag',\n        updateStatus: 'update-antrag-status',\n        delete: 'delete-antrag'\n    },\n    // Authentication mutations\n    auth: {\n        login: 'login',\n        logout: 'logout',\n        refresh: 'refresh-token',\n        register: 'register'\n    }\n};\n/**\n * Default stale times for different types of data\n */ const STALE_TIMES = {\n    // Static/configuration data - 30 minutes\n    STATIC: 30 * 60 * 1000,\n    // Entity lists - 5 minutes\n    LISTS: 5 * 60 * 1000,\n    // Entity details - 10 minutes\n    DETAILS: 10 * 60 * 1000,\n    // Dynamic data (applications, activity) - 2 minutes\n    DYNAMIC: 2 * 60 * 1000,\n    // Real-time data (notifications, live stats) - 30 seconds\n    REALTIME: 30 * 1000\n};\n/**\n * Default cache times for different types of data\n */ const CACHE_TIMES = {\n    // Keep static data for 1 hour\n    STATIC: 60 * 60 * 1000,\n    // Keep lists for 15 minutes\n    LISTS: 15 * 60 * 1000,\n    // Keep details for 30 minutes\n    DETAILS: 30 * 60 * 1000,\n    // Keep dynamic data for 5 minutes\n    DYNAMIC: 5 * 60 * 1000,\n    // Keep real-time data for 1 minute\n    REALTIME: 60 * 1000\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/lib/query-keys.ts\n");

/***/ }),

/***/ "(ssr)/./src/lib/react-query-config.ts":
/*!***************************************!*\
  !*** ./src/lib/react-query-config.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearAllCache: () => (/* binding */ clearAllCache),\n/* harmony export */   configureQueryClient: () => (/* binding */ configureQueryClient),\n/* harmony export */   createAppQueryClient: () => (/* binding */ createAppQueryClient),\n/* harmony export */   createQueryClient: () => (/* binding */ createQueryClient),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   devTools: () => (/* binding */ devTools),\n/* harmony export */   invalidateAuthQueries: () => (/* binding */ invalidateAuthQueries),\n/* harmony export */   prefetchCriticalData: () => (/* binding */ prefetchCriticalData),\n/* harmony export */   queryPerformance: () => (/* binding */ queryPerformance)\n/* harmony export */ });\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/queryClient.js\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/queryCache.js\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/mutationCache.js\");\n/* harmony import */ var _error_handling__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error-handling */ \"(ssr)/./src/lib/error-handling.ts\");\n/* harmony import */ var _query_keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query-keys */ \"(ssr)/./src/lib/query-keys.ts\");\n// React Query configuration with enhanced error handling and German localization\n\n\n\n/**\n * Create a properly configured QueryClient for the KGV application\n */ function createQueryClient() {\n    return new _tanstack_react_query__WEBPACK_IMPORTED_MODULE_2__.QueryClient({\n        defaultOptions: {\n            queries: {\n                // Default stale time for lists\n                staleTime: _query_keys__WEBPACK_IMPORTED_MODULE_1__.STALE_TIMES.LISTS,\n                // Default cache time for lists\n                gcTime: _query_keys__WEBPACK_IMPORTED_MODULE_1__.CACHE_TIMES.LISTS,\n                // Retry configuration with intelligent error handling\n                retry: (failureCount, error)=>{\n                    // Don't retry on client errors except rate limiting\n                    if ((0,_error_handling__WEBPACK_IMPORTED_MODULE_0__.isApiError)(error) && !(0,_error_handling__WEBPACK_IMPORTED_MODULE_0__.shouldRetryError)(error)) {\n                        return false;\n                    }\n                    // Max 3 retries for network/server errors\n                    return failureCount < 3;\n                },\n                // Retry delay with exponential backoff (max 30 seconds)\n                retryDelay: (attemptIndex)=>Math.min(1000 * 2 ** attemptIndex, 30000),\n                // Refetch configuration\n                refetchOnWindowFocus: true,\n                refetchOnReconnect: 'always',\n                refetchInterval: false,\n                // Network mode - online first, then cache\n                networkMode: 'online',\n                // Error handling\n                throwOnError: false,\n                // Use error boundary for critical server errors\n                useErrorBoundary: (error)=>{\n                    return (0,_error_handling__WEBPACK_IMPORTED_MODULE_0__.isApiError)(error) && error.status >= 500;\n                },\n                // Meta information for error context\n                meta: {\n                    errorContext: 'query'\n                }\n            },\n            mutations: {\n                // Retry configuration for mutations\n                retry: (failureCount, error)=>{\n                    // Don't retry client errors (4xx)\n                    if ((0,_error_handling__WEBPACK_IMPORTED_MODULE_0__.isApiError)(error) && error.status >= 400 && error.status < 500) {\n                        return false;\n                    }\n                    // Retry once for server errors or network issues\n                    return failureCount < 1;\n                },\n                // Retry delay for mutations (longer than queries)\n                retryDelay: 2000,\n                // Use error boundary for critical mutation errors\n                useErrorBoundary: (error)=>{\n                    return (0,_error_handling__WEBPACK_IMPORTED_MODULE_0__.isApiError)(error) && error.status >= 500;\n                },\n                // Network mode for mutations\n                networkMode: 'online',\n                // Meta information\n                meta: {\n                    errorContext: 'mutation'\n                }\n            }\n        },\n        // Global query cache with error handling\n        queryCache: new _tanstack_react_query__WEBPACK_IMPORTED_MODULE_3__.QueryCache({\n            onError: (error, query)=>{\n                const context = `Query: ${JSON.stringify(query.queryKey)}`;\n                _error_handling__WEBPACK_IMPORTED_MODULE_0__.errorHandler.handleQueryError(error, context);\n                // Log query details in development\n                if (true) {\n                    console.group(`❌ Query Error`);\n                    console.error('Error:', error);\n                    console.log('Query Key:', query.queryKey);\n                    console.log('Query State:', query.state);\n                    console.groupEnd();\n                }\n            },\n            onSuccess: (data, query)=>{\n                // Log successful queries in development\n                if ( true && query.queryKey[0] !== 'kgv') {\n                    console.log(`✅ Query Success:`, query.queryKey);\n                }\n            },\n            onSettled: (data, error, query)=>{\n                // Query performance monitoring in development\n                if (true) {\n                    const duration = Date.now() - (query.state.dataUpdatedAt || 0);\n                    if (duration > 1000) {\n                        console.warn(`🐌 Slow Query (${duration}ms):`, query.queryKey);\n                    }\n                }\n            }\n        }),\n        // Global mutation cache with error handling\n        mutationCache: new _tanstack_react_query__WEBPACK_IMPORTED_MODULE_4__.MutationCache({\n            onError: (error, variables, context, mutation)=>{\n                const operation = mutation.options.mutationKey || 'unknown';\n                _error_handling__WEBPACK_IMPORTED_MODULE_0__.errorHandler.handleMutationError(error, operation, variables);\n                // Log mutation details in development\n                if (true) {\n                    console.group(`❌ Mutation Error`);\n                    console.error('Error:', error);\n                    console.log('Operation:', operation);\n                    console.log('Variables:', variables);\n                    console.log('Context:', context);\n                    console.groupEnd();\n                }\n            },\n            onSuccess: (data, variables, context, mutation)=>{\n                // Log successful mutations in development\n                if (true) {\n                    const operation = mutation.options.mutationKey || 'unknown';\n                    console.log(`✅ Mutation Success:`, operation);\n                }\n            },\n            onSettled: (data, error, variables, context, mutation)=>{\n                // Mutation performance monitoring in development\n                if (true) {\n                    const duration = Date.now() - (mutation.state.submittedAt || 0);\n                    if (duration > 3000) {\n                        const operation = mutation.options.mutationKey || 'unknown';\n                        console.warn(`🐌 Slow Mutation (${duration}ms):`, operation);\n                    }\n                }\n            }\n        })\n    });\n}\n/**\n * Configure query client for different environments\n */ function configureQueryClient(environment = 'production') {\n    const baseClient = createQueryClient();\n    switch(environment){\n        case 'development':\n            // More aggressive refetching and shorter cache times for development\n            baseClient.setDefaultOptions({\n                queries: {\n                    staleTime: _query_keys__WEBPACK_IMPORTED_MODULE_1__.STALE_TIMES.DYNAMIC,\n                    gcTime: _query_keys__WEBPACK_IMPORTED_MODULE_1__.CACHE_TIMES.DYNAMIC,\n                    refetchOnWindowFocus: true,\n                    refetchInterval: false\n                }\n            });\n            break;\n        case 'test':\n            // Disable network requests and retries for testing\n            baseClient.setDefaultOptions({\n                queries: {\n                    retry: false,\n                    staleTime: Infinity,\n                    gcTime: Infinity,\n                    refetchOnWindowFocus: false,\n                    refetchOnReconnect: false,\n                    networkMode: 'offlineFirst'\n                },\n                mutations: {\n                    retry: false,\n                    networkMode: 'offlineFirst'\n                }\n            });\n            break;\n        case 'production':\n            // Optimized settings for production\n            baseClient.setDefaultOptions({\n                queries: {\n                    staleTime: _query_keys__WEBPACK_IMPORTED_MODULE_1__.STALE_TIMES.LISTS,\n                    gcTime: _query_keys__WEBPACK_IMPORTED_MODULE_1__.CACHE_TIMES.LISTS,\n                    refetchOnWindowFocus: true,\n                    refetchOnReconnect: 'always'\n                }\n            });\n            break;\n    }\n    return baseClient;\n}\n/**\n * Query client factory with environment detection\n */ function createAppQueryClient() {\n    const environment = \"development\";\n    return configureQueryClient(environment);\n}\n/**\n * Utility to clear all cache data (useful for logout)\n */ function clearAllCache(queryClient) {\n    queryClient.clear();\n    // Also clear error log\n    _error_handling__WEBPACK_IMPORTED_MODULE_0__.errorHandler.clearErrorLog();\n}\n/**\n * Utility to invalidate authentication-related queries\n */ function invalidateAuthQueries(queryClient) {\n    queryClient.invalidateQueries({\n        queryKey: [\n            'kgv',\n            'auth'\n        ]\n    });\n    queryClient.invalidateQueries({\n        queryKey: [\n            'kgv',\n            'dashboard'\n        ]\n    });\n}\n/**\n * Utility to prefetch critical data on app startup\n */ async function prefetchCriticalData(queryClient) {\n    const prefetchPromises = [\n        // Prefetch user data if authenticated\n        queryClient.prefetchQuery({\n            queryKey: [\n                'kgv',\n                'auth',\n                'user'\n            ],\n            staleTime: _query_keys__WEBPACK_IMPORTED_MODULE_1__.STALE_TIMES.STATIC\n        }),\n        // Prefetch dashboard stats\n        queryClient.prefetchQuery({\n            queryKey: [\n                'kgv',\n                'dashboard',\n                'stats'\n            ],\n            staleTime: _query_keys__WEBPACK_IMPORTED_MODULE_1__.STALE_TIMES.DYNAMIC\n        }),\n        // Prefetch dropdown data for forms\n        queryClient.prefetchQuery({\n            queryKey: [\n                'kgv',\n                'bezirke',\n                'dropdown'\n            ],\n            staleTime: _query_keys__WEBPACK_IMPORTED_MODULE_1__.STALE_TIMES.STATIC\n        })\n    ];\n    try {\n        await Promise.allSettled(prefetchPromises);\n    } catch (error) {\n        console.warn('Some prefetch operations failed:', error);\n    }\n}\n/**\n * Performance monitoring utilities\n */ const queryPerformance = {\n    /**\n   * Log query performance metrics\n   */ logMetrics: (queryClient)=>{\n        if (false) {}\n        const cache = queryClient.getQueryCache();\n        const queries = cache.getAll();\n        console.group('📊 Query Performance Metrics');\n        console.log(`Total Queries: ${queries.length}`);\n        console.log(`Active Queries: ${queries.filter((q)=>q.getObserversCount() > 0).length}`);\n        console.log(`Stale Queries: ${queries.filter((q)=>q.isStale()).length}`);\n        console.log(`Error Queries: ${queries.filter((q)=>q.state.status === 'error').length}`);\n        // Memory usage estimate\n        const memoryUsage = JSON.stringify(cache).length;\n        console.log(`Estimated Cache Size: ${(memoryUsage / 1024).toFixed(2)} KB`);\n        console.groupEnd();\n    },\n    /**\n   * Get slow queries (queries that took longer than threshold)\n   */ getSlowQueries: (queryClient, thresholdMs = 1000)=>{\n        const cache = queryClient.getQueryCache();\n        const queries = cache.getAll();\n        return queries.filter((query)=>{\n            const duration = (query.state.dataUpdatedAt || 0) - (query.state.fetchFailureTime || 0);\n            return duration > thresholdMs;\n        }).map((query)=>({\n                queryKey: query.queryKey,\n                duration: (query.state.dataUpdatedAt || 0) - (query.state.fetchFailureTime || 0),\n                status: query.state.status\n            }));\n    }\n};\n/**\n * Dev tools integration\n */ const devTools = {\n    /**\n   * Export cache data for debugging\n   */ exportCache: (queryClient)=>{\n        if (false) {}\n        const cache = queryClient.getQueryCache();\n        const data = cache.getAll().reduce((acc, query)=>{\n            acc[JSON.stringify(query.queryKey)] = {\n                data: query.state.data,\n                status: query.state.status,\n                dataUpdatedAt: query.state.dataUpdatedAt,\n                error: query.state.error\n            };\n            return acc;\n        }, {});\n        console.log('Cache Export:', data);\n        return data;\n    },\n    /**\n   * Clear specific query pattern\n   */ clearPattern: (queryClient, pattern)=>{\n        if (false) {}\n        queryClient.removeQueries({\n            queryKey: pattern\n        });\n        console.log(`Cleared queries matching:`, pattern);\n    }\n};\n// Export default configured client\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (createAppQueryClient);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/lib/react-query-config.ts\n");

/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/dynamic-access-async-storage.external":
/*!***************************************************************************************!*\
  !*** external "next/dist/server/app-render/dynamic-access-async-storage.external.js" ***!
  \***************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/dynamic-access-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "module":
/*!*************************!*\
  !*** external "module" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("module");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/is-bot":
/*!***********************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/is-bot" ***!
  \***********************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/is-bot");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["commons"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2F_not-found%2Fpage&page=%2F_not-found%2Fpage&appPaths=&pagePath=%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-not-found.js&appDir=%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fandrekirst%2Fgit%2Fgithub%2Fandrekirst%2Fkgv_migration%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();